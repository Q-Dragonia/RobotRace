
RobotRace.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000d96  00000e2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d96  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800112  00800112  00000e3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d7b  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000831  00000000  00000000  00001ce3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000062c  00000000  00000000  00002514  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00002b40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000551  00000000  00000000  00002c84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000463  00000000  00000000  000031d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003638  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e9       	ldi	r30, 0x96	; 150
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 31       	cpi	r26, 0x13	; 19
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 07 01 	call	0x20e	; 0x20e <main>
  9e:	0c 94 c9 06 	jmp	0xd92	; 0xd92 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <update_pwm>:
char receiveMessage(){
	// Wait for data to be received
	while (!(UCSR0A & (1<<RXC0)));
	// Get and return received data from buffer
	return UDR0;
}
  a6:	21 e0       	ldi	r18, 0x01	; 1
  a8:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <__data_end>
  ac:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <__data_end>
  b0:	22 23       	and	r18, r18
  b2:	21 f0       	breq	.+8      	; 0xbc <update_pwm+0x16>
  b4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  b8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  bc:	08 95       	ret

000000be <init_ADC>:
  be:	ec e7       	ldi	r30, 0x7C	; 124
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	80 64       	ori	r24, 0x40	; 64
  c6:	80 83       	st	Z, r24
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	87 60       	ori	r24, 0x07	; 7
  d0:	80 83       	st	Z, r24
  d2:	80 81       	ld	r24, Z
  d4:	80 68       	ori	r24, 0x80	; 128
  d6:	80 83       	st	Z, r24
  d8:	08 95       	ret

000000da <readADC>:
  da:	ec e7       	ldi	r30, 0x7C	; 124
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	90 81       	ld	r25, Z
  e0:	90 7f       	andi	r25, 0xF0	; 240
  e2:	8f 70       	andi	r24, 0x0F	; 15
  e4:	89 2b       	or	r24, r25
  e6:	80 83       	st	Z, r24
  e8:	ea e7       	ldi	r30, 0x7A	; 122
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	80 64       	ori	r24, 0x40	; 64
  f0:	80 83       	st	Z, r24
  f2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  f6:	86 fd       	sbrc	r24, 6
  f8:	fc cf       	rjmp	.-8      	; 0xf2 <readADC+0x18>
  fa:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  fe:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 102:	08 95       	ret

00000104 <init_USART>:
 104:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 108:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 10c:	88 e1       	ldi	r24, 0x18	; 24
 10e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 112:	86 e0       	ldi	r24, 0x06	; 6
 114:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 118:	08 95       	ret

0000011a <transferMessage>:
 11a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 11e:	95 ff       	sbrs	r25, 5
 120:	fc cf       	rjmp	.-8      	; 0x11a <transferMessage>
 122:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 126:	08 95       	ret

00000128 <init_driving_PWM>:

#include "definitions.h"

void init_driving_PWM() {
	// Set OC0A (PD6) and OC0B (PD5) as output pins, motor speed pins
	DDRD |= (1 << DDD6) | (1 << DDD5);
 128:	8a b1       	in	r24, 0x0a	; 10
 12a:	80 66       	ori	r24, 0x60	; 96
 12c:	8a b9       	out	0x0a, r24	; 10
	// Configure Timer0 for Fast PWM mode, non-inverted output (WGM02:0 = 3)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM01) | (1 << WGM00);
 12e:	84 b5       	in	r24, 0x24	; 36
 130:	83 6a       	ori	r24, 0xA3	; 163
 132:	84 bd       	out	0x24, r24	; 36
	//TCCR0B |= (1 << WGM02);

	// Set prescaler to 64
	TCCR0B |= (1 << CS01) | (1 << CS00);
 134:	85 b5       	in	r24, 0x25	; 37
 136:	83 60       	ori	r24, 0x03	; 3
 138:	85 bd       	out	0x25, r24	; 37
 13a:	08 95       	ret

0000013c <setMotorASpeed>:
}

// Function to set speed of motor A
void setMotorASpeed(uint8_t speed) {
	if (speed == 0) {
 13c:	81 11       	cpse	r24, r1
 13e:	02 c0       	rjmp	.+4      	; 0x144 <setMotorASpeed+0x8>
		OCR0B = 0; // Turn off PWM output
 140:	18 bc       	out	0x28, r1	; 40
 142:	08 95       	ret
		} else {
		OCR0B = speed; // Set PWM duty cycle
 144:	88 bd       	out	0x28, r24	; 40
 146:	08 95       	ret

00000148 <setMotorBSpeed>:
	}
}

// Function to set speed of motor B
void setMotorBSpeed(uint8_t speed) {
	if (speed == 0) {
 148:	81 11       	cpse	r24, r1
 14a:	02 c0       	rjmp	.+4      	; 0x150 <setMotorBSpeed+0x8>
		OCR0A = 0; // Turn off PWM output
 14c:	17 bc       	out	0x27, r1	; 39
 14e:	08 95       	ret
		} else {
		OCR0A = speed; // Set PWM duty cycle
 150:	87 bd       	out	0x27, r24	; 39
 152:	08 95       	ret

00000154 <setMotorADirection>:
	}
}

// Function to control direction of motor A
void setMotorADirection(uint8_t direction) {
	if (direction == 1) { // Forward
 154:	81 30       	cpi	r24, 0x01	; 1
 156:	21 f4       	brne	.+8      	; 0x160 <setMotorADirection+0xc>
		PORTD |= (1 << A_DIRECTION_PIN); // Set A_DIRECTION_PIN
 158:	8b b1       	in	r24, 0x0b	; 11
 15a:	84 60       	ori	r24, 0x04	; 4
 15c:	8b b9       	out	0x0b, r24	; 11
 15e:	08 95       	ret
		} else { // Reverse
		PORTD &= ~(1 << A_DIRECTION_PIN); // Clear A_DIRECTION_PIN
 160:	8b b1       	in	r24, 0x0b	; 11
 162:	8b 7f       	andi	r24, 0xFB	; 251
 164:	8b b9       	out	0x0b, r24	; 11
 166:	08 95       	ret

00000168 <setMotorBDirection>:
	}
}

// Function to control direction of motor B
void setMotorBDirection(uint8_t direction) {
	if (direction == 1) { // Forward
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	21 f4       	brne	.+8      	; 0x174 <setMotorBDirection+0xc>
		PORTD |= (1 << B_DIRECTION_PIN); // Set B_DIRECTION_PIN
 16c:	8b b1       	in	r24, 0x0b	; 11
 16e:	80 61       	ori	r24, 0x10	; 16
 170:	8b b9       	out	0x0b, r24	; 11
 172:	08 95       	ret
		} else { // Reverse
		PORTD &= ~(1 << B_DIRECTION_PIN); // Clear B_DIRECTION_PIN
 174:	8b b1       	in	r24, 0x0b	; 11
 176:	8f 7e       	andi	r24, 0xEF	; 239
 178:	8b b9       	out	0x0b, r24	; 11
 17a:	08 95       	ret

0000017c <init_servo_PWM>:
#define SERVO_H_

#include "definitions.h"

void init_servo_PWM() {
	DDRB |= (1 << SERVO_PIN);//set as output
 17c:	84 b1       	in	r24, 0x04	; 4
 17e:	82 60       	ori	r24, 0x02	; 2
 180:	84 b9       	out	0x04, r24	; 4
	
	TCCR1A = (0b10 << COM1A0)|(0b00 << COM1B0)|(0b10 << WGM10);//Configure Timer1 for Fast PWM mode, non-inverted output
 182:	82 e8       	ldi	r24, 0x82	; 130
 184:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	
	TIMSK1 = (1 << TOIE1)|(1<<OCIE1A); //set timer1, interrupt on overflow and output compare A
 188:	83 e0       	ldi	r24, 0x03	; 3
 18a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
	
	OCR1AH = (SERVO_MIN & 0xFF00)>>8;//higher bits
 18e:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = (SERVO_MIN & 0x00FF);//lower bits
 192:	87 ee       	ldi	r24, 0xE7	; 231
 194:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	
	ICR1H = (SERVO_PWM_TOP & 0xFF00)>>8;//higher bits
 198:	8c e9       	ldi	r24, 0x9C	; 156
 19a:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
	ICR1L = (SERVO_PWM_TOP & 0x00FF);//lower bits
 19e:	8f e3       	ldi	r24, 0x3F	; 63
 1a0:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	
	TCCR1B = (0b11 << WGM12)|(0b010 << CS10);//Prescaler 8
 1a4:	8a e1       	ldi	r24, 0x1A	; 26
 1a6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 1aa:	08 95       	ret

000001ac <servo_set_angle>:
		OCR1AL = (i & 0x00FF);      // set low bits
	}
}

// Function to set servo angle
void servo_set_angle(uint16_t angle,uint16_t max_angle) {
 1ac:	cf 92       	push	r12
 1ae:	df 92       	push	r13
 1b0:	ef 92       	push	r14
 1b2:	ff 92       	push	r15
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	eb 01       	movw	r28, r22
	// Calculate pulse width
	float set = (float) angle/(float) max_angle;//ratio of degrees
 1ba:	bc 01       	movw	r22, r24
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__floatunsisf>
 1c4:	6b 01       	movw	r12, r22
 1c6:	7c 01       	movw	r14, r24
 1c8:	be 01       	movw	r22, r28
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__floatunsisf>
 1d2:	9b 01       	movw	r18, r22
 1d4:	ac 01       	movw	r20, r24
 1d6:	c7 01       	movw	r24, r14
 1d8:	b6 01       	movw	r22, r12
 1da:	0e 94 35 02 	call	0x46a	; 0x46a <__divsf3>
	
	set = (((float)SERVO_MAX-(float)SERVO_MIN)*set)+(float)SERVO_MIN;//finds the value for pwm
 1de:	20 e0       	ldi	r18, 0x00	; 0
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	4a e7       	ldi	r20, 0x7A	; 122
 1e4:	55 e4       	ldi	r21, 0x45	; 69
 1e6:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__mulsf3>
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	30 ec       	ldi	r19, 0xC0	; 192
 1ee:	49 e7       	ldi	r20, 0x79	; 121
 1f0:	54 e4       	ldi	r21, 0x44	; 68
 1f2:	0e 94 c9 01 	call	0x392	; 0x392 <__addsf3>
	
	uint16_t point = (uint16_t) set;
 1f6:	0e 94 a7 02 	call	0x54e	; 0x54e <__fixunssfsi>
	
	update_pwm(point);
 1fa:	cb 01       	movw	r24, r22
 1fc:	0e 94 53 00 	call	0xa6	; 0xa6 <update_pwm>
}
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	ff 90       	pop	r15
 206:	ef 90       	pop	r14
 208:	df 90       	pop	r13
 20a:	cf 90       	pop	r12
 20c:	08 95       	ret

0000020e <main>:
#include "usart.h"
#include "movement.h"
#include "servo.h"

int main(void)
{
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	cd b7       	in	r28, 0x3d	; 61
 214:	de b7       	in	r29, 0x3e	; 62
 216:	c0 55       	subi	r28, 0x50	; 80
 218:	d1 09       	sbc	r29, r1
 21a:	0f b6       	in	r0, 0x3f	; 63
 21c:	f8 94       	cli
 21e:	de bf       	out	0x3e, r29	; 62
 220:	0f be       	out	0x3f, r0	; 63
 222:	cd bf       	out	0x3d, r28	; 61
    
	init_ADC();
 224:	0e 94 5f 00 	call	0xbe	; 0xbe <init_ADC>
	init_USART(MYUBRR);
 228:	87 e6       	ldi	r24, 0x67	; 103
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	0e 94 82 00 	call	0x104	; 0x104 <init_USART>
 	init_driving_PWM();
 230:	0e 94 94 00 	call	0x128	; 0x128 <init_driving_PWM>
 	init_servo_PWM();
 234:	0e 94 be 00 	call	0x17c	; 0x17c <init_servo_PWM>
	
	DDRB |= (1 << 2);
 238:	84 b1       	in	r24, 0x04	; 4
 23a:	84 60       	ori	r24, 0x04	; 4
 23c:	84 b9       	out	0x04, r24	; 4
	
	
	int white_limit = (int)(WHITE + 30);
	int black_limit = (int)(BLACK - 30);
	servo_set_angle(0,180);
 23e:	64 eb       	ldi	r22, 0xB4	; 180
 240:	70 e0       	ldi	r23, 0x00	; 0
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	0e 94 d6 00 	call	0x1ac	; 0x1ac <servo_set_angle>
	PORTB |= (1 << 2);
 24a:	85 b1       	in	r24, 0x05	; 5
 24c:	84 60       	ori	r24, 0x04	; 4
 24e:	85 b9       	out	0x05, r24	; 5
	int16_t i = 0;
	DDRD |= (1 << A_DIRECTION_PIN) | (1 << B_DIRECTION_PIN); //set direction pins as output
 250:	8a b1       	in	r24, 0x0a	; 10
 252:	84 61       	ori	r24, 0x14	; 20
 254:	8a b9       	out	0x0a, r24	; 10
	
	sei();
 256:	78 94       	sei
  while (1) 
    {
		
		
		//Servo move angle(subject to change)
		for(i = 0; i<=180;i++){
 258:	00 e0       	ldi	r16, 0x00	; 0
 25a:	10 e0       	ldi	r17, 0x00	; 0
 25c:	0d c0       	rjmp	.+26     	; 0x278 <main+0x6a>
			servo_set_angle(i,180);
 25e:	64 eb       	ldi	r22, 0xB4	; 180
 260:	70 e0       	ldi	r23, 0x00	; 0
 262:	c8 01       	movw	r24, r16
 264:	0e 94 d6 00 	call	0x1ac	; 0x1ac <servo_set_angle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 268:	8f e0       	ldi	r24, 0x0F	; 15
 26a:	97 e2       	ldi	r25, 0x27	; 39
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <main+0x5e>
 270:	00 c0       	rjmp	.+0      	; 0x272 <main+0x64>
 272:	00 00       	nop
  while (1) 
    {
		
		
		//Servo move angle(subject to change)
		for(i = 0; i<=180;i++){
 274:	0f 5f       	subi	r16, 0xFF	; 255
 276:	1f 4f       	sbci	r17, 0xFF	; 255
 278:	05 3b       	cpi	r16, 0xB5	; 181
 27a:	11 05       	cpc	r17, r1
 27c:	84 f3       	brlt	.-32     	; 0x25e <main+0x50>
 27e:	04 eb       	ldi	r16, 0xB4	; 180
 280:	10 e0       	ldi	r17, 0x00	; 0
 282:	0d c0       	rjmp	.+26     	; 0x29e <main+0x90>
			servo_set_angle(i,180);
			_delay_ms(40);
		}
		for (i=180;i>=0;i--){
			servo_set_angle(i,180);
 284:	64 eb       	ldi	r22, 0xB4	; 180
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	c8 01       	movw	r24, r16
 28a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <servo_set_angle>
 28e:	8f e0       	ldi	r24, 0x0F	; 15
 290:	97 e2       	ldi	r25, 0x27	; 39
 292:	01 97       	sbiw	r24, 0x01	; 1
 294:	f1 f7       	brne	.-4      	; 0x292 <main+0x84>
 296:	00 c0       	rjmp	.+0      	; 0x298 <main+0x8a>
 298:	00 00       	nop
		//Servo move angle(subject to change)
		for(i = 0; i<=180;i++){
			servo_set_angle(i,180);
			_delay_ms(40);
		}
		for (i=180;i>=0;i--){
 29a:	01 50       	subi	r16, 0x01	; 1
 29c:	11 09       	sbc	r17, r1
 29e:	11 23       	and	r17, r17
 2a0:	8c f7       	brge	.-30     	; 0x284 <main+0x76>
			servo_set_angle(i,180);
			_delay_ms(40);
		}
		
		PORTB |= (1 << 2);
 2a2:	85 b1       	in	r24, 0x05	; 5
 2a4:	84 60       	ori	r24, 0x04	; 4
 2a6:	85 b9       	out	0x05, r24	; 5
		
		//int sensorLeft = readADC(SENSOR_LEFT_CHANNEL);
		int sensorLeft = white_limit;
		int lineTrackingSensorLeft = readADC(LINE_TRACKING_SENSOR_LEFT_CHANNEL) + 140;
 2a8:	85 e0       	ldi	r24, 0x05	; 5
 2aa:	0e 94 6d 00 	call	0xda	; 0xda <readADC>
 2ae:	8c 01       	movw	r16, r24
 2b0:	04 57       	subi	r16, 0x74	; 116
 2b2:	1f 4f       	sbci	r17, 0xFF	; 255
 2b4:	68 01       	movw	r12, r16
		int lineTrackingSensorMiddle = readADC(LINE_TRACKING_SENSOR_MIDDLE_CHANNEL) + 110;
 2b6:	82 e0       	ldi	r24, 0x02	; 2
 2b8:	0e 94 6d 00 	call	0xda	; 0xda <readADC>
 2bc:	82 59       	subi	r24, 0x92	; 146
 2be:	9f 4f       	sbci	r25, 0xFF	; 255
 2c0:	5c 01       	movw	r10, r24
		int lineTrackingSensorRight = readADC(LINE_TRACKING_SENSOR_RIGHT_CHANNEL);
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	0e 94 6d 00 	call	0xda	; 0xda <readADC>
 2c8:	7c 01       	movw	r14, r24
		int sensorRight = black_limit;
		//int sensorRight = readADC(SENSOR_RIGHT_CHANNEL);
		
		// Convert distance to string
		char buffer[80];
		snprintf(buffer, sizeof(buffer), "%d %d %d %d %d \n", sensorLeft, lineTrackingSensorLeft, lineTrackingSensorMiddle, lineTrackingSensorRight, sensorRight);
 2ca:	82 e0       	ldi	r24, 0x02	; 2
 2cc:	8f 93       	push	r24
 2ce:	8a e3       	ldi	r24, 0x3A	; 58
 2d0:	8f 93       	push	r24
 2d2:	ff 92       	push	r15
 2d4:	ef 92       	push	r14
 2d6:	bf 92       	push	r11
 2d8:	af 92       	push	r10
 2da:	1f 93       	push	r17
 2dc:	0f 93       	push	r16
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	8f 93       	push	r24
 2e2:	8a ee       	ldi	r24, 0xEA	; 234
 2e4:	8f 93       	push	r24
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	9f 93       	push	r25
 2ec:	8f 93       	push	r24
 2ee:	1f 92       	push	r1
 2f0:	80 e5       	ldi	r24, 0x50	; 80
 2f2:	8f 93       	push	r24
 2f4:	ce 01       	movw	r24, r28
 2f6:	01 96       	adiw	r24, 0x01	; 1
 2f8:	9f 93       	push	r25
 2fa:	8f 93       	push	r24
 2fc:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <snprintf>
		
		// Transmit distance over UART
		for (int i = 0; buffer[i] != '\0'; i++) {
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	f8 94       	cli
 304:	de bf       	out	0x3e, r29	; 62
 306:	0f be       	out	0x3f, r0	; 63
 308:	cd bf       	out	0x3d, r28	; 61
 30a:	00 e0       	ldi	r16, 0x00	; 0
 30c:	10 e0       	ldi	r17, 0x00	; 0
 30e:	04 c0       	rjmp	.+8      	; 0x318 <main+0x10a>
			transferMessage(buffer[i]);
 310:	0e 94 8d 00 	call	0x11a	; 0x11a <transferMessage>
		// Convert distance to string
		char buffer[80];
		snprintf(buffer, sizeof(buffer), "%d %d %d %d %d \n", sensorLeft, lineTrackingSensorLeft, lineTrackingSensorMiddle, lineTrackingSensorRight, sensorRight);
		
		// Transmit distance over UART
		for (int i = 0; buffer[i] != '\0'; i++) {
 314:	0f 5f       	subi	r16, 0xFF	; 255
 316:	1f 4f       	sbci	r17, 0xFF	; 255
 318:	e1 e0       	ldi	r30, 0x01	; 1
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	ec 0f       	add	r30, r28
 31e:	fd 1f       	adc	r31, r29
 320:	e0 0f       	add	r30, r16
 322:	f1 1f       	adc	r31, r17
 324:	80 81       	ld	r24, Z
 326:	81 11       	cpse	r24, r1
 328:	f3 cf       	rjmp	.-26     	; 0x310 <main+0x102>
 32a:	83 ec       	ldi	r24, 0xC3	; 195
 32c:	99 e0       	ldi	r25, 0x09	; 9
 32e:	01 97       	sbiw	r24, 0x01	; 1
 330:	f1 f7       	brne	.-4      	; 0x32e <main+0x120>
 332:	00 c0       	rjmp	.+0      	; 0x334 <main+0x126>
 334:	00 00       	nop
		
		char receivedMessage = 'A';
		
		_delay_ms(10);
		if(receivedMessage == 'A'){
			PORTB |= (1 << 2);
 336:	85 b1       	in	r24, 0x05	; 5
 338:	84 60       	ori	r24, 0x04	; 4
 33a:	85 b9       	out	0x05, r24	; 5
 33c:	83 ec       	ldi	r24, 0xC3	; 195
 33e:	99 e0       	ldi	r25, 0x09	; 9
 340:	01 97       	sbiw	r24, 0x01	; 1
 342:	f1 f7       	brne	.-4      	; 0x340 <main+0x132>
 344:	00 c0       	rjmp	.+0      	; 0x346 <main+0x138>
 346:	00 00       	nop
			transferMessage('O');
			transferMessage('R');
		}

		_delay_ms(10);
		if(sensorLeft > WHITE && lineTrackingSensorLeft > WHITE && lineTrackingSensorRight < BLACK && sensorRight < BLACK){
 348:	9d ec       	ldi	r25, 0xCD	; 205
 34a:	c9 16       	cp	r12, r25
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	d9 06       	cpc	r13, r25
 350:	94 f0       	brlt	.+36     	; 0x376 <main+0x168>
 352:	88 e5       	ldi	r24, 0x58	; 88
 354:	e8 16       	cp	r14, r24
 356:	82 e0       	ldi	r24, 0x02	; 2
 358:	f8 06       	cpc	r15, r24
 35a:	6c f4       	brge	.+26     	; 0x376 <main+0x168>
			setMotorADirection(1);
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	0e 94 aa 00 	call	0x154	; 0x154 <setMotorADirection>
			setMotorASpeed(0);
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	0e 94 9e 00 	call	0x13c	; 0x13c <setMotorASpeed>
			setMotorBDirection(1);
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	0e 94 b4 00 	call	0x168	; 0x168 <setMotorBDirection>
			setMotorBSpeed(0);
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	0e 94 a4 00 	call	0x148	; 0x148 <setMotorBSpeed>
 374:	06 c0       	rjmp	.+12     	; 0x382 <main+0x174>
		}else{
			setMotorASpeed(90);
 376:	8a e5       	ldi	r24, 0x5A	; 90
 378:	0e 94 9e 00 	call	0x13c	; 0x13c <setMotorASpeed>
			setMotorBSpeed(90);
 37c:	8a e5       	ldi	r24, 0x5A	; 90
 37e:	0e 94 a4 00 	call	0x148	; 0x148 <setMotorBSpeed>
 382:	87 ea       	ldi	r24, 0xA7	; 167
 384:	91 e6       	ldi	r25, 0x61	; 97
 386:	01 97       	sbiw	r24, 0x01	; 1
 388:	f1 f7       	brne	.-4      	; 0x386 <main+0x178>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <main+0x17e>
 38c:	00 00       	nop
// 		setMotorBSpeed(90);
// 		_delay_ms(2000);
// 		setMotorASpeed(0);
// 		setMotorBSpeed(0);
// 		_delay_ms(2000);
    }
 38e:	64 cf       	rjmp	.-312    	; 0x258 <main+0x4a>

00000390 <__subsf3>:
 390:	50 58       	subi	r21, 0x80	; 128

00000392 <__addsf3>:
 392:	bb 27       	eor	r27, r27
 394:	aa 27       	eor	r26, r26
 396:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__addsf3x>
 39a:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_round>
 39e:	0e 94 1c 03 	call	0x638	; 0x638 <__fp_pscA>
 3a2:	38 f0       	brcs	.+14     	; 0x3b2 <__addsf3+0x20>
 3a4:	0e 94 23 03 	call	0x646	; 0x646 <__fp_pscB>
 3a8:	20 f0       	brcs	.+8      	; 0x3b2 <__addsf3+0x20>
 3aa:	39 f4       	brne	.+14     	; 0x3ba <__addsf3+0x28>
 3ac:	9f 3f       	cpi	r25, 0xFF	; 255
 3ae:	19 f4       	brne	.+6      	; 0x3b6 <__addsf3+0x24>
 3b0:	26 f4       	brtc	.+8      	; 0x3ba <__addsf3+0x28>
 3b2:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_nan>
 3b6:	0e f4       	brtc	.+2      	; 0x3ba <__addsf3+0x28>
 3b8:	e0 95       	com	r30
 3ba:	e7 fb       	bst	r30, 7
 3bc:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_inf>

000003c0 <__addsf3x>:
 3c0:	e9 2f       	mov	r30, r25
 3c2:	0e 94 3b 03 	call	0x676	; 0x676 <__fp_split3>
 3c6:	58 f3       	brcs	.-42     	; 0x39e <__addsf3+0xc>
 3c8:	ba 17       	cp	r27, r26
 3ca:	62 07       	cpc	r22, r18
 3cc:	73 07       	cpc	r23, r19
 3ce:	84 07       	cpc	r24, r20
 3d0:	95 07       	cpc	r25, r21
 3d2:	20 f0       	brcs	.+8      	; 0x3dc <__addsf3x+0x1c>
 3d4:	79 f4       	brne	.+30     	; 0x3f4 <__addsf3x+0x34>
 3d6:	a6 f5       	brtc	.+104    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3d8:	0c 94 5d 03 	jmp	0x6ba	; 0x6ba <__fp_zero>
 3dc:	0e f4       	brtc	.+2      	; 0x3e0 <__addsf3x+0x20>
 3de:	e0 95       	com	r30
 3e0:	0b 2e       	mov	r0, r27
 3e2:	ba 2f       	mov	r27, r26
 3e4:	a0 2d       	mov	r26, r0
 3e6:	0b 01       	movw	r0, r22
 3e8:	b9 01       	movw	r22, r18
 3ea:	90 01       	movw	r18, r0
 3ec:	0c 01       	movw	r0, r24
 3ee:	ca 01       	movw	r24, r20
 3f0:	a0 01       	movw	r20, r0
 3f2:	11 24       	eor	r1, r1
 3f4:	ff 27       	eor	r31, r31
 3f6:	59 1b       	sub	r21, r25
 3f8:	99 f0       	breq	.+38     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3fa:	59 3f       	cpi	r21, 0xF9	; 249
 3fc:	50 f4       	brcc	.+20     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3fe:	50 3e       	cpi	r21, 0xE0	; 224
 400:	68 f1       	brcs	.+90     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 402:	1a 16       	cp	r1, r26
 404:	f0 40       	sbci	r31, 0x00	; 0
 406:	a2 2f       	mov	r26, r18
 408:	23 2f       	mov	r18, r19
 40a:	34 2f       	mov	r19, r20
 40c:	44 27       	eor	r20, r20
 40e:	58 5f       	subi	r21, 0xF8	; 248
 410:	f3 cf       	rjmp	.-26     	; 0x3f8 <__addsf3x+0x38>
 412:	46 95       	lsr	r20
 414:	37 95       	ror	r19
 416:	27 95       	ror	r18
 418:	a7 95       	ror	r26
 41a:	f0 40       	sbci	r31, 0x00	; 0
 41c:	53 95       	inc	r21
 41e:	c9 f7       	brne	.-14     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 420:	7e f4       	brtc	.+30     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 422:	1f 16       	cp	r1, r31
 424:	ba 0b       	sbc	r27, r26
 426:	62 0b       	sbc	r22, r18
 428:	73 0b       	sbc	r23, r19
 42a:	84 0b       	sbc	r24, r20
 42c:	ba f0       	brmi	.+46     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 42e:	91 50       	subi	r25, 0x01	; 1
 430:	a1 f0       	breq	.+40     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 432:	ff 0f       	add	r31, r31
 434:	bb 1f       	adc	r27, r27
 436:	66 1f       	adc	r22, r22
 438:	77 1f       	adc	r23, r23
 43a:	88 1f       	adc	r24, r24
 43c:	c2 f7       	brpl	.-16     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 43e:	0e c0       	rjmp	.+28     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 440:	ba 0f       	add	r27, r26
 442:	62 1f       	adc	r22, r18
 444:	73 1f       	adc	r23, r19
 446:	84 1f       	adc	r24, r20
 448:	48 f4       	brcc	.+18     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 44a:	87 95       	ror	r24
 44c:	77 95       	ror	r23
 44e:	67 95       	ror	r22
 450:	b7 95       	ror	r27
 452:	f7 95       	ror	r31
 454:	9e 3f       	cpi	r25, 0xFE	; 254
 456:	08 f0       	brcs	.+2      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 458:	b0 cf       	rjmp	.-160    	; 0x3ba <__addsf3+0x28>
 45a:	93 95       	inc	r25
 45c:	88 0f       	add	r24, r24
 45e:	08 f0       	brcs	.+2      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 460:	99 27       	eor	r25, r25
 462:	ee 0f       	add	r30, r30
 464:	97 95       	ror	r25
 466:	87 95       	ror	r24
 468:	08 95       	ret

0000046a <__divsf3>:
 46a:	0e 94 49 02 	call	0x492	; 0x492 <__divsf3x>
 46e:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_round>
 472:	0e 94 23 03 	call	0x646	; 0x646 <__fp_pscB>
 476:	58 f0       	brcs	.+22     	; 0x48e <__divsf3+0x24>
 478:	0e 94 1c 03 	call	0x638	; 0x638 <__fp_pscA>
 47c:	40 f0       	brcs	.+16     	; 0x48e <__divsf3+0x24>
 47e:	29 f4       	brne	.+10     	; 0x48a <__divsf3+0x20>
 480:	5f 3f       	cpi	r21, 0xFF	; 255
 482:	29 f0       	breq	.+10     	; 0x48e <__divsf3+0x24>
 484:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_inf>
 488:	51 11       	cpse	r21, r1
 48a:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <__fp_szero>
 48e:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_nan>

00000492 <__divsf3x>:
 492:	0e 94 3b 03 	call	0x676	; 0x676 <__fp_split3>
 496:	68 f3       	brcs	.-38     	; 0x472 <__divsf3+0x8>

00000498 <__divsf3_pse>:
 498:	99 23       	and	r25, r25
 49a:	b1 f3       	breq	.-20     	; 0x488 <__divsf3+0x1e>
 49c:	55 23       	and	r21, r21
 49e:	91 f3       	breq	.-28     	; 0x484 <__divsf3+0x1a>
 4a0:	95 1b       	sub	r25, r21
 4a2:	55 0b       	sbc	r21, r21
 4a4:	bb 27       	eor	r27, r27
 4a6:	aa 27       	eor	r26, r26
 4a8:	62 17       	cp	r22, r18
 4aa:	73 07       	cpc	r23, r19
 4ac:	84 07       	cpc	r24, r20
 4ae:	38 f0       	brcs	.+14     	; 0x4be <__divsf3_pse+0x26>
 4b0:	9f 5f       	subi	r25, 0xFF	; 255
 4b2:	5f 4f       	sbci	r21, 0xFF	; 255
 4b4:	22 0f       	add	r18, r18
 4b6:	33 1f       	adc	r19, r19
 4b8:	44 1f       	adc	r20, r20
 4ba:	aa 1f       	adc	r26, r26
 4bc:	a9 f3       	breq	.-22     	; 0x4a8 <__divsf3_pse+0x10>
 4be:	35 d0       	rcall	.+106    	; 0x52a <__divsf3_pse+0x92>
 4c0:	0e 2e       	mov	r0, r30
 4c2:	3a f0       	brmi	.+14     	; 0x4d2 <__divsf3_pse+0x3a>
 4c4:	e0 e8       	ldi	r30, 0x80	; 128
 4c6:	32 d0       	rcall	.+100    	; 0x52c <__divsf3_pse+0x94>
 4c8:	91 50       	subi	r25, 0x01	; 1
 4ca:	50 40       	sbci	r21, 0x00	; 0
 4cc:	e6 95       	lsr	r30
 4ce:	00 1c       	adc	r0, r0
 4d0:	ca f7       	brpl	.-14     	; 0x4c4 <__divsf3_pse+0x2c>
 4d2:	2b d0       	rcall	.+86     	; 0x52a <__divsf3_pse+0x92>
 4d4:	fe 2f       	mov	r31, r30
 4d6:	29 d0       	rcall	.+82     	; 0x52a <__divsf3_pse+0x92>
 4d8:	66 0f       	add	r22, r22
 4da:	77 1f       	adc	r23, r23
 4dc:	88 1f       	adc	r24, r24
 4de:	bb 1f       	adc	r27, r27
 4e0:	26 17       	cp	r18, r22
 4e2:	37 07       	cpc	r19, r23
 4e4:	48 07       	cpc	r20, r24
 4e6:	ab 07       	cpc	r26, r27
 4e8:	b0 e8       	ldi	r27, 0x80	; 128
 4ea:	09 f0       	breq	.+2      	; 0x4ee <__divsf3_pse+0x56>
 4ec:	bb 0b       	sbc	r27, r27
 4ee:	80 2d       	mov	r24, r0
 4f0:	bf 01       	movw	r22, r30
 4f2:	ff 27       	eor	r31, r31
 4f4:	93 58       	subi	r25, 0x83	; 131
 4f6:	5f 4f       	sbci	r21, 0xFF	; 255
 4f8:	3a f0       	brmi	.+14     	; 0x508 <__divsf3_pse+0x70>
 4fa:	9e 3f       	cpi	r25, 0xFE	; 254
 4fc:	51 05       	cpc	r21, r1
 4fe:	78 f0       	brcs	.+30     	; 0x51e <__divsf3_pse+0x86>
 500:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_inf>
 504:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <__fp_szero>
 508:	5f 3f       	cpi	r21, 0xFF	; 255
 50a:	e4 f3       	brlt	.-8      	; 0x504 <__divsf3_pse+0x6c>
 50c:	98 3e       	cpi	r25, 0xE8	; 232
 50e:	d4 f3       	brlt	.-12     	; 0x504 <__divsf3_pse+0x6c>
 510:	86 95       	lsr	r24
 512:	77 95       	ror	r23
 514:	67 95       	ror	r22
 516:	b7 95       	ror	r27
 518:	f7 95       	ror	r31
 51a:	9f 5f       	subi	r25, 0xFF	; 255
 51c:	c9 f7       	brne	.-14     	; 0x510 <__divsf3_pse+0x78>
 51e:	88 0f       	add	r24, r24
 520:	91 1d       	adc	r25, r1
 522:	96 95       	lsr	r25
 524:	87 95       	ror	r24
 526:	97 f9       	bld	r25, 7
 528:	08 95       	ret
 52a:	e1 e0       	ldi	r30, 0x01	; 1
 52c:	66 0f       	add	r22, r22
 52e:	77 1f       	adc	r23, r23
 530:	88 1f       	adc	r24, r24
 532:	bb 1f       	adc	r27, r27
 534:	62 17       	cp	r22, r18
 536:	73 07       	cpc	r23, r19
 538:	84 07       	cpc	r24, r20
 53a:	ba 07       	cpc	r27, r26
 53c:	20 f0       	brcs	.+8      	; 0x546 <__divsf3_pse+0xae>
 53e:	62 1b       	sub	r22, r18
 540:	73 0b       	sbc	r23, r19
 542:	84 0b       	sbc	r24, r20
 544:	ba 0b       	sbc	r27, r26
 546:	ee 1f       	adc	r30, r30
 548:	88 f7       	brcc	.-30     	; 0x52c <__divsf3_pse+0x94>
 54a:	e0 95       	com	r30
 54c:	08 95       	ret

0000054e <__fixunssfsi>:
 54e:	0e 94 43 03 	call	0x686	; 0x686 <__fp_splitA>
 552:	88 f0       	brcs	.+34     	; 0x576 <__fixunssfsi+0x28>
 554:	9f 57       	subi	r25, 0x7F	; 127
 556:	98 f0       	brcs	.+38     	; 0x57e <__fixunssfsi+0x30>
 558:	b9 2f       	mov	r27, r25
 55a:	99 27       	eor	r25, r25
 55c:	b7 51       	subi	r27, 0x17	; 23
 55e:	b0 f0       	brcs	.+44     	; 0x58c <__fixunssfsi+0x3e>
 560:	e1 f0       	breq	.+56     	; 0x59a <__fixunssfsi+0x4c>
 562:	66 0f       	add	r22, r22
 564:	77 1f       	adc	r23, r23
 566:	88 1f       	adc	r24, r24
 568:	99 1f       	adc	r25, r25
 56a:	1a f0       	brmi	.+6      	; 0x572 <__fixunssfsi+0x24>
 56c:	ba 95       	dec	r27
 56e:	c9 f7       	brne	.-14     	; 0x562 <__fixunssfsi+0x14>
 570:	14 c0       	rjmp	.+40     	; 0x59a <__fixunssfsi+0x4c>
 572:	b1 30       	cpi	r27, 0x01	; 1
 574:	91 f0       	breq	.+36     	; 0x59a <__fixunssfsi+0x4c>
 576:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__fp_zero>
 57a:	b1 e0       	ldi	r27, 0x01	; 1
 57c:	08 95       	ret
 57e:	0c 94 5d 03 	jmp	0x6ba	; 0x6ba <__fp_zero>
 582:	67 2f       	mov	r22, r23
 584:	78 2f       	mov	r23, r24
 586:	88 27       	eor	r24, r24
 588:	b8 5f       	subi	r27, 0xF8	; 248
 58a:	39 f0       	breq	.+14     	; 0x59a <__fixunssfsi+0x4c>
 58c:	b9 3f       	cpi	r27, 0xF9	; 249
 58e:	cc f3       	brlt	.-14     	; 0x582 <__fixunssfsi+0x34>
 590:	86 95       	lsr	r24
 592:	77 95       	ror	r23
 594:	67 95       	ror	r22
 596:	b3 95       	inc	r27
 598:	d9 f7       	brne	.-10     	; 0x590 <__fixunssfsi+0x42>
 59a:	3e f4       	brtc	.+14     	; 0x5aa <__fixunssfsi+0x5c>
 59c:	90 95       	com	r25
 59e:	80 95       	com	r24
 5a0:	70 95       	com	r23
 5a2:	61 95       	neg	r22
 5a4:	7f 4f       	sbci	r23, 0xFF	; 255
 5a6:	8f 4f       	sbci	r24, 0xFF	; 255
 5a8:	9f 4f       	sbci	r25, 0xFF	; 255
 5aa:	08 95       	ret

000005ac <__floatunsisf>:
 5ac:	e8 94       	clt
 5ae:	09 c0       	rjmp	.+18     	; 0x5c2 <__floatsisf+0x12>

000005b0 <__floatsisf>:
 5b0:	97 fb       	bst	r25, 7
 5b2:	3e f4       	brtc	.+14     	; 0x5c2 <__floatsisf+0x12>
 5b4:	90 95       	com	r25
 5b6:	80 95       	com	r24
 5b8:	70 95       	com	r23
 5ba:	61 95       	neg	r22
 5bc:	7f 4f       	sbci	r23, 0xFF	; 255
 5be:	8f 4f       	sbci	r24, 0xFF	; 255
 5c0:	9f 4f       	sbci	r25, 0xFF	; 255
 5c2:	99 23       	and	r25, r25
 5c4:	a9 f0       	breq	.+42     	; 0x5f0 <__floatsisf+0x40>
 5c6:	f9 2f       	mov	r31, r25
 5c8:	96 e9       	ldi	r25, 0x96	; 150
 5ca:	bb 27       	eor	r27, r27
 5cc:	93 95       	inc	r25
 5ce:	f6 95       	lsr	r31
 5d0:	87 95       	ror	r24
 5d2:	77 95       	ror	r23
 5d4:	67 95       	ror	r22
 5d6:	b7 95       	ror	r27
 5d8:	f1 11       	cpse	r31, r1
 5da:	f8 cf       	rjmp	.-16     	; 0x5cc <__floatsisf+0x1c>
 5dc:	fa f4       	brpl	.+62     	; 0x61c <__floatsisf+0x6c>
 5de:	bb 0f       	add	r27, r27
 5e0:	11 f4       	brne	.+4      	; 0x5e6 <__floatsisf+0x36>
 5e2:	60 ff       	sbrs	r22, 0
 5e4:	1b c0       	rjmp	.+54     	; 0x61c <__floatsisf+0x6c>
 5e6:	6f 5f       	subi	r22, 0xFF	; 255
 5e8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ea:	8f 4f       	sbci	r24, 0xFF	; 255
 5ec:	9f 4f       	sbci	r25, 0xFF	; 255
 5ee:	16 c0       	rjmp	.+44     	; 0x61c <__floatsisf+0x6c>
 5f0:	88 23       	and	r24, r24
 5f2:	11 f0       	breq	.+4      	; 0x5f8 <__floatsisf+0x48>
 5f4:	96 e9       	ldi	r25, 0x96	; 150
 5f6:	11 c0       	rjmp	.+34     	; 0x61a <__floatsisf+0x6a>
 5f8:	77 23       	and	r23, r23
 5fa:	21 f0       	breq	.+8      	; 0x604 <__floatsisf+0x54>
 5fc:	9e e8       	ldi	r25, 0x8E	; 142
 5fe:	87 2f       	mov	r24, r23
 600:	76 2f       	mov	r23, r22
 602:	05 c0       	rjmp	.+10     	; 0x60e <__floatsisf+0x5e>
 604:	66 23       	and	r22, r22
 606:	71 f0       	breq	.+28     	; 0x624 <__floatsisf+0x74>
 608:	96 e8       	ldi	r25, 0x86	; 134
 60a:	86 2f       	mov	r24, r22
 60c:	70 e0       	ldi	r23, 0x00	; 0
 60e:	60 e0       	ldi	r22, 0x00	; 0
 610:	2a f0       	brmi	.+10     	; 0x61c <__floatsisf+0x6c>
 612:	9a 95       	dec	r25
 614:	66 0f       	add	r22, r22
 616:	77 1f       	adc	r23, r23
 618:	88 1f       	adc	r24, r24
 61a:	da f7       	brpl	.-10     	; 0x612 <__floatsisf+0x62>
 61c:	88 0f       	add	r24, r24
 61e:	96 95       	lsr	r25
 620:	87 95       	ror	r24
 622:	97 f9       	bld	r25, 7
 624:	08 95       	ret

00000626 <__fp_inf>:
 626:	97 f9       	bld	r25, 7
 628:	9f 67       	ori	r25, 0x7F	; 127
 62a:	80 e8       	ldi	r24, 0x80	; 128
 62c:	70 e0       	ldi	r23, 0x00	; 0
 62e:	60 e0       	ldi	r22, 0x00	; 0
 630:	08 95       	ret

00000632 <__fp_nan>:
 632:	9f ef       	ldi	r25, 0xFF	; 255
 634:	80 ec       	ldi	r24, 0xC0	; 192
 636:	08 95       	ret

00000638 <__fp_pscA>:
 638:	00 24       	eor	r0, r0
 63a:	0a 94       	dec	r0
 63c:	16 16       	cp	r1, r22
 63e:	17 06       	cpc	r1, r23
 640:	18 06       	cpc	r1, r24
 642:	09 06       	cpc	r0, r25
 644:	08 95       	ret

00000646 <__fp_pscB>:
 646:	00 24       	eor	r0, r0
 648:	0a 94       	dec	r0
 64a:	12 16       	cp	r1, r18
 64c:	13 06       	cpc	r1, r19
 64e:	14 06       	cpc	r1, r20
 650:	05 06       	cpc	r0, r21
 652:	08 95       	ret

00000654 <__fp_round>:
 654:	09 2e       	mov	r0, r25
 656:	03 94       	inc	r0
 658:	00 0c       	add	r0, r0
 65a:	11 f4       	brne	.+4      	; 0x660 <__fp_round+0xc>
 65c:	88 23       	and	r24, r24
 65e:	52 f0       	brmi	.+20     	; 0x674 <__fp_round+0x20>
 660:	bb 0f       	add	r27, r27
 662:	40 f4       	brcc	.+16     	; 0x674 <__fp_round+0x20>
 664:	bf 2b       	or	r27, r31
 666:	11 f4       	brne	.+4      	; 0x66c <__fp_round+0x18>
 668:	60 ff       	sbrs	r22, 0
 66a:	04 c0       	rjmp	.+8      	; 0x674 <__fp_round+0x20>
 66c:	6f 5f       	subi	r22, 0xFF	; 255
 66e:	7f 4f       	sbci	r23, 0xFF	; 255
 670:	8f 4f       	sbci	r24, 0xFF	; 255
 672:	9f 4f       	sbci	r25, 0xFF	; 255
 674:	08 95       	ret

00000676 <__fp_split3>:
 676:	57 fd       	sbrc	r21, 7
 678:	90 58       	subi	r25, 0x80	; 128
 67a:	44 0f       	add	r20, r20
 67c:	55 1f       	adc	r21, r21
 67e:	59 f0       	breq	.+22     	; 0x696 <__fp_splitA+0x10>
 680:	5f 3f       	cpi	r21, 0xFF	; 255
 682:	71 f0       	breq	.+28     	; 0x6a0 <__fp_splitA+0x1a>
 684:	47 95       	ror	r20

00000686 <__fp_splitA>:
 686:	88 0f       	add	r24, r24
 688:	97 fb       	bst	r25, 7
 68a:	99 1f       	adc	r25, r25
 68c:	61 f0       	breq	.+24     	; 0x6a6 <__fp_splitA+0x20>
 68e:	9f 3f       	cpi	r25, 0xFF	; 255
 690:	79 f0       	breq	.+30     	; 0x6b0 <__fp_splitA+0x2a>
 692:	87 95       	ror	r24
 694:	08 95       	ret
 696:	12 16       	cp	r1, r18
 698:	13 06       	cpc	r1, r19
 69a:	14 06       	cpc	r1, r20
 69c:	55 1f       	adc	r21, r21
 69e:	f2 cf       	rjmp	.-28     	; 0x684 <__fp_split3+0xe>
 6a0:	46 95       	lsr	r20
 6a2:	f1 df       	rcall	.-30     	; 0x686 <__fp_splitA>
 6a4:	08 c0       	rjmp	.+16     	; 0x6b6 <__fp_splitA+0x30>
 6a6:	16 16       	cp	r1, r22
 6a8:	17 06       	cpc	r1, r23
 6aa:	18 06       	cpc	r1, r24
 6ac:	99 1f       	adc	r25, r25
 6ae:	f1 cf       	rjmp	.-30     	; 0x692 <__fp_splitA+0xc>
 6b0:	86 95       	lsr	r24
 6b2:	71 05       	cpc	r23, r1
 6b4:	61 05       	cpc	r22, r1
 6b6:	08 94       	sec
 6b8:	08 95       	ret

000006ba <__fp_zero>:
 6ba:	e8 94       	clt

000006bc <__fp_szero>:
 6bc:	bb 27       	eor	r27, r27
 6be:	66 27       	eor	r22, r22
 6c0:	77 27       	eor	r23, r23
 6c2:	cb 01       	movw	r24, r22
 6c4:	97 f9       	bld	r25, 7
 6c6:	08 95       	ret

000006c8 <__mulsf3>:
 6c8:	0e 94 77 03 	call	0x6ee	; 0x6ee <__mulsf3x>
 6cc:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_round>
 6d0:	0e 94 1c 03 	call	0x638	; 0x638 <__fp_pscA>
 6d4:	38 f0       	brcs	.+14     	; 0x6e4 <__mulsf3+0x1c>
 6d6:	0e 94 23 03 	call	0x646	; 0x646 <__fp_pscB>
 6da:	20 f0       	brcs	.+8      	; 0x6e4 <__mulsf3+0x1c>
 6dc:	95 23       	and	r25, r21
 6de:	11 f0       	breq	.+4      	; 0x6e4 <__mulsf3+0x1c>
 6e0:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_inf>
 6e4:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_nan>
 6e8:	11 24       	eor	r1, r1
 6ea:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <__fp_szero>

000006ee <__mulsf3x>:
 6ee:	0e 94 3b 03 	call	0x676	; 0x676 <__fp_split3>
 6f2:	70 f3       	brcs	.-36     	; 0x6d0 <__mulsf3+0x8>

000006f4 <__mulsf3_pse>:
 6f4:	95 9f       	mul	r25, r21
 6f6:	c1 f3       	breq	.-16     	; 0x6e8 <__mulsf3+0x20>
 6f8:	95 0f       	add	r25, r21
 6fa:	50 e0       	ldi	r21, 0x00	; 0
 6fc:	55 1f       	adc	r21, r21
 6fe:	62 9f       	mul	r22, r18
 700:	f0 01       	movw	r30, r0
 702:	72 9f       	mul	r23, r18
 704:	bb 27       	eor	r27, r27
 706:	f0 0d       	add	r31, r0
 708:	b1 1d       	adc	r27, r1
 70a:	63 9f       	mul	r22, r19
 70c:	aa 27       	eor	r26, r26
 70e:	f0 0d       	add	r31, r0
 710:	b1 1d       	adc	r27, r1
 712:	aa 1f       	adc	r26, r26
 714:	64 9f       	mul	r22, r20
 716:	66 27       	eor	r22, r22
 718:	b0 0d       	add	r27, r0
 71a:	a1 1d       	adc	r26, r1
 71c:	66 1f       	adc	r22, r22
 71e:	82 9f       	mul	r24, r18
 720:	22 27       	eor	r18, r18
 722:	b0 0d       	add	r27, r0
 724:	a1 1d       	adc	r26, r1
 726:	62 1f       	adc	r22, r18
 728:	73 9f       	mul	r23, r19
 72a:	b0 0d       	add	r27, r0
 72c:	a1 1d       	adc	r26, r1
 72e:	62 1f       	adc	r22, r18
 730:	83 9f       	mul	r24, r19
 732:	a0 0d       	add	r26, r0
 734:	61 1d       	adc	r22, r1
 736:	22 1f       	adc	r18, r18
 738:	74 9f       	mul	r23, r20
 73a:	33 27       	eor	r19, r19
 73c:	a0 0d       	add	r26, r0
 73e:	61 1d       	adc	r22, r1
 740:	23 1f       	adc	r18, r19
 742:	84 9f       	mul	r24, r20
 744:	60 0d       	add	r22, r0
 746:	21 1d       	adc	r18, r1
 748:	82 2f       	mov	r24, r18
 74a:	76 2f       	mov	r23, r22
 74c:	6a 2f       	mov	r22, r26
 74e:	11 24       	eor	r1, r1
 750:	9f 57       	subi	r25, 0x7F	; 127
 752:	50 40       	sbci	r21, 0x00	; 0
 754:	9a f0       	brmi	.+38     	; 0x77c <__mulsf3_pse+0x88>
 756:	f1 f0       	breq	.+60     	; 0x794 <__mulsf3_pse+0xa0>
 758:	88 23       	and	r24, r24
 75a:	4a f0       	brmi	.+18     	; 0x76e <__mulsf3_pse+0x7a>
 75c:	ee 0f       	add	r30, r30
 75e:	ff 1f       	adc	r31, r31
 760:	bb 1f       	adc	r27, r27
 762:	66 1f       	adc	r22, r22
 764:	77 1f       	adc	r23, r23
 766:	88 1f       	adc	r24, r24
 768:	91 50       	subi	r25, 0x01	; 1
 76a:	50 40       	sbci	r21, 0x00	; 0
 76c:	a9 f7       	brne	.-22     	; 0x758 <__mulsf3_pse+0x64>
 76e:	9e 3f       	cpi	r25, 0xFE	; 254
 770:	51 05       	cpc	r21, r1
 772:	80 f0       	brcs	.+32     	; 0x794 <__mulsf3_pse+0xa0>
 774:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_inf>
 778:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <__fp_szero>
 77c:	5f 3f       	cpi	r21, 0xFF	; 255
 77e:	e4 f3       	brlt	.-8      	; 0x778 <__mulsf3_pse+0x84>
 780:	98 3e       	cpi	r25, 0xE8	; 232
 782:	d4 f3       	brlt	.-12     	; 0x778 <__mulsf3_pse+0x84>
 784:	86 95       	lsr	r24
 786:	77 95       	ror	r23
 788:	67 95       	ror	r22
 78a:	b7 95       	ror	r27
 78c:	f7 95       	ror	r31
 78e:	e7 95       	ror	r30
 790:	9f 5f       	subi	r25, 0xFF	; 255
 792:	c1 f7       	brne	.-16     	; 0x784 <__mulsf3_pse+0x90>
 794:	fe 2b       	or	r31, r30
 796:	88 0f       	add	r24, r24
 798:	91 1d       	adc	r25, r1
 79a:	96 95       	lsr	r25
 79c:	87 95       	ror	r24
 79e:	97 f9       	bld	r25, 7
 7a0:	08 95       	ret

000007a2 <snprintf>:
 7a2:	ae e0       	ldi	r26, 0x0E	; 14
 7a4:	b0 e0       	ldi	r27, 0x00	; 0
 7a6:	e7 ed       	ldi	r30, 0xD7	; 215
 7a8:	f3 e0       	ldi	r31, 0x03	; 3
 7aa:	0c 94 a0 06 	jmp	0xd40	; 0xd40 <__prologue_saves__+0x1c>
 7ae:	0d 89       	ldd	r16, Y+21	; 0x15
 7b0:	1e 89       	ldd	r17, Y+22	; 0x16
 7b2:	8f 89       	ldd	r24, Y+23	; 0x17
 7b4:	98 8d       	ldd	r25, Y+24	; 0x18
 7b6:	26 e0       	ldi	r18, 0x06	; 6
 7b8:	2c 83       	std	Y+4, r18	; 0x04
 7ba:	1a 83       	std	Y+2, r17	; 0x02
 7bc:	09 83       	std	Y+1, r16	; 0x01
 7be:	97 ff       	sbrs	r25, 7
 7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <snprintf+0x24>
 7c2:	80 e0       	ldi	r24, 0x00	; 0
 7c4:	90 e8       	ldi	r25, 0x80	; 128
 7c6:	01 97       	sbiw	r24, 0x01	; 1
 7c8:	9e 83       	std	Y+6, r25	; 0x06
 7ca:	8d 83       	std	Y+5, r24	; 0x05
 7cc:	ae 01       	movw	r20, r28
 7ce:	45 5e       	subi	r20, 0xE5	; 229
 7d0:	5f 4f       	sbci	r21, 0xFF	; 255
 7d2:	69 8d       	ldd	r22, Y+25	; 0x19
 7d4:	7a 8d       	ldd	r23, Y+26	; 0x1a
 7d6:	ce 01       	movw	r24, r28
 7d8:	01 96       	adiw	r24, 0x01	; 1
 7da:	0e 94 01 04 	call	0x802	; 0x802 <vfprintf>
 7de:	4d 81       	ldd	r20, Y+5	; 0x05
 7e0:	5e 81       	ldd	r21, Y+6	; 0x06
 7e2:	57 fd       	sbrc	r21, 7
 7e4:	0a c0       	rjmp	.+20     	; 0x7fa <snprintf+0x58>
 7e6:	2f 81       	ldd	r18, Y+7	; 0x07
 7e8:	38 85       	ldd	r19, Y+8	; 0x08
 7ea:	42 17       	cp	r20, r18
 7ec:	53 07       	cpc	r21, r19
 7ee:	0c f4       	brge	.+2      	; 0x7f2 <snprintf+0x50>
 7f0:	9a 01       	movw	r18, r20
 7f2:	f8 01       	movw	r30, r16
 7f4:	e2 0f       	add	r30, r18
 7f6:	f3 1f       	adc	r31, r19
 7f8:	10 82       	st	Z, r1
 7fa:	2e 96       	adiw	r28, 0x0e	; 14
 7fc:	e4 e0       	ldi	r30, 0x04	; 4
 7fe:	0c 94 bc 06 	jmp	0xd78	; 0xd78 <__epilogue_restores__+0x1c>

00000802 <vfprintf>:
 802:	ab e0       	ldi	r26, 0x0B	; 11
 804:	b0 e0       	ldi	r27, 0x00	; 0
 806:	e7 e0       	ldi	r30, 0x07	; 7
 808:	f4 e0       	ldi	r31, 0x04	; 4
 80a:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__prologue_saves__>
 80e:	6c 01       	movw	r12, r24
 810:	7b 01       	movw	r14, r22
 812:	8a 01       	movw	r16, r20
 814:	fc 01       	movw	r30, r24
 816:	17 82       	std	Z+7, r1	; 0x07
 818:	16 82       	std	Z+6, r1	; 0x06
 81a:	83 81       	ldd	r24, Z+3	; 0x03
 81c:	81 ff       	sbrs	r24, 1
 81e:	cc c1       	rjmp	.+920    	; 0xbb8 <__stack+0x2b9>
 820:	ce 01       	movw	r24, r28
 822:	01 96       	adiw	r24, 0x01	; 1
 824:	3c 01       	movw	r6, r24
 826:	f6 01       	movw	r30, r12
 828:	93 81       	ldd	r25, Z+3	; 0x03
 82a:	f7 01       	movw	r30, r14
 82c:	93 fd       	sbrc	r25, 3
 82e:	85 91       	lpm	r24, Z+
 830:	93 ff       	sbrs	r25, 3
 832:	81 91       	ld	r24, Z+
 834:	7f 01       	movw	r14, r30
 836:	88 23       	and	r24, r24
 838:	09 f4       	brne	.+2      	; 0x83c <vfprintf+0x3a>
 83a:	ba c1       	rjmp	.+884    	; 0xbb0 <__stack+0x2b1>
 83c:	85 32       	cpi	r24, 0x25	; 37
 83e:	39 f4       	brne	.+14     	; 0x84e <vfprintf+0x4c>
 840:	93 fd       	sbrc	r25, 3
 842:	85 91       	lpm	r24, Z+
 844:	93 ff       	sbrs	r25, 3
 846:	81 91       	ld	r24, Z+
 848:	7f 01       	movw	r14, r30
 84a:	85 32       	cpi	r24, 0x25	; 37
 84c:	29 f4       	brne	.+10     	; 0x858 <vfprintf+0x56>
 84e:	b6 01       	movw	r22, r12
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 856:	e7 cf       	rjmp	.-50     	; 0x826 <vfprintf+0x24>
 858:	91 2c       	mov	r9, r1
 85a:	21 2c       	mov	r2, r1
 85c:	31 2c       	mov	r3, r1
 85e:	ff e1       	ldi	r31, 0x1F	; 31
 860:	f3 15       	cp	r31, r3
 862:	d8 f0       	brcs	.+54     	; 0x89a <vfprintf+0x98>
 864:	8b 32       	cpi	r24, 0x2B	; 43
 866:	79 f0       	breq	.+30     	; 0x886 <vfprintf+0x84>
 868:	38 f4       	brcc	.+14     	; 0x878 <vfprintf+0x76>
 86a:	80 32       	cpi	r24, 0x20	; 32
 86c:	79 f0       	breq	.+30     	; 0x88c <vfprintf+0x8a>
 86e:	83 32       	cpi	r24, 0x23	; 35
 870:	a1 f4       	brne	.+40     	; 0x89a <vfprintf+0x98>
 872:	23 2d       	mov	r18, r3
 874:	20 61       	ori	r18, 0x10	; 16
 876:	1d c0       	rjmp	.+58     	; 0x8b2 <vfprintf+0xb0>
 878:	8d 32       	cpi	r24, 0x2D	; 45
 87a:	61 f0       	breq	.+24     	; 0x894 <vfprintf+0x92>
 87c:	80 33       	cpi	r24, 0x30	; 48
 87e:	69 f4       	brne	.+26     	; 0x89a <vfprintf+0x98>
 880:	23 2d       	mov	r18, r3
 882:	21 60       	ori	r18, 0x01	; 1
 884:	16 c0       	rjmp	.+44     	; 0x8b2 <vfprintf+0xb0>
 886:	83 2d       	mov	r24, r3
 888:	82 60       	ori	r24, 0x02	; 2
 88a:	38 2e       	mov	r3, r24
 88c:	e3 2d       	mov	r30, r3
 88e:	e4 60       	ori	r30, 0x04	; 4
 890:	3e 2e       	mov	r3, r30
 892:	2a c0       	rjmp	.+84     	; 0x8e8 <vfprintf+0xe6>
 894:	f3 2d       	mov	r31, r3
 896:	f8 60       	ori	r31, 0x08	; 8
 898:	1d c0       	rjmp	.+58     	; 0x8d4 <vfprintf+0xd2>
 89a:	37 fc       	sbrc	r3, 7
 89c:	2d c0       	rjmp	.+90     	; 0x8f8 <vfprintf+0xf6>
 89e:	20 ed       	ldi	r18, 0xD0	; 208
 8a0:	28 0f       	add	r18, r24
 8a2:	2a 30       	cpi	r18, 0x0A	; 10
 8a4:	40 f0       	brcs	.+16     	; 0x8b6 <vfprintf+0xb4>
 8a6:	8e 32       	cpi	r24, 0x2E	; 46
 8a8:	b9 f4       	brne	.+46     	; 0x8d8 <vfprintf+0xd6>
 8aa:	36 fc       	sbrc	r3, 6
 8ac:	81 c1       	rjmp	.+770    	; 0xbb0 <__stack+0x2b1>
 8ae:	23 2d       	mov	r18, r3
 8b0:	20 64       	ori	r18, 0x40	; 64
 8b2:	32 2e       	mov	r3, r18
 8b4:	19 c0       	rjmp	.+50     	; 0x8e8 <vfprintf+0xe6>
 8b6:	36 fe       	sbrs	r3, 6
 8b8:	06 c0       	rjmp	.+12     	; 0x8c6 <vfprintf+0xc4>
 8ba:	8a e0       	ldi	r24, 0x0A	; 10
 8bc:	98 9e       	mul	r9, r24
 8be:	20 0d       	add	r18, r0
 8c0:	11 24       	eor	r1, r1
 8c2:	92 2e       	mov	r9, r18
 8c4:	11 c0       	rjmp	.+34     	; 0x8e8 <vfprintf+0xe6>
 8c6:	ea e0       	ldi	r30, 0x0A	; 10
 8c8:	2e 9e       	mul	r2, r30
 8ca:	20 0d       	add	r18, r0
 8cc:	11 24       	eor	r1, r1
 8ce:	22 2e       	mov	r2, r18
 8d0:	f3 2d       	mov	r31, r3
 8d2:	f0 62       	ori	r31, 0x20	; 32
 8d4:	3f 2e       	mov	r3, r31
 8d6:	08 c0       	rjmp	.+16     	; 0x8e8 <vfprintf+0xe6>
 8d8:	8c 36       	cpi	r24, 0x6C	; 108
 8da:	21 f4       	brne	.+8      	; 0x8e4 <vfprintf+0xe2>
 8dc:	83 2d       	mov	r24, r3
 8de:	80 68       	ori	r24, 0x80	; 128
 8e0:	38 2e       	mov	r3, r24
 8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <vfprintf+0xe6>
 8e4:	88 36       	cpi	r24, 0x68	; 104
 8e6:	41 f4       	brne	.+16     	; 0x8f8 <vfprintf+0xf6>
 8e8:	f7 01       	movw	r30, r14
 8ea:	93 fd       	sbrc	r25, 3
 8ec:	85 91       	lpm	r24, Z+
 8ee:	93 ff       	sbrs	r25, 3
 8f0:	81 91       	ld	r24, Z+
 8f2:	7f 01       	movw	r14, r30
 8f4:	81 11       	cpse	r24, r1
 8f6:	b3 cf       	rjmp	.-154    	; 0x85e <vfprintf+0x5c>
 8f8:	98 2f       	mov	r25, r24
 8fa:	9f 7d       	andi	r25, 0xDF	; 223
 8fc:	95 54       	subi	r25, 0x45	; 69
 8fe:	93 30       	cpi	r25, 0x03	; 3
 900:	28 f4       	brcc	.+10     	; 0x90c <__stack+0xd>
 902:	0c 5f       	subi	r16, 0xFC	; 252
 904:	1f 4f       	sbci	r17, 0xFF	; 255
 906:	9f e3       	ldi	r25, 0x3F	; 63
 908:	99 83       	std	Y+1, r25	; 0x01
 90a:	0d c0       	rjmp	.+26     	; 0x926 <__stack+0x27>
 90c:	83 36       	cpi	r24, 0x63	; 99
 90e:	31 f0       	breq	.+12     	; 0x91c <__stack+0x1d>
 910:	83 37       	cpi	r24, 0x73	; 115
 912:	71 f0       	breq	.+28     	; 0x930 <__stack+0x31>
 914:	83 35       	cpi	r24, 0x53	; 83
 916:	09 f0       	breq	.+2      	; 0x91a <__stack+0x1b>
 918:	59 c0       	rjmp	.+178    	; 0x9cc <__stack+0xcd>
 91a:	21 c0       	rjmp	.+66     	; 0x95e <__stack+0x5f>
 91c:	f8 01       	movw	r30, r16
 91e:	80 81       	ld	r24, Z
 920:	89 83       	std	Y+1, r24	; 0x01
 922:	0e 5f       	subi	r16, 0xFE	; 254
 924:	1f 4f       	sbci	r17, 0xFF	; 255
 926:	88 24       	eor	r8, r8
 928:	83 94       	inc	r8
 92a:	91 2c       	mov	r9, r1
 92c:	53 01       	movw	r10, r6
 92e:	13 c0       	rjmp	.+38     	; 0x956 <__stack+0x57>
 930:	28 01       	movw	r4, r16
 932:	f2 e0       	ldi	r31, 0x02	; 2
 934:	4f 0e       	add	r4, r31
 936:	51 1c       	adc	r5, r1
 938:	f8 01       	movw	r30, r16
 93a:	a0 80       	ld	r10, Z
 93c:	b1 80       	ldd	r11, Z+1	; 0x01
 93e:	36 fe       	sbrs	r3, 6
 940:	03 c0       	rjmp	.+6      	; 0x948 <__stack+0x49>
 942:	69 2d       	mov	r22, r9
 944:	70 e0       	ldi	r23, 0x00	; 0
 946:	02 c0       	rjmp	.+4      	; 0x94c <__stack+0x4d>
 948:	6f ef       	ldi	r22, 0xFF	; 255
 94a:	7f ef       	ldi	r23, 0xFF	; 255
 94c:	c5 01       	movw	r24, r10
 94e:	0e 94 ed 05 	call	0xbda	; 0xbda <strnlen>
 952:	4c 01       	movw	r8, r24
 954:	82 01       	movw	r16, r4
 956:	f3 2d       	mov	r31, r3
 958:	ff 77       	andi	r31, 0x7F	; 127
 95a:	3f 2e       	mov	r3, r31
 95c:	16 c0       	rjmp	.+44     	; 0x98a <__stack+0x8b>
 95e:	28 01       	movw	r4, r16
 960:	22 e0       	ldi	r18, 0x02	; 2
 962:	42 0e       	add	r4, r18
 964:	51 1c       	adc	r5, r1
 966:	f8 01       	movw	r30, r16
 968:	a0 80       	ld	r10, Z
 96a:	b1 80       	ldd	r11, Z+1	; 0x01
 96c:	36 fe       	sbrs	r3, 6
 96e:	03 c0       	rjmp	.+6      	; 0x976 <__stack+0x77>
 970:	69 2d       	mov	r22, r9
 972:	70 e0       	ldi	r23, 0x00	; 0
 974:	02 c0       	rjmp	.+4      	; 0x97a <__stack+0x7b>
 976:	6f ef       	ldi	r22, 0xFF	; 255
 978:	7f ef       	ldi	r23, 0xFF	; 255
 97a:	c5 01       	movw	r24, r10
 97c:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <strnlen_P>
 980:	4c 01       	movw	r8, r24
 982:	f3 2d       	mov	r31, r3
 984:	f0 68       	ori	r31, 0x80	; 128
 986:	3f 2e       	mov	r3, r31
 988:	82 01       	movw	r16, r4
 98a:	33 fc       	sbrc	r3, 3
 98c:	1b c0       	rjmp	.+54     	; 0x9c4 <__stack+0xc5>
 98e:	82 2d       	mov	r24, r2
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	88 16       	cp	r8, r24
 994:	99 06       	cpc	r9, r25
 996:	b0 f4       	brcc	.+44     	; 0x9c4 <__stack+0xc5>
 998:	b6 01       	movw	r22, r12
 99a:	80 e2       	ldi	r24, 0x20	; 32
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 9a2:	2a 94       	dec	r2
 9a4:	f4 cf       	rjmp	.-24     	; 0x98e <__stack+0x8f>
 9a6:	f5 01       	movw	r30, r10
 9a8:	37 fc       	sbrc	r3, 7
 9aa:	85 91       	lpm	r24, Z+
 9ac:	37 fe       	sbrs	r3, 7
 9ae:	81 91       	ld	r24, Z+
 9b0:	5f 01       	movw	r10, r30
 9b2:	b6 01       	movw	r22, r12
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 9ba:	21 10       	cpse	r2, r1
 9bc:	2a 94       	dec	r2
 9be:	21 e0       	ldi	r18, 0x01	; 1
 9c0:	82 1a       	sub	r8, r18
 9c2:	91 08       	sbc	r9, r1
 9c4:	81 14       	cp	r8, r1
 9c6:	91 04       	cpc	r9, r1
 9c8:	71 f7       	brne	.-36     	; 0x9a6 <__stack+0xa7>
 9ca:	e8 c0       	rjmp	.+464    	; 0xb9c <__stack+0x29d>
 9cc:	84 36       	cpi	r24, 0x64	; 100
 9ce:	11 f0       	breq	.+4      	; 0x9d4 <__stack+0xd5>
 9d0:	89 36       	cpi	r24, 0x69	; 105
 9d2:	41 f5       	brne	.+80     	; 0xa24 <__stack+0x125>
 9d4:	f8 01       	movw	r30, r16
 9d6:	37 fe       	sbrs	r3, 7
 9d8:	07 c0       	rjmp	.+14     	; 0x9e8 <__stack+0xe9>
 9da:	60 81       	ld	r22, Z
 9dc:	71 81       	ldd	r23, Z+1	; 0x01
 9de:	82 81       	ldd	r24, Z+2	; 0x02
 9e0:	93 81       	ldd	r25, Z+3	; 0x03
 9e2:	0c 5f       	subi	r16, 0xFC	; 252
 9e4:	1f 4f       	sbci	r17, 0xFF	; 255
 9e6:	08 c0       	rjmp	.+16     	; 0x9f8 <__stack+0xf9>
 9e8:	60 81       	ld	r22, Z
 9ea:	71 81       	ldd	r23, Z+1	; 0x01
 9ec:	07 2e       	mov	r0, r23
 9ee:	00 0c       	add	r0, r0
 9f0:	88 0b       	sbc	r24, r24
 9f2:	99 0b       	sbc	r25, r25
 9f4:	0e 5f       	subi	r16, 0xFE	; 254
 9f6:	1f 4f       	sbci	r17, 0xFF	; 255
 9f8:	f3 2d       	mov	r31, r3
 9fa:	ff 76       	andi	r31, 0x6F	; 111
 9fc:	3f 2e       	mov	r3, r31
 9fe:	97 ff       	sbrs	r25, 7
 a00:	09 c0       	rjmp	.+18     	; 0xa14 <__stack+0x115>
 a02:	90 95       	com	r25
 a04:	80 95       	com	r24
 a06:	70 95       	com	r23
 a08:	61 95       	neg	r22
 a0a:	7f 4f       	sbci	r23, 0xFF	; 255
 a0c:	8f 4f       	sbci	r24, 0xFF	; 255
 a0e:	9f 4f       	sbci	r25, 0xFF	; 255
 a10:	f0 68       	ori	r31, 0x80	; 128
 a12:	3f 2e       	mov	r3, r31
 a14:	2a e0       	ldi	r18, 0x0A	; 10
 a16:	30 e0       	ldi	r19, 0x00	; 0
 a18:	a3 01       	movw	r20, r6
 a1a:	0e 94 34 06 	call	0xc68	; 0xc68 <__ultoa_invert>
 a1e:	88 2e       	mov	r8, r24
 a20:	86 18       	sub	r8, r6
 a22:	45 c0       	rjmp	.+138    	; 0xaae <__stack+0x1af>
 a24:	85 37       	cpi	r24, 0x75	; 117
 a26:	31 f4       	brne	.+12     	; 0xa34 <__stack+0x135>
 a28:	23 2d       	mov	r18, r3
 a2a:	2f 7e       	andi	r18, 0xEF	; 239
 a2c:	b2 2e       	mov	r11, r18
 a2e:	2a e0       	ldi	r18, 0x0A	; 10
 a30:	30 e0       	ldi	r19, 0x00	; 0
 a32:	25 c0       	rjmp	.+74     	; 0xa7e <__stack+0x17f>
 a34:	93 2d       	mov	r25, r3
 a36:	99 7f       	andi	r25, 0xF9	; 249
 a38:	b9 2e       	mov	r11, r25
 a3a:	8f 36       	cpi	r24, 0x6F	; 111
 a3c:	c1 f0       	breq	.+48     	; 0xa6e <__stack+0x16f>
 a3e:	18 f4       	brcc	.+6      	; 0xa46 <__stack+0x147>
 a40:	88 35       	cpi	r24, 0x58	; 88
 a42:	79 f0       	breq	.+30     	; 0xa62 <__stack+0x163>
 a44:	b5 c0       	rjmp	.+362    	; 0xbb0 <__stack+0x2b1>
 a46:	80 37       	cpi	r24, 0x70	; 112
 a48:	19 f0       	breq	.+6      	; 0xa50 <__stack+0x151>
 a4a:	88 37       	cpi	r24, 0x78	; 120
 a4c:	21 f0       	breq	.+8      	; 0xa56 <__stack+0x157>
 a4e:	b0 c0       	rjmp	.+352    	; 0xbb0 <__stack+0x2b1>
 a50:	e9 2f       	mov	r30, r25
 a52:	e0 61       	ori	r30, 0x10	; 16
 a54:	be 2e       	mov	r11, r30
 a56:	b4 fe       	sbrs	r11, 4
 a58:	0d c0       	rjmp	.+26     	; 0xa74 <__stack+0x175>
 a5a:	fb 2d       	mov	r31, r11
 a5c:	f4 60       	ori	r31, 0x04	; 4
 a5e:	bf 2e       	mov	r11, r31
 a60:	09 c0       	rjmp	.+18     	; 0xa74 <__stack+0x175>
 a62:	34 fe       	sbrs	r3, 4
 a64:	0a c0       	rjmp	.+20     	; 0xa7a <__stack+0x17b>
 a66:	29 2f       	mov	r18, r25
 a68:	26 60       	ori	r18, 0x06	; 6
 a6a:	b2 2e       	mov	r11, r18
 a6c:	06 c0       	rjmp	.+12     	; 0xa7a <__stack+0x17b>
 a6e:	28 e0       	ldi	r18, 0x08	; 8
 a70:	30 e0       	ldi	r19, 0x00	; 0
 a72:	05 c0       	rjmp	.+10     	; 0xa7e <__stack+0x17f>
 a74:	20 e1       	ldi	r18, 0x10	; 16
 a76:	30 e0       	ldi	r19, 0x00	; 0
 a78:	02 c0       	rjmp	.+4      	; 0xa7e <__stack+0x17f>
 a7a:	20 e1       	ldi	r18, 0x10	; 16
 a7c:	32 e0       	ldi	r19, 0x02	; 2
 a7e:	f8 01       	movw	r30, r16
 a80:	b7 fe       	sbrs	r11, 7
 a82:	07 c0       	rjmp	.+14     	; 0xa92 <__stack+0x193>
 a84:	60 81       	ld	r22, Z
 a86:	71 81       	ldd	r23, Z+1	; 0x01
 a88:	82 81       	ldd	r24, Z+2	; 0x02
 a8a:	93 81       	ldd	r25, Z+3	; 0x03
 a8c:	0c 5f       	subi	r16, 0xFC	; 252
 a8e:	1f 4f       	sbci	r17, 0xFF	; 255
 a90:	06 c0       	rjmp	.+12     	; 0xa9e <__stack+0x19f>
 a92:	60 81       	ld	r22, Z
 a94:	71 81       	ldd	r23, Z+1	; 0x01
 a96:	80 e0       	ldi	r24, 0x00	; 0
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	0e 5f       	subi	r16, 0xFE	; 254
 a9c:	1f 4f       	sbci	r17, 0xFF	; 255
 a9e:	a3 01       	movw	r20, r6
 aa0:	0e 94 34 06 	call	0xc68	; 0xc68 <__ultoa_invert>
 aa4:	88 2e       	mov	r8, r24
 aa6:	86 18       	sub	r8, r6
 aa8:	fb 2d       	mov	r31, r11
 aaa:	ff 77       	andi	r31, 0x7F	; 127
 aac:	3f 2e       	mov	r3, r31
 aae:	36 fe       	sbrs	r3, 6
 ab0:	0d c0       	rjmp	.+26     	; 0xacc <__stack+0x1cd>
 ab2:	23 2d       	mov	r18, r3
 ab4:	2e 7f       	andi	r18, 0xFE	; 254
 ab6:	a2 2e       	mov	r10, r18
 ab8:	89 14       	cp	r8, r9
 aba:	58 f4       	brcc	.+22     	; 0xad2 <__stack+0x1d3>
 abc:	34 fe       	sbrs	r3, 4
 abe:	0b c0       	rjmp	.+22     	; 0xad6 <__stack+0x1d7>
 ac0:	32 fc       	sbrc	r3, 2
 ac2:	09 c0       	rjmp	.+18     	; 0xad6 <__stack+0x1d7>
 ac4:	83 2d       	mov	r24, r3
 ac6:	8e 7e       	andi	r24, 0xEE	; 238
 ac8:	a8 2e       	mov	r10, r24
 aca:	05 c0       	rjmp	.+10     	; 0xad6 <__stack+0x1d7>
 acc:	b8 2c       	mov	r11, r8
 ace:	a3 2c       	mov	r10, r3
 ad0:	03 c0       	rjmp	.+6      	; 0xad8 <__stack+0x1d9>
 ad2:	b8 2c       	mov	r11, r8
 ad4:	01 c0       	rjmp	.+2      	; 0xad8 <__stack+0x1d9>
 ad6:	b9 2c       	mov	r11, r9
 ad8:	a4 fe       	sbrs	r10, 4
 ada:	0f c0       	rjmp	.+30     	; 0xafa <__stack+0x1fb>
 adc:	fe 01       	movw	r30, r28
 ade:	e8 0d       	add	r30, r8
 ae0:	f1 1d       	adc	r31, r1
 ae2:	80 81       	ld	r24, Z
 ae4:	80 33       	cpi	r24, 0x30	; 48
 ae6:	21 f4       	brne	.+8      	; 0xaf0 <__stack+0x1f1>
 ae8:	9a 2d       	mov	r25, r10
 aea:	99 7e       	andi	r25, 0xE9	; 233
 aec:	a9 2e       	mov	r10, r25
 aee:	09 c0       	rjmp	.+18     	; 0xb02 <__stack+0x203>
 af0:	a2 fe       	sbrs	r10, 2
 af2:	06 c0       	rjmp	.+12     	; 0xb00 <__stack+0x201>
 af4:	b3 94       	inc	r11
 af6:	b3 94       	inc	r11
 af8:	04 c0       	rjmp	.+8      	; 0xb02 <__stack+0x203>
 afa:	8a 2d       	mov	r24, r10
 afc:	86 78       	andi	r24, 0x86	; 134
 afe:	09 f0       	breq	.+2      	; 0xb02 <__stack+0x203>
 b00:	b3 94       	inc	r11
 b02:	a3 fc       	sbrc	r10, 3
 b04:	11 c0       	rjmp	.+34     	; 0xb28 <__stack+0x229>
 b06:	a0 fe       	sbrs	r10, 0
 b08:	06 c0       	rjmp	.+12     	; 0xb16 <__stack+0x217>
 b0a:	b2 14       	cp	r11, r2
 b0c:	88 f4       	brcc	.+34     	; 0xb30 <__stack+0x231>
 b0e:	28 0c       	add	r2, r8
 b10:	92 2c       	mov	r9, r2
 b12:	9b 18       	sub	r9, r11
 b14:	0e c0       	rjmp	.+28     	; 0xb32 <__stack+0x233>
 b16:	b2 14       	cp	r11, r2
 b18:	60 f4       	brcc	.+24     	; 0xb32 <__stack+0x233>
 b1a:	b6 01       	movw	r22, r12
 b1c:	80 e2       	ldi	r24, 0x20	; 32
 b1e:	90 e0       	ldi	r25, 0x00	; 0
 b20:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 b24:	b3 94       	inc	r11
 b26:	f7 cf       	rjmp	.-18     	; 0xb16 <__stack+0x217>
 b28:	b2 14       	cp	r11, r2
 b2a:	18 f4       	brcc	.+6      	; 0xb32 <__stack+0x233>
 b2c:	2b 18       	sub	r2, r11
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <__stack+0x235>
 b30:	98 2c       	mov	r9, r8
 b32:	21 2c       	mov	r2, r1
 b34:	a4 fe       	sbrs	r10, 4
 b36:	10 c0       	rjmp	.+32     	; 0xb58 <__stack+0x259>
 b38:	b6 01       	movw	r22, r12
 b3a:	80 e3       	ldi	r24, 0x30	; 48
 b3c:	90 e0       	ldi	r25, 0x00	; 0
 b3e:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 b42:	a2 fe       	sbrs	r10, 2
 b44:	17 c0       	rjmp	.+46     	; 0xb74 <__stack+0x275>
 b46:	a1 fc       	sbrc	r10, 1
 b48:	03 c0       	rjmp	.+6      	; 0xb50 <__stack+0x251>
 b4a:	88 e7       	ldi	r24, 0x78	; 120
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	02 c0       	rjmp	.+4      	; 0xb54 <__stack+0x255>
 b50:	88 e5       	ldi	r24, 0x58	; 88
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	b6 01       	movw	r22, r12
 b56:	0c c0       	rjmp	.+24     	; 0xb70 <__stack+0x271>
 b58:	8a 2d       	mov	r24, r10
 b5a:	86 78       	andi	r24, 0x86	; 134
 b5c:	59 f0       	breq	.+22     	; 0xb74 <__stack+0x275>
 b5e:	a1 fe       	sbrs	r10, 1
 b60:	02 c0       	rjmp	.+4      	; 0xb66 <__stack+0x267>
 b62:	8b e2       	ldi	r24, 0x2B	; 43
 b64:	01 c0       	rjmp	.+2      	; 0xb68 <__stack+0x269>
 b66:	80 e2       	ldi	r24, 0x20	; 32
 b68:	a7 fc       	sbrc	r10, 7
 b6a:	8d e2       	ldi	r24, 0x2D	; 45
 b6c:	b6 01       	movw	r22, r12
 b6e:	90 e0       	ldi	r25, 0x00	; 0
 b70:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 b74:	89 14       	cp	r8, r9
 b76:	38 f4       	brcc	.+14     	; 0xb86 <__stack+0x287>
 b78:	b6 01       	movw	r22, r12
 b7a:	80 e3       	ldi	r24, 0x30	; 48
 b7c:	90 e0       	ldi	r25, 0x00	; 0
 b7e:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 b82:	9a 94       	dec	r9
 b84:	f7 cf       	rjmp	.-18     	; 0xb74 <__stack+0x275>
 b86:	8a 94       	dec	r8
 b88:	f3 01       	movw	r30, r6
 b8a:	e8 0d       	add	r30, r8
 b8c:	f1 1d       	adc	r31, r1
 b8e:	80 81       	ld	r24, Z
 b90:	b6 01       	movw	r22, r12
 b92:	90 e0       	ldi	r25, 0x00	; 0
 b94:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 b98:	81 10       	cpse	r8, r1
 b9a:	f5 cf       	rjmp	.-22     	; 0xb86 <__stack+0x287>
 b9c:	22 20       	and	r2, r2
 b9e:	09 f4       	brne	.+2      	; 0xba2 <__stack+0x2a3>
 ba0:	42 ce       	rjmp	.-892    	; 0x826 <vfprintf+0x24>
 ba2:	b6 01       	movw	r22, r12
 ba4:	80 e2       	ldi	r24, 0x20	; 32
 ba6:	90 e0       	ldi	r25, 0x00	; 0
 ba8:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <fputc>
 bac:	2a 94       	dec	r2
 bae:	f6 cf       	rjmp	.-20     	; 0xb9c <__stack+0x29d>
 bb0:	f6 01       	movw	r30, r12
 bb2:	86 81       	ldd	r24, Z+6	; 0x06
 bb4:	97 81       	ldd	r25, Z+7	; 0x07
 bb6:	02 c0       	rjmp	.+4      	; 0xbbc <__stack+0x2bd>
 bb8:	8f ef       	ldi	r24, 0xFF	; 255
 bba:	9f ef       	ldi	r25, 0xFF	; 255
 bbc:	2b 96       	adiw	r28, 0x0b	; 11
 bbe:	e2 e1       	ldi	r30, 0x12	; 18
 bc0:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__epilogue_restores__>

00000bc4 <strnlen_P>:
 bc4:	fc 01       	movw	r30, r24
 bc6:	05 90       	lpm	r0, Z+
 bc8:	61 50       	subi	r22, 0x01	; 1
 bca:	70 40       	sbci	r23, 0x00	; 0
 bcc:	01 10       	cpse	r0, r1
 bce:	d8 f7       	brcc	.-10     	; 0xbc6 <strnlen_P+0x2>
 bd0:	80 95       	com	r24
 bd2:	90 95       	com	r25
 bd4:	8e 0f       	add	r24, r30
 bd6:	9f 1f       	adc	r25, r31
 bd8:	08 95       	ret

00000bda <strnlen>:
 bda:	fc 01       	movw	r30, r24
 bdc:	61 50       	subi	r22, 0x01	; 1
 bde:	70 40       	sbci	r23, 0x00	; 0
 be0:	01 90       	ld	r0, Z+
 be2:	01 10       	cpse	r0, r1
 be4:	d8 f7       	brcc	.-10     	; 0xbdc <strnlen+0x2>
 be6:	80 95       	com	r24
 be8:	90 95       	com	r25
 bea:	8e 0f       	add	r24, r30
 bec:	9f 1f       	adc	r25, r31
 bee:	08 95       	ret

00000bf0 <fputc>:
 bf0:	0f 93       	push	r16
 bf2:	1f 93       	push	r17
 bf4:	cf 93       	push	r28
 bf6:	df 93       	push	r29
 bf8:	fb 01       	movw	r30, r22
 bfa:	23 81       	ldd	r18, Z+3	; 0x03
 bfc:	21 fd       	sbrc	r18, 1
 bfe:	03 c0       	rjmp	.+6      	; 0xc06 <fputc+0x16>
 c00:	8f ef       	ldi	r24, 0xFF	; 255
 c02:	9f ef       	ldi	r25, 0xFF	; 255
 c04:	2c c0       	rjmp	.+88     	; 0xc5e <fputc+0x6e>
 c06:	22 ff       	sbrs	r18, 2
 c08:	16 c0       	rjmp	.+44     	; 0xc36 <fputc+0x46>
 c0a:	46 81       	ldd	r20, Z+6	; 0x06
 c0c:	57 81       	ldd	r21, Z+7	; 0x07
 c0e:	24 81       	ldd	r18, Z+4	; 0x04
 c10:	35 81       	ldd	r19, Z+5	; 0x05
 c12:	42 17       	cp	r20, r18
 c14:	53 07       	cpc	r21, r19
 c16:	44 f4       	brge	.+16     	; 0xc28 <fputc+0x38>
 c18:	a0 81       	ld	r26, Z
 c1a:	b1 81       	ldd	r27, Z+1	; 0x01
 c1c:	9d 01       	movw	r18, r26
 c1e:	2f 5f       	subi	r18, 0xFF	; 255
 c20:	3f 4f       	sbci	r19, 0xFF	; 255
 c22:	31 83       	std	Z+1, r19	; 0x01
 c24:	20 83       	st	Z, r18
 c26:	8c 93       	st	X, r24
 c28:	26 81       	ldd	r18, Z+6	; 0x06
 c2a:	37 81       	ldd	r19, Z+7	; 0x07
 c2c:	2f 5f       	subi	r18, 0xFF	; 255
 c2e:	3f 4f       	sbci	r19, 0xFF	; 255
 c30:	37 83       	std	Z+7, r19	; 0x07
 c32:	26 83       	std	Z+6, r18	; 0x06
 c34:	14 c0       	rjmp	.+40     	; 0xc5e <fputc+0x6e>
 c36:	8b 01       	movw	r16, r22
 c38:	ec 01       	movw	r28, r24
 c3a:	fb 01       	movw	r30, r22
 c3c:	00 84       	ldd	r0, Z+8	; 0x08
 c3e:	f1 85       	ldd	r31, Z+9	; 0x09
 c40:	e0 2d       	mov	r30, r0
 c42:	09 95       	icall
 c44:	89 2b       	or	r24, r25
 c46:	e1 f6       	brne	.-72     	; 0xc00 <fputc+0x10>
 c48:	d8 01       	movw	r26, r16
 c4a:	16 96       	adiw	r26, 0x06	; 6
 c4c:	8d 91       	ld	r24, X+
 c4e:	9c 91       	ld	r25, X
 c50:	17 97       	sbiw	r26, 0x07	; 7
 c52:	01 96       	adiw	r24, 0x01	; 1
 c54:	17 96       	adiw	r26, 0x07	; 7
 c56:	9c 93       	st	X, r25
 c58:	8e 93       	st	-X, r24
 c5a:	16 97       	sbiw	r26, 0x06	; 6
 c5c:	ce 01       	movw	r24, r28
 c5e:	df 91       	pop	r29
 c60:	cf 91       	pop	r28
 c62:	1f 91       	pop	r17
 c64:	0f 91       	pop	r16
 c66:	08 95       	ret

00000c68 <__ultoa_invert>:
 c68:	fa 01       	movw	r30, r20
 c6a:	aa 27       	eor	r26, r26
 c6c:	28 30       	cpi	r18, 0x08	; 8
 c6e:	51 f1       	breq	.+84     	; 0xcc4 <__ultoa_invert+0x5c>
 c70:	20 31       	cpi	r18, 0x10	; 16
 c72:	81 f1       	breq	.+96     	; 0xcd4 <__ultoa_invert+0x6c>
 c74:	e8 94       	clt
 c76:	6f 93       	push	r22
 c78:	6e 7f       	andi	r22, 0xFE	; 254
 c7a:	6e 5f       	subi	r22, 0xFE	; 254
 c7c:	7f 4f       	sbci	r23, 0xFF	; 255
 c7e:	8f 4f       	sbci	r24, 0xFF	; 255
 c80:	9f 4f       	sbci	r25, 0xFF	; 255
 c82:	af 4f       	sbci	r26, 0xFF	; 255
 c84:	b1 e0       	ldi	r27, 0x01	; 1
 c86:	3e d0       	rcall	.+124    	; 0xd04 <__ultoa_invert+0x9c>
 c88:	b4 e0       	ldi	r27, 0x04	; 4
 c8a:	3c d0       	rcall	.+120    	; 0xd04 <__ultoa_invert+0x9c>
 c8c:	67 0f       	add	r22, r23
 c8e:	78 1f       	adc	r23, r24
 c90:	89 1f       	adc	r24, r25
 c92:	9a 1f       	adc	r25, r26
 c94:	a1 1d       	adc	r26, r1
 c96:	68 0f       	add	r22, r24
 c98:	79 1f       	adc	r23, r25
 c9a:	8a 1f       	adc	r24, r26
 c9c:	91 1d       	adc	r25, r1
 c9e:	a1 1d       	adc	r26, r1
 ca0:	6a 0f       	add	r22, r26
 ca2:	71 1d       	adc	r23, r1
 ca4:	81 1d       	adc	r24, r1
 ca6:	91 1d       	adc	r25, r1
 ca8:	a1 1d       	adc	r26, r1
 caa:	20 d0       	rcall	.+64     	; 0xcec <__ultoa_invert+0x84>
 cac:	09 f4       	brne	.+2      	; 0xcb0 <__ultoa_invert+0x48>
 cae:	68 94       	set
 cb0:	3f 91       	pop	r19
 cb2:	2a e0       	ldi	r18, 0x0A	; 10
 cb4:	26 9f       	mul	r18, r22
 cb6:	11 24       	eor	r1, r1
 cb8:	30 19       	sub	r19, r0
 cba:	30 5d       	subi	r19, 0xD0	; 208
 cbc:	31 93       	st	Z+, r19
 cbe:	de f6       	brtc	.-74     	; 0xc76 <__ultoa_invert+0xe>
 cc0:	cf 01       	movw	r24, r30
 cc2:	08 95       	ret
 cc4:	46 2f       	mov	r20, r22
 cc6:	47 70       	andi	r20, 0x07	; 7
 cc8:	40 5d       	subi	r20, 0xD0	; 208
 cca:	41 93       	st	Z+, r20
 ccc:	b3 e0       	ldi	r27, 0x03	; 3
 cce:	0f d0       	rcall	.+30     	; 0xcee <__ultoa_invert+0x86>
 cd0:	c9 f7       	brne	.-14     	; 0xcc4 <__ultoa_invert+0x5c>
 cd2:	f6 cf       	rjmp	.-20     	; 0xcc0 <__ultoa_invert+0x58>
 cd4:	46 2f       	mov	r20, r22
 cd6:	4f 70       	andi	r20, 0x0F	; 15
 cd8:	40 5d       	subi	r20, 0xD0	; 208
 cda:	4a 33       	cpi	r20, 0x3A	; 58
 cdc:	18 f0       	brcs	.+6      	; 0xce4 <__ultoa_invert+0x7c>
 cde:	49 5d       	subi	r20, 0xD9	; 217
 ce0:	31 fd       	sbrc	r19, 1
 ce2:	40 52       	subi	r20, 0x20	; 32
 ce4:	41 93       	st	Z+, r20
 ce6:	02 d0       	rcall	.+4      	; 0xcec <__ultoa_invert+0x84>
 ce8:	a9 f7       	brne	.-22     	; 0xcd4 <__ultoa_invert+0x6c>
 cea:	ea cf       	rjmp	.-44     	; 0xcc0 <__ultoa_invert+0x58>
 cec:	b4 e0       	ldi	r27, 0x04	; 4
 cee:	a6 95       	lsr	r26
 cf0:	97 95       	ror	r25
 cf2:	87 95       	ror	r24
 cf4:	77 95       	ror	r23
 cf6:	67 95       	ror	r22
 cf8:	ba 95       	dec	r27
 cfa:	c9 f7       	brne	.-14     	; 0xcee <__ultoa_invert+0x86>
 cfc:	00 97       	sbiw	r24, 0x00	; 0
 cfe:	61 05       	cpc	r22, r1
 d00:	71 05       	cpc	r23, r1
 d02:	08 95       	ret
 d04:	9b 01       	movw	r18, r22
 d06:	ac 01       	movw	r20, r24
 d08:	0a 2e       	mov	r0, r26
 d0a:	06 94       	lsr	r0
 d0c:	57 95       	ror	r21
 d0e:	47 95       	ror	r20
 d10:	37 95       	ror	r19
 d12:	27 95       	ror	r18
 d14:	ba 95       	dec	r27
 d16:	c9 f7       	brne	.-14     	; 0xd0a <__ultoa_invert+0xa2>
 d18:	62 0f       	add	r22, r18
 d1a:	73 1f       	adc	r23, r19
 d1c:	84 1f       	adc	r24, r20
 d1e:	95 1f       	adc	r25, r21
 d20:	a0 1d       	adc	r26, r0
 d22:	08 95       	ret

00000d24 <__prologue_saves__>:
 d24:	2f 92       	push	r2
 d26:	3f 92       	push	r3
 d28:	4f 92       	push	r4
 d2a:	5f 92       	push	r5
 d2c:	6f 92       	push	r6
 d2e:	7f 92       	push	r7
 d30:	8f 92       	push	r8
 d32:	9f 92       	push	r9
 d34:	af 92       	push	r10
 d36:	bf 92       	push	r11
 d38:	cf 92       	push	r12
 d3a:	df 92       	push	r13
 d3c:	ef 92       	push	r14
 d3e:	ff 92       	push	r15
 d40:	0f 93       	push	r16
 d42:	1f 93       	push	r17
 d44:	cf 93       	push	r28
 d46:	df 93       	push	r29
 d48:	cd b7       	in	r28, 0x3d	; 61
 d4a:	de b7       	in	r29, 0x3e	; 62
 d4c:	ca 1b       	sub	r28, r26
 d4e:	db 0b       	sbc	r29, r27
 d50:	0f b6       	in	r0, 0x3f	; 63
 d52:	f8 94       	cli
 d54:	de bf       	out	0x3e, r29	; 62
 d56:	0f be       	out	0x3f, r0	; 63
 d58:	cd bf       	out	0x3d, r28	; 61
 d5a:	09 94       	ijmp

00000d5c <__epilogue_restores__>:
 d5c:	2a 88       	ldd	r2, Y+18	; 0x12
 d5e:	39 88       	ldd	r3, Y+17	; 0x11
 d60:	48 88       	ldd	r4, Y+16	; 0x10
 d62:	5f 84       	ldd	r5, Y+15	; 0x0f
 d64:	6e 84       	ldd	r6, Y+14	; 0x0e
 d66:	7d 84       	ldd	r7, Y+13	; 0x0d
 d68:	8c 84       	ldd	r8, Y+12	; 0x0c
 d6a:	9b 84       	ldd	r9, Y+11	; 0x0b
 d6c:	aa 84       	ldd	r10, Y+10	; 0x0a
 d6e:	b9 84       	ldd	r11, Y+9	; 0x09
 d70:	c8 84       	ldd	r12, Y+8	; 0x08
 d72:	df 80       	ldd	r13, Y+7	; 0x07
 d74:	ee 80       	ldd	r14, Y+6	; 0x06
 d76:	fd 80       	ldd	r15, Y+5	; 0x05
 d78:	0c 81       	ldd	r16, Y+4	; 0x04
 d7a:	1b 81       	ldd	r17, Y+3	; 0x03
 d7c:	aa 81       	ldd	r26, Y+2	; 0x02
 d7e:	b9 81       	ldd	r27, Y+1	; 0x01
 d80:	ce 0f       	add	r28, r30
 d82:	d1 1d       	adc	r29, r1
 d84:	0f b6       	in	r0, 0x3f	; 63
 d86:	f8 94       	cli
 d88:	de bf       	out	0x3e, r29	; 62
 d8a:	0f be       	out	0x3f, r0	; 63
 d8c:	cd bf       	out	0x3d, r28	; 61
 d8e:	ed 01       	movw	r28, r26
 d90:	08 95       	ret

00000d92 <_exit>:
 d92:	f8 94       	cli

00000d94 <__stop_program>:
 d94:	ff cf       	rjmp	.-2      	; 0xd94 <__stop_program>
