
RobotRace.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000880  000008f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000880  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000906  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000964  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bdb  00000000  00000000  00000a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007ff  00000000  00000000  000015f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000521  00000000  00000000  00001df6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  00002318  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000051d  00000000  00000000  0000240c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000288  00000000  00000000  00002929  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002bb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e8       	ldi	r30, 0x80	; 128
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 31       	cpi	r26, 0x12	; 18
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b2 00 	call	0x164	; 0x164 <main>
  9e:	0c 94 3e 04 	jmp	0x87c	; 0x87c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ADC>:
char receiveMessage(){
	// Wait for data to be received
	while (!(UCSR0A & (1<<RXC0)));
	// Get and return received data from buffer
	return UDR0;
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 60       	ori	r24, 0x07	; 7
  b8:	80 83       	st	Z, r24
  ba:	80 81       	ld	r24, Z
  bc:	80 68       	ori	r24, 0x80	; 128
  be:	80 83       	st	Z, r24
  c0:	08 95       	ret

000000c2 <readADC>:
  c2:	ec e7       	ldi	r30, 0x7C	; 124
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	90 81       	ld	r25, Z
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	89 2b       	or	r24, r25
  ce:	80 83       	st	Z, r24
  d0:	ea e7       	ldi	r30, 0x7A	; 122
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	80 64       	ori	r24, 0x40	; 64
  d8:	80 83       	st	Z, r24
  da:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  de:	86 fd       	sbrc	r24, 6
  e0:	fc cf       	rjmp	.-8      	; 0xda <readADC+0x18>
  e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  e6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  ea:	08 95       	ret

000000ec <init_USART>:
  ec:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  f4:	88 e1       	ldi	r24, 0x18	; 24
  f6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  fa:	86 e0       	ldi	r24, 0x06	; 6
  fc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 100:	08 95       	ret

00000102 <transferMessage>:
 102:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 106:	95 ff       	sbrs	r25, 5
 108:	fc cf       	rjmp	.-8      	; 0x102 <transferMessage>
 10a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 10e:	08 95       	ret

00000110 <init_driving_PWM>:

#include "definitions.h"

void init_driving_PWM() {
	// Set OC0A (PD6) and OC0B (PD5) as output pins, motor speed pins
	DDRD |= (1 << DDD6) | (1 << DDD5);
 110:	8a b1       	in	r24, 0x0a	; 10
 112:	80 66       	ori	r24, 0x60	; 96
 114:	8a b9       	out	0x0a, r24	; 10
	// Configure Timer0 for Fast PWM mode, non-inverted output (WGM02:0 = 3)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM01) | (1 << WGM00);
 116:	84 b5       	in	r24, 0x24	; 36
 118:	83 6a       	ori	r24, 0xA3	; 163
 11a:	84 bd       	out	0x24, r24	; 36
	//TCCR0B |= (1 << WGM02);

	// Set prescaler to 64
	TCCR0B |= (1 << CS01) | (1 << CS00);
 11c:	85 b5       	in	r24, 0x25	; 37
 11e:	83 60       	ori	r24, 0x03	; 3
 120:	85 bd       	out	0x25, r24	; 37
 122:	08 95       	ret

00000124 <setMotorASpeed>:
}

// Function to set speed of motor A
void setMotorASpeed(uint8_t speed) {
	if (speed == 0) {
 124:	81 11       	cpse	r24, r1
 126:	02 c0       	rjmp	.+4      	; 0x12c <setMotorASpeed+0x8>
		OCR0B = 0; // Turn off PWM output
 128:	18 bc       	out	0x28, r1	; 40
 12a:	08 95       	ret
		} else {
		OCR0B = speed; // Set PWM duty cycle
 12c:	88 bd       	out	0x28, r24	; 40
 12e:	08 95       	ret

00000130 <setMotorBSpeed>:
	}
}

// Function to set speed of motor B
void setMotorBSpeed(uint8_t speed) {
	if (speed == 0) {
 130:	81 11       	cpse	r24, r1
 132:	02 c0       	rjmp	.+4      	; 0x138 <setMotorBSpeed+0x8>
		OCR0A = 0; // Turn off PWM output
 134:	17 bc       	out	0x27, r1	; 39
 136:	08 95       	ret
		} else {
		OCR0A = speed; // Set PWM duty cycle
 138:	87 bd       	out	0x27, r24	; 39
 13a:	08 95       	ret

0000013c <setMotorADirection>:
	}
}

// Function to control direction of motor A
void setMotorADirection(uint8_t direction) {
	if (direction == 1) { // Forward
 13c:	81 30       	cpi	r24, 0x01	; 1
 13e:	21 f4       	brne	.+8      	; 0x148 <setMotorADirection+0xc>
		PORTB |= (1 << A_DIRECTION_PIN); // Set A_DIRECTION_PIN
 140:	85 b1       	in	r24, 0x05	; 5
 142:	84 60       	ori	r24, 0x04	; 4
 144:	85 b9       	out	0x05, r24	; 5
 146:	08 95       	ret
		} else { // Reverse
		PORTB &= ~(1 << A_DIRECTION_PIN); // Clear A_DIRECTION_PIN
 148:	85 b1       	in	r24, 0x05	; 5
 14a:	8b 7f       	andi	r24, 0xFB	; 251
 14c:	85 b9       	out	0x05, r24	; 5
 14e:	08 95       	ret

00000150 <setMotorBDirection>:
	}
}

// Function to control direction of motor B
void setMotorBDirection(uint8_t direction) {
	if (direction == 1) { // Forward
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	21 f4       	brne	.+8      	; 0x15c <setMotorBDirection+0xc>
		PORTB |= (1 << B_DIRECTION_PIN); // Set B_DIRECTION_PIN
 154:	85 b1       	in	r24, 0x05	; 5
 156:	80 61       	ori	r24, 0x10	; 16
 158:	85 b9       	out	0x05, r24	; 5
 15a:	08 95       	ret
		} else { // Reverse
		PORTB &= ~(1 << B_DIRECTION_PIN); // Clear B_DIRECTION_PIN
 15c:	85 b1       	in	r24, 0x05	; 5
 15e:	8f 7e       	andi	r24, 0xEF	; 239
 160:	85 b9       	out	0x05, r24	; 5
 162:	08 95       	ret

00000164 <main>:
#include "usart.h"
#include "movement.h"
//#include "servo.h"

int main(void)
{
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62
 16c:	c0 55       	subi	r28, 0x50	; 80
 16e:	d1 09       	sbc	r29, r1
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	f8 94       	cli
 174:	de bf       	out	0x3e, r29	; 62
 176:	0f be       	out	0x3f, r0	; 63
 178:	cd bf       	out	0x3d, r28	; 61
    
	init_ADC();
 17a:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ADC>
	init_USART(MYUBRR);
 17e:	87 e6       	ldi	r24, 0x67	; 103
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	0e 94 76 00 	call	0xec	; 0xec <init_USART>
 	init_driving_PWM();
 186:	0e 94 88 00 	call	0x110	; 0x110 <init_driving_PWM>
 	//init_servo_PWM();
	
	DDRB |= (1 << 2);
 18a:	84 b1       	in	r24, 0x04	; 4
 18c:	84 60       	ori	r24, 0x04	; 4
 18e:	84 b9       	out	0x04, r24	; 4
	
	
	int white_limit = (int)(WHITE + 30);
	int black_limit = (int)(BLACK - 30);
	//servo_set_angle(0,180);
	PORTB |= (1 << 2);
 190:	85 b1       	in	r24, 0x05	; 5
 192:	84 60       	ori	r24, 0x04	; 4
 194:	85 b9       	out	0x05, r24	; 5
	//int16_t i = 0;
	DDRB |= (1 << A_DIRECTION_PIN) | (1 << B_DIRECTION_PIN); //set direction pins as output
 196:	84 b1       	in	r24, 0x04	; 4
 198:	84 61       	ori	r24, 0x14	; 20
 19a:	84 b9       	out	0x04, r24	; 4
	
	sei();
 19c:	78 94       	sei
// 		for (i=180;i>=0;i--){
// 			servo_set_angle(i,180);
// 			_delay_ms(40);
// 		}
		
		PORTB |= (1 << 2);
 19e:	85 b1       	in	r24, 0x05	; 5
 1a0:	84 60       	ori	r24, 0x04	; 4
 1a2:	85 b9       	out	0x05, r24	; 5
		
		//int sensorLeft = readADC(SENSOR_LEFT_CHANNEL);
		int sensorLeft = white_limit;
		int lineTrackingSensorLeft = readADC(LINE_TRACKING_SENSOR_LEFT_CHANNEL) + 140;
 1a4:	85 e0       	ldi	r24, 0x05	; 5
 1a6:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 1aa:	8c 01       	movw	r16, r24
 1ac:	04 57       	subi	r16, 0x74	; 116
 1ae:	1f 4f       	sbci	r17, 0xFF	; 255
 1b0:	68 01       	movw	r12, r16
		int lineTrackingSensorMiddle = readADC(LINE_TRACKING_SENSOR_MIDDLE_CHANNEL) + 110;
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 1b8:	82 59       	subi	r24, 0x92	; 146
 1ba:	9f 4f       	sbci	r25, 0xFF	; 255
 1bc:	5c 01       	movw	r10, r24
		int lineTrackingSensorRight = readADC(LINE_TRACKING_SENSOR_RIGHT_CHANNEL);
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 1c4:	7c 01       	movw	r14, r24
		int sensorRight = black_limit;
		//int sensorRight = readADC(SENSOR_RIGHT_CHANNEL);
		
		// Convert distance to string
		char buffer[80];
		snprintf(buffer, sizeof(buffer), "%d %d %d %d %d \n", sensorLeft, lineTrackingSensorLeft, lineTrackingSensorMiddle, lineTrackingSensorRight, sensorRight);
 1c6:	82 e0       	ldi	r24, 0x02	; 2
 1c8:	8f 93       	push	r24
 1ca:	8a e3       	ldi	r24, 0x3A	; 58
 1cc:	8f 93       	push	r24
 1ce:	ff 92       	push	r15
 1d0:	ef 92       	push	r14
 1d2:	bf 92       	push	r11
 1d4:	af 92       	push	r10
 1d6:	1f 93       	push	r17
 1d8:	0f 93       	push	r16
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	8f 93       	push	r24
 1de:	8a ee       	ldi	r24, 0xEA	; 234
 1e0:	8f 93       	push	r24
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	91 e0       	ldi	r25, 0x01	; 1
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
 1ea:	1f 92       	push	r1
 1ec:	80 e5       	ldi	r24, 0x50	; 80
 1ee:	8f 93       	push	r24
 1f0:	ce 01       	movw	r24, r28
 1f2:	01 96       	adiw	r24, 0x01	; 1
 1f4:	9f 93       	push	r25
 1f6:	8f 93       	push	r24
 1f8:	0e 94 46 01 	call	0x28c	; 0x28c <snprintf>
		
		// Transmit distance over UART
		for (int i = 0; buffer[i] != '\0'; i++) {
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
 206:	00 e0       	ldi	r16, 0x00	; 0
 208:	10 e0       	ldi	r17, 0x00	; 0
 20a:	04 c0       	rjmp	.+8      	; 0x214 <main+0xb0>
			transferMessage(buffer[i]);
 20c:	0e 94 81 00 	call	0x102	; 0x102 <transferMessage>
		// Convert distance to string
		char buffer[80];
		snprintf(buffer, sizeof(buffer), "%d %d %d %d %d \n", sensorLeft, lineTrackingSensorLeft, lineTrackingSensorMiddle, lineTrackingSensorRight, sensorRight);
		
		// Transmit distance over UART
		for (int i = 0; buffer[i] != '\0'; i++) {
 210:	0f 5f       	subi	r16, 0xFF	; 255
 212:	1f 4f       	sbci	r17, 0xFF	; 255
 214:	e1 e0       	ldi	r30, 0x01	; 1
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	ec 0f       	add	r30, r28
 21a:	fd 1f       	adc	r31, r29
 21c:	e0 0f       	add	r30, r16
 21e:	f1 1f       	adc	r31, r17
 220:	80 81       	ld	r24, Z
 222:	81 11       	cpse	r24, r1
 224:	f3 cf       	rjmp	.-26     	; 0x20c <main+0xa8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 226:	83 ec       	ldi	r24, 0xC3	; 195
 228:	99 e0       	ldi	r25, 0x09	; 9
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <main+0xc6>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0xcc>
 230:	00 00       	nop
		
		char receivedMessage = 'A';
		
		_delay_ms(10);
		if(receivedMessage == 'A'){
			PORTB |= (1 << 2);
 232:	85 b1       	in	r24, 0x05	; 5
 234:	84 60       	ori	r24, 0x04	; 4
 236:	85 b9       	out	0x05, r24	; 5
 238:	83 ec       	ldi	r24, 0xC3	; 195
 23a:	99 e0       	ldi	r25, 0x09	; 9
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <main+0xd8>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0xde>
 242:	00 00       	nop
			transferMessage('O');
			transferMessage('R');
		}

		_delay_ms(10);
		if(sensorLeft > WHITE && lineTrackingSensorLeft > WHITE && lineTrackingSensorRight < BLACK && sensorRight < BLACK){
 244:	9d ec       	ldi	r25, 0xCD	; 205
 246:	c9 16       	cp	r12, r25
 248:	91 e0       	ldi	r25, 0x01	; 1
 24a:	d9 06       	cpc	r13, r25
 24c:	94 f0       	brlt	.+36     	; 0x272 <main+0x10e>
 24e:	88 e5       	ldi	r24, 0x58	; 88
 250:	e8 16       	cp	r14, r24
 252:	82 e0       	ldi	r24, 0x02	; 2
 254:	f8 06       	cpc	r15, r24
 256:	6c f4       	brge	.+26     	; 0x272 <main+0x10e>
			setMotorADirection(1);
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	0e 94 9e 00 	call	0x13c	; 0x13c <setMotorADirection>
			setMotorASpeed(255);
 25e:	8f ef       	ldi	r24, 0xFF	; 255
 260:	0e 94 92 00 	call	0x124	; 0x124 <setMotorASpeed>
			setMotorBDirection(1);
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	0e 94 a8 00 	call	0x150	; 0x150 <setMotorBDirection>
			setMotorBSpeed(255);
 26a:	8f ef       	ldi	r24, 0xFF	; 255
 26c:	0e 94 98 00 	call	0x130	; 0x130 <setMotorBSpeed>
 270:	06 c0       	rjmp	.+12     	; 0x27e <main+0x11a>
		}else{
			setMotorASpeed(0);
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	0e 94 92 00 	call	0x124	; 0x124 <setMotorASpeed>
			setMotorBSpeed(0);
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	0e 94 98 00 	call	0x130	; 0x130 <setMotorBSpeed>
 27e:	87 ea       	ldi	r24, 0xA7	; 167
 280:	91 e6       	ldi	r25, 0x61	; 97
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <main+0x11e>
 286:	00 c0       	rjmp	.+0      	; 0x288 <main+0x124>
 288:	00 00       	nop
// 		setMotorBSpeed(90);
// 		_delay_ms(2000);
// 		setMotorASpeed(0);
// 		setMotorBSpeed(0);
// 		_delay_ms(2000);
    }
 28a:	89 cf       	rjmp	.-238    	; 0x19e <main+0x3a>

0000028c <snprintf>:
 28c:	ae e0       	ldi	r26, 0x0E	; 14
 28e:	b0 e0       	ldi	r27, 0x00	; 0
 290:	ec e4       	ldi	r30, 0x4C	; 76
 292:	f1 e0       	ldi	r31, 0x01	; 1
 294:	0c 94 15 04 	jmp	0x82a	; 0x82a <__prologue_saves__+0x1c>
 298:	0d 89       	ldd	r16, Y+21	; 0x15
 29a:	1e 89       	ldd	r17, Y+22	; 0x16
 29c:	8f 89       	ldd	r24, Y+23	; 0x17
 29e:	98 8d       	ldd	r25, Y+24	; 0x18
 2a0:	26 e0       	ldi	r18, 0x06	; 6
 2a2:	2c 83       	std	Y+4, r18	; 0x04
 2a4:	1a 83       	std	Y+2, r17	; 0x02
 2a6:	09 83       	std	Y+1, r16	; 0x01
 2a8:	97 ff       	sbrs	r25, 7
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <snprintf+0x24>
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	90 e8       	ldi	r25, 0x80	; 128
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	9e 83       	std	Y+6, r25	; 0x06
 2b4:	8d 83       	std	Y+5, r24	; 0x05
 2b6:	ae 01       	movw	r20, r28
 2b8:	45 5e       	subi	r20, 0xE5	; 229
 2ba:	5f 4f       	sbci	r21, 0xFF	; 255
 2bc:	69 8d       	ldd	r22, Y+25	; 0x19
 2be:	7a 8d       	ldd	r23, Y+26	; 0x1a
 2c0:	ce 01       	movw	r24, r28
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	0e 94 76 01 	call	0x2ec	; 0x2ec <vfprintf>
 2c8:	4d 81       	ldd	r20, Y+5	; 0x05
 2ca:	5e 81       	ldd	r21, Y+6	; 0x06
 2cc:	57 fd       	sbrc	r21, 7
 2ce:	0a c0       	rjmp	.+20     	; 0x2e4 <snprintf+0x58>
 2d0:	2f 81       	ldd	r18, Y+7	; 0x07
 2d2:	38 85       	ldd	r19, Y+8	; 0x08
 2d4:	42 17       	cp	r20, r18
 2d6:	53 07       	cpc	r21, r19
 2d8:	0c f4       	brge	.+2      	; 0x2dc <snprintf+0x50>
 2da:	9a 01       	movw	r18, r20
 2dc:	f8 01       	movw	r30, r16
 2de:	e2 0f       	add	r30, r18
 2e0:	f3 1f       	adc	r31, r19
 2e2:	10 82       	st	Z, r1
 2e4:	2e 96       	adiw	r28, 0x0e	; 14
 2e6:	e4 e0       	ldi	r30, 0x04	; 4
 2e8:	0c 94 31 04 	jmp	0x862	; 0x862 <__epilogue_restores__+0x1c>

000002ec <vfprintf>:
 2ec:	ab e0       	ldi	r26, 0x0B	; 11
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	ec e7       	ldi	r30, 0x7C	; 124
 2f2:	f1 e0       	ldi	r31, 0x01	; 1
 2f4:	0c 94 07 04 	jmp	0x80e	; 0x80e <__prologue_saves__>
 2f8:	6c 01       	movw	r12, r24
 2fa:	7b 01       	movw	r14, r22
 2fc:	8a 01       	movw	r16, r20
 2fe:	fc 01       	movw	r30, r24
 300:	17 82       	std	Z+7, r1	; 0x07
 302:	16 82       	std	Z+6, r1	; 0x06
 304:	83 81       	ldd	r24, Z+3	; 0x03
 306:	81 ff       	sbrs	r24, 1
 308:	cc c1       	rjmp	.+920    	; 0x6a2 <__EEPROM_REGION_LENGTH__+0x2a2>
 30a:	ce 01       	movw	r24, r28
 30c:	01 96       	adiw	r24, 0x01	; 1
 30e:	3c 01       	movw	r6, r24
 310:	f6 01       	movw	r30, r12
 312:	93 81       	ldd	r25, Z+3	; 0x03
 314:	f7 01       	movw	r30, r14
 316:	93 fd       	sbrc	r25, 3
 318:	85 91       	lpm	r24, Z+
 31a:	93 ff       	sbrs	r25, 3
 31c:	81 91       	ld	r24, Z+
 31e:	7f 01       	movw	r14, r30
 320:	88 23       	and	r24, r24
 322:	09 f4       	brne	.+2      	; 0x326 <vfprintf+0x3a>
 324:	ba c1       	rjmp	.+884    	; 0x69a <__EEPROM_REGION_LENGTH__+0x29a>
 326:	85 32       	cpi	r24, 0x25	; 37
 328:	39 f4       	brne	.+14     	; 0x338 <vfprintf+0x4c>
 32a:	93 fd       	sbrc	r25, 3
 32c:	85 91       	lpm	r24, Z+
 32e:	93 ff       	sbrs	r25, 3
 330:	81 91       	ld	r24, Z+
 332:	7f 01       	movw	r14, r30
 334:	85 32       	cpi	r24, 0x25	; 37
 336:	29 f4       	brne	.+10     	; 0x342 <vfprintf+0x56>
 338:	b6 01       	movw	r22, r12
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 340:	e7 cf       	rjmp	.-50     	; 0x310 <vfprintf+0x24>
 342:	91 2c       	mov	r9, r1
 344:	21 2c       	mov	r2, r1
 346:	31 2c       	mov	r3, r1
 348:	ff e1       	ldi	r31, 0x1F	; 31
 34a:	f3 15       	cp	r31, r3
 34c:	d8 f0       	brcs	.+54     	; 0x384 <vfprintf+0x98>
 34e:	8b 32       	cpi	r24, 0x2B	; 43
 350:	79 f0       	breq	.+30     	; 0x370 <vfprintf+0x84>
 352:	38 f4       	brcc	.+14     	; 0x362 <vfprintf+0x76>
 354:	80 32       	cpi	r24, 0x20	; 32
 356:	79 f0       	breq	.+30     	; 0x376 <vfprintf+0x8a>
 358:	83 32       	cpi	r24, 0x23	; 35
 35a:	a1 f4       	brne	.+40     	; 0x384 <vfprintf+0x98>
 35c:	23 2d       	mov	r18, r3
 35e:	20 61       	ori	r18, 0x10	; 16
 360:	1d c0       	rjmp	.+58     	; 0x39c <vfprintf+0xb0>
 362:	8d 32       	cpi	r24, 0x2D	; 45
 364:	61 f0       	breq	.+24     	; 0x37e <vfprintf+0x92>
 366:	80 33       	cpi	r24, 0x30	; 48
 368:	69 f4       	brne	.+26     	; 0x384 <vfprintf+0x98>
 36a:	23 2d       	mov	r18, r3
 36c:	21 60       	ori	r18, 0x01	; 1
 36e:	16 c0       	rjmp	.+44     	; 0x39c <vfprintf+0xb0>
 370:	83 2d       	mov	r24, r3
 372:	82 60       	ori	r24, 0x02	; 2
 374:	38 2e       	mov	r3, r24
 376:	e3 2d       	mov	r30, r3
 378:	e4 60       	ori	r30, 0x04	; 4
 37a:	3e 2e       	mov	r3, r30
 37c:	2a c0       	rjmp	.+84     	; 0x3d2 <vfprintf+0xe6>
 37e:	f3 2d       	mov	r31, r3
 380:	f8 60       	ori	r31, 0x08	; 8
 382:	1d c0       	rjmp	.+58     	; 0x3be <vfprintf+0xd2>
 384:	37 fc       	sbrc	r3, 7
 386:	2d c0       	rjmp	.+90     	; 0x3e2 <vfprintf+0xf6>
 388:	20 ed       	ldi	r18, 0xD0	; 208
 38a:	28 0f       	add	r18, r24
 38c:	2a 30       	cpi	r18, 0x0A	; 10
 38e:	40 f0       	brcs	.+16     	; 0x3a0 <vfprintf+0xb4>
 390:	8e 32       	cpi	r24, 0x2E	; 46
 392:	b9 f4       	brne	.+46     	; 0x3c2 <vfprintf+0xd6>
 394:	36 fc       	sbrc	r3, 6
 396:	81 c1       	rjmp	.+770    	; 0x69a <__EEPROM_REGION_LENGTH__+0x29a>
 398:	23 2d       	mov	r18, r3
 39a:	20 64       	ori	r18, 0x40	; 64
 39c:	32 2e       	mov	r3, r18
 39e:	19 c0       	rjmp	.+50     	; 0x3d2 <vfprintf+0xe6>
 3a0:	36 fe       	sbrs	r3, 6
 3a2:	06 c0       	rjmp	.+12     	; 0x3b0 <vfprintf+0xc4>
 3a4:	8a e0       	ldi	r24, 0x0A	; 10
 3a6:	98 9e       	mul	r9, r24
 3a8:	20 0d       	add	r18, r0
 3aa:	11 24       	eor	r1, r1
 3ac:	92 2e       	mov	r9, r18
 3ae:	11 c0       	rjmp	.+34     	; 0x3d2 <vfprintf+0xe6>
 3b0:	ea e0       	ldi	r30, 0x0A	; 10
 3b2:	2e 9e       	mul	r2, r30
 3b4:	20 0d       	add	r18, r0
 3b6:	11 24       	eor	r1, r1
 3b8:	22 2e       	mov	r2, r18
 3ba:	f3 2d       	mov	r31, r3
 3bc:	f0 62       	ori	r31, 0x20	; 32
 3be:	3f 2e       	mov	r3, r31
 3c0:	08 c0       	rjmp	.+16     	; 0x3d2 <vfprintf+0xe6>
 3c2:	8c 36       	cpi	r24, 0x6C	; 108
 3c4:	21 f4       	brne	.+8      	; 0x3ce <vfprintf+0xe2>
 3c6:	83 2d       	mov	r24, r3
 3c8:	80 68       	ori	r24, 0x80	; 128
 3ca:	38 2e       	mov	r3, r24
 3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <vfprintf+0xe6>
 3ce:	88 36       	cpi	r24, 0x68	; 104
 3d0:	41 f4       	brne	.+16     	; 0x3e2 <vfprintf+0xf6>
 3d2:	f7 01       	movw	r30, r14
 3d4:	93 fd       	sbrc	r25, 3
 3d6:	85 91       	lpm	r24, Z+
 3d8:	93 ff       	sbrs	r25, 3
 3da:	81 91       	ld	r24, Z+
 3dc:	7f 01       	movw	r14, r30
 3de:	81 11       	cpse	r24, r1
 3e0:	b3 cf       	rjmp	.-154    	; 0x348 <vfprintf+0x5c>
 3e2:	98 2f       	mov	r25, r24
 3e4:	9f 7d       	andi	r25, 0xDF	; 223
 3e6:	95 54       	subi	r25, 0x45	; 69
 3e8:	93 30       	cpi	r25, 0x03	; 3
 3ea:	28 f4       	brcc	.+10     	; 0x3f6 <vfprintf+0x10a>
 3ec:	0c 5f       	subi	r16, 0xFC	; 252
 3ee:	1f 4f       	sbci	r17, 0xFF	; 255
 3f0:	9f e3       	ldi	r25, 0x3F	; 63
 3f2:	99 83       	std	Y+1, r25	; 0x01
 3f4:	0d c0       	rjmp	.+26     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3f6:	83 36       	cpi	r24, 0x63	; 99
 3f8:	31 f0       	breq	.+12     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fa:	83 37       	cpi	r24, 0x73	; 115
 3fc:	71 f0       	breq	.+28     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3fe:	83 35       	cpi	r24, 0x53	; 83
 400:	09 f0       	breq	.+2      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 402:	59 c0       	rjmp	.+178    	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 404:	21 c0       	rjmp	.+66     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 406:	f8 01       	movw	r30, r16
 408:	80 81       	ld	r24, Z
 40a:	89 83       	std	Y+1, r24	; 0x01
 40c:	0e 5f       	subi	r16, 0xFE	; 254
 40e:	1f 4f       	sbci	r17, 0xFF	; 255
 410:	88 24       	eor	r8, r8
 412:	83 94       	inc	r8
 414:	91 2c       	mov	r9, r1
 416:	53 01       	movw	r10, r6
 418:	13 c0       	rjmp	.+38     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 41a:	28 01       	movw	r4, r16
 41c:	f2 e0       	ldi	r31, 0x02	; 2
 41e:	4f 0e       	add	r4, r31
 420:	51 1c       	adc	r5, r1
 422:	f8 01       	movw	r30, r16
 424:	a0 80       	ld	r10, Z
 426:	b1 80       	ldd	r11, Z+1	; 0x01
 428:	36 fe       	sbrs	r3, 6
 42a:	03 c0       	rjmp	.+6      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 42c:	69 2d       	mov	r22, r9
 42e:	70 e0       	ldi	r23, 0x00	; 0
 430:	02 c0       	rjmp	.+4      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 432:	6f ef       	ldi	r22, 0xFF	; 255
 434:	7f ef       	ldi	r23, 0xFF	; 255
 436:	c5 01       	movw	r24, r10
 438:	0e 94 62 03 	call	0x6c4	; 0x6c4 <strnlen>
 43c:	4c 01       	movw	r8, r24
 43e:	82 01       	movw	r16, r4
 440:	f3 2d       	mov	r31, r3
 442:	ff 77       	andi	r31, 0x7F	; 127
 444:	3f 2e       	mov	r3, r31
 446:	16 c0       	rjmp	.+44     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 448:	28 01       	movw	r4, r16
 44a:	22 e0       	ldi	r18, 0x02	; 2
 44c:	42 0e       	add	r4, r18
 44e:	51 1c       	adc	r5, r1
 450:	f8 01       	movw	r30, r16
 452:	a0 80       	ld	r10, Z
 454:	b1 80       	ldd	r11, Z+1	; 0x01
 456:	36 fe       	sbrs	r3, 6
 458:	03 c0       	rjmp	.+6      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 45a:	69 2d       	mov	r22, r9
 45c:	70 e0       	ldi	r23, 0x00	; 0
 45e:	02 c0       	rjmp	.+4      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 460:	6f ef       	ldi	r22, 0xFF	; 255
 462:	7f ef       	ldi	r23, 0xFF	; 255
 464:	c5 01       	movw	r24, r10
 466:	0e 94 57 03 	call	0x6ae	; 0x6ae <strnlen_P>
 46a:	4c 01       	movw	r8, r24
 46c:	f3 2d       	mov	r31, r3
 46e:	f0 68       	ori	r31, 0x80	; 128
 470:	3f 2e       	mov	r3, r31
 472:	82 01       	movw	r16, r4
 474:	33 fc       	sbrc	r3, 3
 476:	1b c0       	rjmp	.+54     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 478:	82 2d       	mov	r24, r2
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	88 16       	cp	r8, r24
 47e:	99 06       	cpc	r9, r25
 480:	b0 f4       	brcc	.+44     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 482:	b6 01       	movw	r22, r12
 484:	80 e2       	ldi	r24, 0x20	; 32
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 48c:	2a 94       	dec	r2
 48e:	f4 cf       	rjmp	.-24     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 490:	f5 01       	movw	r30, r10
 492:	37 fc       	sbrc	r3, 7
 494:	85 91       	lpm	r24, Z+
 496:	37 fe       	sbrs	r3, 7
 498:	81 91       	ld	r24, Z+
 49a:	5f 01       	movw	r10, r30
 49c:	b6 01       	movw	r22, r12
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 4a4:	21 10       	cpse	r2, r1
 4a6:	2a 94       	dec	r2
 4a8:	21 e0       	ldi	r18, 0x01	; 1
 4aa:	82 1a       	sub	r8, r18
 4ac:	91 08       	sbc	r9, r1
 4ae:	81 14       	cp	r8, r1
 4b0:	91 04       	cpc	r9, r1
 4b2:	71 f7       	brne	.-36     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 4b4:	e8 c0       	rjmp	.+464    	; 0x686 <__EEPROM_REGION_LENGTH__+0x286>
 4b6:	84 36       	cpi	r24, 0x64	; 100
 4b8:	11 f0       	breq	.+4      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4ba:	89 36       	cpi	r24, 0x69	; 105
 4bc:	41 f5       	brne	.+80     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4be:	f8 01       	movw	r30, r16
 4c0:	37 fe       	sbrs	r3, 7
 4c2:	07 c0       	rjmp	.+14     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4c4:	60 81       	ld	r22, Z
 4c6:	71 81       	ldd	r23, Z+1	; 0x01
 4c8:	82 81       	ldd	r24, Z+2	; 0x02
 4ca:	93 81       	ldd	r25, Z+3	; 0x03
 4cc:	0c 5f       	subi	r16, 0xFC	; 252
 4ce:	1f 4f       	sbci	r17, 0xFF	; 255
 4d0:	08 c0       	rjmp	.+16     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4d2:	60 81       	ld	r22, Z
 4d4:	71 81       	ldd	r23, Z+1	; 0x01
 4d6:	07 2e       	mov	r0, r23
 4d8:	00 0c       	add	r0, r0
 4da:	88 0b       	sbc	r24, r24
 4dc:	99 0b       	sbc	r25, r25
 4de:	0e 5f       	subi	r16, 0xFE	; 254
 4e0:	1f 4f       	sbci	r17, 0xFF	; 255
 4e2:	f3 2d       	mov	r31, r3
 4e4:	ff 76       	andi	r31, 0x6F	; 111
 4e6:	3f 2e       	mov	r3, r31
 4e8:	97 ff       	sbrs	r25, 7
 4ea:	09 c0       	rjmp	.+18     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
 4ec:	90 95       	com	r25
 4ee:	80 95       	com	r24
 4f0:	70 95       	com	r23
 4f2:	61 95       	neg	r22
 4f4:	7f 4f       	sbci	r23, 0xFF	; 255
 4f6:	8f 4f       	sbci	r24, 0xFF	; 255
 4f8:	9f 4f       	sbci	r25, 0xFF	; 255
 4fa:	f0 68       	ori	r31, 0x80	; 128
 4fc:	3f 2e       	mov	r3, r31
 4fe:	2a e0       	ldi	r18, 0x0A	; 10
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	a3 01       	movw	r20, r6
 504:	0e 94 a9 03 	call	0x752	; 0x752 <__ultoa_invert>
 508:	88 2e       	mov	r8, r24
 50a:	86 18       	sub	r8, r6
 50c:	45 c0       	rjmp	.+138    	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 50e:	85 37       	cpi	r24, 0x75	; 117
 510:	31 f4       	brne	.+12     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 512:	23 2d       	mov	r18, r3
 514:	2f 7e       	andi	r18, 0xEF	; 239
 516:	b2 2e       	mov	r11, r18
 518:	2a e0       	ldi	r18, 0x0A	; 10
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	25 c0       	rjmp	.+74     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 51e:	93 2d       	mov	r25, r3
 520:	99 7f       	andi	r25, 0xF9	; 249
 522:	b9 2e       	mov	r11, r25
 524:	8f 36       	cpi	r24, 0x6F	; 111
 526:	c1 f0       	breq	.+48     	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
 528:	18 f4       	brcc	.+6      	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 52a:	88 35       	cpi	r24, 0x58	; 88
 52c:	79 f0       	breq	.+30     	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 52e:	b5 c0       	rjmp	.+362    	; 0x69a <__EEPROM_REGION_LENGTH__+0x29a>
 530:	80 37       	cpi	r24, 0x70	; 112
 532:	19 f0       	breq	.+6      	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
 534:	88 37       	cpi	r24, 0x78	; 120
 536:	21 f0       	breq	.+8      	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 538:	b0 c0       	rjmp	.+352    	; 0x69a <__EEPROM_REGION_LENGTH__+0x29a>
 53a:	e9 2f       	mov	r30, r25
 53c:	e0 61       	ori	r30, 0x10	; 16
 53e:	be 2e       	mov	r11, r30
 540:	b4 fe       	sbrs	r11, 4
 542:	0d c0       	rjmp	.+26     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 544:	fb 2d       	mov	r31, r11
 546:	f4 60       	ori	r31, 0x04	; 4
 548:	bf 2e       	mov	r11, r31
 54a:	09 c0       	rjmp	.+18     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 54c:	34 fe       	sbrs	r3, 4
 54e:	0a c0       	rjmp	.+20     	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 550:	29 2f       	mov	r18, r25
 552:	26 60       	ori	r18, 0x06	; 6
 554:	b2 2e       	mov	r11, r18
 556:	06 c0       	rjmp	.+12     	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 558:	28 e0       	ldi	r18, 0x08	; 8
 55a:	30 e0       	ldi	r19, 0x00	; 0
 55c:	05 c0       	rjmp	.+10     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 55e:	20 e1       	ldi	r18, 0x10	; 16
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	02 c0       	rjmp	.+4      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 564:	20 e1       	ldi	r18, 0x10	; 16
 566:	32 e0       	ldi	r19, 0x02	; 2
 568:	f8 01       	movw	r30, r16
 56a:	b7 fe       	sbrs	r11, 7
 56c:	07 c0       	rjmp	.+14     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 56e:	60 81       	ld	r22, Z
 570:	71 81       	ldd	r23, Z+1	; 0x01
 572:	82 81       	ldd	r24, Z+2	; 0x02
 574:	93 81       	ldd	r25, Z+3	; 0x03
 576:	0c 5f       	subi	r16, 0xFC	; 252
 578:	1f 4f       	sbci	r17, 0xFF	; 255
 57a:	06 c0       	rjmp	.+12     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
 57c:	60 81       	ld	r22, Z
 57e:	71 81       	ldd	r23, Z+1	; 0x01
 580:	80 e0       	ldi	r24, 0x00	; 0
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 5f       	subi	r16, 0xFE	; 254
 586:	1f 4f       	sbci	r17, 0xFF	; 255
 588:	a3 01       	movw	r20, r6
 58a:	0e 94 a9 03 	call	0x752	; 0x752 <__ultoa_invert>
 58e:	88 2e       	mov	r8, r24
 590:	86 18       	sub	r8, r6
 592:	fb 2d       	mov	r31, r11
 594:	ff 77       	andi	r31, 0x7F	; 127
 596:	3f 2e       	mov	r3, r31
 598:	36 fe       	sbrs	r3, 6
 59a:	0d c0       	rjmp	.+26     	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 59c:	23 2d       	mov	r18, r3
 59e:	2e 7f       	andi	r18, 0xFE	; 254
 5a0:	a2 2e       	mov	r10, r18
 5a2:	89 14       	cp	r8, r9
 5a4:	58 f4       	brcc	.+22     	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 5a6:	34 fe       	sbrs	r3, 4
 5a8:	0b c0       	rjmp	.+22     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5aa:	32 fc       	sbrc	r3, 2
 5ac:	09 c0       	rjmp	.+18     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5ae:	83 2d       	mov	r24, r3
 5b0:	8e 7e       	andi	r24, 0xEE	; 238
 5b2:	a8 2e       	mov	r10, r24
 5b4:	05 c0       	rjmp	.+10     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5b6:	b8 2c       	mov	r11, r8
 5b8:	a3 2c       	mov	r10, r3
 5ba:	03 c0       	rjmp	.+6      	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5bc:	b8 2c       	mov	r11, r8
 5be:	01 c0       	rjmp	.+2      	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5c0:	b9 2c       	mov	r11, r9
 5c2:	a4 fe       	sbrs	r10, 4
 5c4:	0f c0       	rjmp	.+30     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5c6:	fe 01       	movw	r30, r28
 5c8:	e8 0d       	add	r30, r8
 5ca:	f1 1d       	adc	r31, r1
 5cc:	80 81       	ld	r24, Z
 5ce:	80 33       	cpi	r24, 0x30	; 48
 5d0:	21 f4       	brne	.+8      	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5d2:	9a 2d       	mov	r25, r10
 5d4:	99 7e       	andi	r25, 0xE9	; 233
 5d6:	a9 2e       	mov	r10, r25
 5d8:	09 c0       	rjmp	.+18     	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5da:	a2 fe       	sbrs	r10, 2
 5dc:	06 c0       	rjmp	.+12     	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 5de:	b3 94       	inc	r11
 5e0:	b3 94       	inc	r11
 5e2:	04 c0       	rjmp	.+8      	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5e4:	8a 2d       	mov	r24, r10
 5e6:	86 78       	andi	r24, 0x86	; 134
 5e8:	09 f0       	breq	.+2      	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5ea:	b3 94       	inc	r11
 5ec:	a3 fc       	sbrc	r10, 3
 5ee:	11 c0       	rjmp	.+34     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 5f0:	a0 fe       	sbrs	r10, 0
 5f2:	06 c0       	rjmp	.+12     	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
 5f4:	b2 14       	cp	r11, r2
 5f6:	88 f4       	brcc	.+34     	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
 5f8:	28 0c       	add	r2, r8
 5fa:	92 2c       	mov	r9, r2
 5fc:	9b 18       	sub	r9, r11
 5fe:	0e c0       	rjmp	.+28     	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 600:	b2 14       	cp	r11, r2
 602:	60 f4       	brcc	.+24     	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 604:	b6 01       	movw	r22, r12
 606:	80 e2       	ldi	r24, 0x20	; 32
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 60e:	b3 94       	inc	r11
 610:	f7 cf       	rjmp	.-18     	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
 612:	b2 14       	cp	r11, r2
 614:	18 f4       	brcc	.+6      	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 616:	2b 18       	sub	r2, r11
 618:	02 c0       	rjmp	.+4      	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
 61a:	98 2c       	mov	r9, r8
 61c:	21 2c       	mov	r2, r1
 61e:	a4 fe       	sbrs	r10, 4
 620:	10 c0       	rjmp	.+32     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 622:	b6 01       	movw	r22, r12
 624:	80 e3       	ldi	r24, 0x30	; 48
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 62c:	a2 fe       	sbrs	r10, 2
 62e:	17 c0       	rjmp	.+46     	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
 630:	a1 fc       	sbrc	r10, 1
 632:	03 c0       	rjmp	.+6      	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 634:	88 e7       	ldi	r24, 0x78	; 120
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	02 c0       	rjmp	.+4      	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 63a:	88 e5       	ldi	r24, 0x58	; 88
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	b6 01       	movw	r22, r12
 640:	0c c0       	rjmp	.+24     	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 642:	8a 2d       	mov	r24, r10
 644:	86 78       	andi	r24, 0x86	; 134
 646:	59 f0       	breq	.+22     	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
 648:	a1 fe       	sbrs	r10, 1
 64a:	02 c0       	rjmp	.+4      	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
 64c:	8b e2       	ldi	r24, 0x2B	; 43
 64e:	01 c0       	rjmp	.+2      	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 650:	80 e2       	ldi	r24, 0x20	; 32
 652:	a7 fc       	sbrc	r10, 7
 654:	8d e2       	ldi	r24, 0x2D	; 45
 656:	b6 01       	movw	r22, r12
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 65e:	89 14       	cp	r8, r9
 660:	38 f4       	brcc	.+14     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 662:	b6 01       	movw	r22, r12
 664:	80 e3       	ldi	r24, 0x30	; 48
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 66c:	9a 94       	dec	r9
 66e:	f7 cf       	rjmp	.-18     	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
 670:	8a 94       	dec	r8
 672:	f3 01       	movw	r30, r6
 674:	e8 0d       	add	r30, r8
 676:	f1 1d       	adc	r31, r1
 678:	80 81       	ld	r24, Z
 67a:	b6 01       	movw	r22, r12
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 682:	81 10       	cpse	r8, r1
 684:	f5 cf       	rjmp	.-22     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 686:	22 20       	and	r2, r2
 688:	09 f4       	brne	.+2      	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 68a:	42 ce       	rjmp	.-892    	; 0x310 <vfprintf+0x24>
 68c:	b6 01       	movw	r22, r12
 68e:	80 e2       	ldi	r24, 0x20	; 32
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	0e 94 6d 03 	call	0x6da	; 0x6da <fputc>
 696:	2a 94       	dec	r2
 698:	f6 cf       	rjmp	.-20     	; 0x686 <__EEPROM_REGION_LENGTH__+0x286>
 69a:	f6 01       	movw	r30, r12
 69c:	86 81       	ldd	r24, Z+6	; 0x06
 69e:	97 81       	ldd	r25, Z+7	; 0x07
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
 6a2:	8f ef       	ldi	r24, 0xFF	; 255
 6a4:	9f ef       	ldi	r25, 0xFF	; 255
 6a6:	2b 96       	adiw	r28, 0x0b	; 11
 6a8:	e2 e1       	ldi	r30, 0x12	; 18
 6aa:	0c 94 23 04 	jmp	0x846	; 0x846 <__epilogue_restores__>

000006ae <strnlen_P>:
 6ae:	fc 01       	movw	r30, r24
 6b0:	05 90       	lpm	r0, Z+
 6b2:	61 50       	subi	r22, 0x01	; 1
 6b4:	70 40       	sbci	r23, 0x00	; 0
 6b6:	01 10       	cpse	r0, r1
 6b8:	d8 f7       	brcc	.-10     	; 0x6b0 <strnlen_P+0x2>
 6ba:	80 95       	com	r24
 6bc:	90 95       	com	r25
 6be:	8e 0f       	add	r24, r30
 6c0:	9f 1f       	adc	r25, r31
 6c2:	08 95       	ret

000006c4 <strnlen>:
 6c4:	fc 01       	movw	r30, r24
 6c6:	61 50       	subi	r22, 0x01	; 1
 6c8:	70 40       	sbci	r23, 0x00	; 0
 6ca:	01 90       	ld	r0, Z+
 6cc:	01 10       	cpse	r0, r1
 6ce:	d8 f7       	brcc	.-10     	; 0x6c6 <strnlen+0x2>
 6d0:	80 95       	com	r24
 6d2:	90 95       	com	r25
 6d4:	8e 0f       	add	r24, r30
 6d6:	9f 1f       	adc	r25, r31
 6d8:	08 95       	ret

000006da <fputc>:
 6da:	0f 93       	push	r16
 6dc:	1f 93       	push	r17
 6de:	cf 93       	push	r28
 6e0:	df 93       	push	r29
 6e2:	fb 01       	movw	r30, r22
 6e4:	23 81       	ldd	r18, Z+3	; 0x03
 6e6:	21 fd       	sbrc	r18, 1
 6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <fputc+0x16>
 6ea:	8f ef       	ldi	r24, 0xFF	; 255
 6ec:	9f ef       	ldi	r25, 0xFF	; 255
 6ee:	2c c0       	rjmp	.+88     	; 0x748 <fputc+0x6e>
 6f0:	22 ff       	sbrs	r18, 2
 6f2:	16 c0       	rjmp	.+44     	; 0x720 <fputc+0x46>
 6f4:	46 81       	ldd	r20, Z+6	; 0x06
 6f6:	57 81       	ldd	r21, Z+7	; 0x07
 6f8:	24 81       	ldd	r18, Z+4	; 0x04
 6fa:	35 81       	ldd	r19, Z+5	; 0x05
 6fc:	42 17       	cp	r20, r18
 6fe:	53 07       	cpc	r21, r19
 700:	44 f4       	brge	.+16     	; 0x712 <fputc+0x38>
 702:	a0 81       	ld	r26, Z
 704:	b1 81       	ldd	r27, Z+1	; 0x01
 706:	9d 01       	movw	r18, r26
 708:	2f 5f       	subi	r18, 0xFF	; 255
 70a:	3f 4f       	sbci	r19, 0xFF	; 255
 70c:	31 83       	std	Z+1, r19	; 0x01
 70e:	20 83       	st	Z, r18
 710:	8c 93       	st	X, r24
 712:	26 81       	ldd	r18, Z+6	; 0x06
 714:	37 81       	ldd	r19, Z+7	; 0x07
 716:	2f 5f       	subi	r18, 0xFF	; 255
 718:	3f 4f       	sbci	r19, 0xFF	; 255
 71a:	37 83       	std	Z+7, r19	; 0x07
 71c:	26 83       	std	Z+6, r18	; 0x06
 71e:	14 c0       	rjmp	.+40     	; 0x748 <fputc+0x6e>
 720:	8b 01       	movw	r16, r22
 722:	ec 01       	movw	r28, r24
 724:	fb 01       	movw	r30, r22
 726:	00 84       	ldd	r0, Z+8	; 0x08
 728:	f1 85       	ldd	r31, Z+9	; 0x09
 72a:	e0 2d       	mov	r30, r0
 72c:	09 95       	icall
 72e:	89 2b       	or	r24, r25
 730:	e1 f6       	brne	.-72     	; 0x6ea <fputc+0x10>
 732:	d8 01       	movw	r26, r16
 734:	16 96       	adiw	r26, 0x06	; 6
 736:	8d 91       	ld	r24, X+
 738:	9c 91       	ld	r25, X
 73a:	17 97       	sbiw	r26, 0x07	; 7
 73c:	01 96       	adiw	r24, 0x01	; 1
 73e:	17 96       	adiw	r26, 0x07	; 7
 740:	9c 93       	st	X, r25
 742:	8e 93       	st	-X, r24
 744:	16 97       	sbiw	r26, 0x06	; 6
 746:	ce 01       	movw	r24, r28
 748:	df 91       	pop	r29
 74a:	cf 91       	pop	r28
 74c:	1f 91       	pop	r17
 74e:	0f 91       	pop	r16
 750:	08 95       	ret

00000752 <__ultoa_invert>:
 752:	fa 01       	movw	r30, r20
 754:	aa 27       	eor	r26, r26
 756:	28 30       	cpi	r18, 0x08	; 8
 758:	51 f1       	breq	.+84     	; 0x7ae <__ultoa_invert+0x5c>
 75a:	20 31       	cpi	r18, 0x10	; 16
 75c:	81 f1       	breq	.+96     	; 0x7be <__ultoa_invert+0x6c>
 75e:	e8 94       	clt
 760:	6f 93       	push	r22
 762:	6e 7f       	andi	r22, 0xFE	; 254
 764:	6e 5f       	subi	r22, 0xFE	; 254
 766:	7f 4f       	sbci	r23, 0xFF	; 255
 768:	8f 4f       	sbci	r24, 0xFF	; 255
 76a:	9f 4f       	sbci	r25, 0xFF	; 255
 76c:	af 4f       	sbci	r26, 0xFF	; 255
 76e:	b1 e0       	ldi	r27, 0x01	; 1
 770:	3e d0       	rcall	.+124    	; 0x7ee <__ultoa_invert+0x9c>
 772:	b4 e0       	ldi	r27, 0x04	; 4
 774:	3c d0       	rcall	.+120    	; 0x7ee <__ultoa_invert+0x9c>
 776:	67 0f       	add	r22, r23
 778:	78 1f       	adc	r23, r24
 77a:	89 1f       	adc	r24, r25
 77c:	9a 1f       	adc	r25, r26
 77e:	a1 1d       	adc	r26, r1
 780:	68 0f       	add	r22, r24
 782:	79 1f       	adc	r23, r25
 784:	8a 1f       	adc	r24, r26
 786:	91 1d       	adc	r25, r1
 788:	a1 1d       	adc	r26, r1
 78a:	6a 0f       	add	r22, r26
 78c:	71 1d       	adc	r23, r1
 78e:	81 1d       	adc	r24, r1
 790:	91 1d       	adc	r25, r1
 792:	a1 1d       	adc	r26, r1
 794:	20 d0       	rcall	.+64     	; 0x7d6 <__ultoa_invert+0x84>
 796:	09 f4       	brne	.+2      	; 0x79a <__ultoa_invert+0x48>
 798:	68 94       	set
 79a:	3f 91       	pop	r19
 79c:	2a e0       	ldi	r18, 0x0A	; 10
 79e:	26 9f       	mul	r18, r22
 7a0:	11 24       	eor	r1, r1
 7a2:	30 19       	sub	r19, r0
 7a4:	30 5d       	subi	r19, 0xD0	; 208
 7a6:	31 93       	st	Z+, r19
 7a8:	de f6       	brtc	.-74     	; 0x760 <__ultoa_invert+0xe>
 7aa:	cf 01       	movw	r24, r30
 7ac:	08 95       	ret
 7ae:	46 2f       	mov	r20, r22
 7b0:	47 70       	andi	r20, 0x07	; 7
 7b2:	40 5d       	subi	r20, 0xD0	; 208
 7b4:	41 93       	st	Z+, r20
 7b6:	b3 e0       	ldi	r27, 0x03	; 3
 7b8:	0f d0       	rcall	.+30     	; 0x7d8 <__ultoa_invert+0x86>
 7ba:	c9 f7       	brne	.-14     	; 0x7ae <__ultoa_invert+0x5c>
 7bc:	f6 cf       	rjmp	.-20     	; 0x7aa <__ultoa_invert+0x58>
 7be:	46 2f       	mov	r20, r22
 7c0:	4f 70       	andi	r20, 0x0F	; 15
 7c2:	40 5d       	subi	r20, 0xD0	; 208
 7c4:	4a 33       	cpi	r20, 0x3A	; 58
 7c6:	18 f0       	brcs	.+6      	; 0x7ce <__ultoa_invert+0x7c>
 7c8:	49 5d       	subi	r20, 0xD9	; 217
 7ca:	31 fd       	sbrc	r19, 1
 7cc:	40 52       	subi	r20, 0x20	; 32
 7ce:	41 93       	st	Z+, r20
 7d0:	02 d0       	rcall	.+4      	; 0x7d6 <__ultoa_invert+0x84>
 7d2:	a9 f7       	brne	.-22     	; 0x7be <__ultoa_invert+0x6c>
 7d4:	ea cf       	rjmp	.-44     	; 0x7aa <__ultoa_invert+0x58>
 7d6:	b4 e0       	ldi	r27, 0x04	; 4
 7d8:	a6 95       	lsr	r26
 7da:	97 95       	ror	r25
 7dc:	87 95       	ror	r24
 7de:	77 95       	ror	r23
 7e0:	67 95       	ror	r22
 7e2:	ba 95       	dec	r27
 7e4:	c9 f7       	brne	.-14     	; 0x7d8 <__ultoa_invert+0x86>
 7e6:	00 97       	sbiw	r24, 0x00	; 0
 7e8:	61 05       	cpc	r22, r1
 7ea:	71 05       	cpc	r23, r1
 7ec:	08 95       	ret
 7ee:	9b 01       	movw	r18, r22
 7f0:	ac 01       	movw	r20, r24
 7f2:	0a 2e       	mov	r0, r26
 7f4:	06 94       	lsr	r0
 7f6:	57 95       	ror	r21
 7f8:	47 95       	ror	r20
 7fa:	37 95       	ror	r19
 7fc:	27 95       	ror	r18
 7fe:	ba 95       	dec	r27
 800:	c9 f7       	brne	.-14     	; 0x7f4 <__ultoa_invert+0xa2>
 802:	62 0f       	add	r22, r18
 804:	73 1f       	adc	r23, r19
 806:	84 1f       	adc	r24, r20
 808:	95 1f       	adc	r25, r21
 80a:	a0 1d       	adc	r26, r0
 80c:	08 95       	ret

0000080e <__prologue_saves__>:
 80e:	2f 92       	push	r2
 810:	3f 92       	push	r3
 812:	4f 92       	push	r4
 814:	5f 92       	push	r5
 816:	6f 92       	push	r6
 818:	7f 92       	push	r7
 81a:	8f 92       	push	r8
 81c:	9f 92       	push	r9
 81e:	af 92       	push	r10
 820:	bf 92       	push	r11
 822:	cf 92       	push	r12
 824:	df 92       	push	r13
 826:	ef 92       	push	r14
 828:	ff 92       	push	r15
 82a:	0f 93       	push	r16
 82c:	1f 93       	push	r17
 82e:	cf 93       	push	r28
 830:	df 93       	push	r29
 832:	cd b7       	in	r28, 0x3d	; 61
 834:	de b7       	in	r29, 0x3e	; 62
 836:	ca 1b       	sub	r28, r26
 838:	db 0b       	sbc	r29, r27
 83a:	0f b6       	in	r0, 0x3f	; 63
 83c:	f8 94       	cli
 83e:	de bf       	out	0x3e, r29	; 62
 840:	0f be       	out	0x3f, r0	; 63
 842:	cd bf       	out	0x3d, r28	; 61
 844:	09 94       	ijmp

00000846 <__epilogue_restores__>:
 846:	2a 88       	ldd	r2, Y+18	; 0x12
 848:	39 88       	ldd	r3, Y+17	; 0x11
 84a:	48 88       	ldd	r4, Y+16	; 0x10
 84c:	5f 84       	ldd	r5, Y+15	; 0x0f
 84e:	6e 84       	ldd	r6, Y+14	; 0x0e
 850:	7d 84       	ldd	r7, Y+13	; 0x0d
 852:	8c 84       	ldd	r8, Y+12	; 0x0c
 854:	9b 84       	ldd	r9, Y+11	; 0x0b
 856:	aa 84       	ldd	r10, Y+10	; 0x0a
 858:	b9 84       	ldd	r11, Y+9	; 0x09
 85a:	c8 84       	ldd	r12, Y+8	; 0x08
 85c:	df 80       	ldd	r13, Y+7	; 0x07
 85e:	ee 80       	ldd	r14, Y+6	; 0x06
 860:	fd 80       	ldd	r15, Y+5	; 0x05
 862:	0c 81       	ldd	r16, Y+4	; 0x04
 864:	1b 81       	ldd	r17, Y+3	; 0x03
 866:	aa 81       	ldd	r26, Y+2	; 0x02
 868:	b9 81       	ldd	r27, Y+1	; 0x01
 86a:	ce 0f       	add	r28, r30
 86c:	d1 1d       	adc	r29, r1
 86e:	0f b6       	in	r0, 0x3f	; 63
 870:	f8 94       	cli
 872:	de bf       	out	0x3e, r29	; 62
 874:	0f be       	out	0x3f, r0	; 63
 876:	cd bf       	out	0x3d, r28	; 61
 878:	ed 01       	movw	r28, r26
 87a:	08 95       	ret

0000087c <_exit>:
 87c:	f8 94       	cli

0000087e <__stop_program>:
 87e:	ff cf       	rjmp	.-2      	; 0x87e <__stop_program>
