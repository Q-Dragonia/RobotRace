
RobotRace.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000008a6  0000091a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000092c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000988  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c44  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007ff  00000000  00000000  00001684  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000054d  00000000  00000000  00001e83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  000023d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000051d  00000000  00000000  000024c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002d0  00000000  00000000  000029e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002cb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 ea       	ldi	r30, 0xA6	; 166
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 31       	cpi	r26, 0x12	; 18
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b2 00 	call	0x164	; 0x164 <main>
  9e:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ADC>:
char receiveMessage(){
	// Wait for data to be received
	while (!(UCSR0A & (1<<RXC0)));
	// Get and return received data from buffer
	return UDR0;
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 60       	ori	r24, 0x07	; 7
  b8:	80 83       	st	Z, r24
  ba:	80 81       	ld	r24, Z
  bc:	80 68       	ori	r24, 0x80	; 128
  be:	80 83       	st	Z, r24
  c0:	08 95       	ret

000000c2 <readADC>:
  c2:	ec e7       	ldi	r30, 0x7C	; 124
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	90 81       	ld	r25, Z
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	89 2b       	or	r24, r25
  ce:	80 83       	st	Z, r24
  d0:	ea e7       	ldi	r30, 0x7A	; 122
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	80 64       	ori	r24, 0x40	; 64
  d8:	80 83       	st	Z, r24
  da:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  de:	86 fd       	sbrc	r24, 6
  e0:	fc cf       	rjmp	.-8      	; 0xda <readADC+0x18>
  e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  e6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  ea:	08 95       	ret

000000ec <init_USART>:
  ec:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  f4:	88 e1       	ldi	r24, 0x18	; 24
  f6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  fa:	86 e0       	ldi	r24, 0x06	; 6
  fc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 100:	08 95       	ret

00000102 <transferMessage>:
 102:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 106:	95 ff       	sbrs	r25, 5
 108:	fc cf       	rjmp	.-8      	; 0x102 <transferMessage>
 10a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 10e:	08 95       	ret

00000110 <init_driving_PWM>:

#include "definitions.h"

void init_driving_PWM() {
	// Set OC0A (PD6) and OC0B (PD5) as output pins, motor speed pins
	DDRD |= (1 << DDD6) | (1 << DDD5);
 110:	8a b1       	in	r24, 0x0a	; 10
 112:	80 66       	ori	r24, 0x60	; 96
 114:	8a b9       	out	0x0a, r24	; 10
	// Configure Timer0 for Fast PWM mode, non-inverted output (WGM02:0 = 3)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM01) | (1 << WGM00);
 116:	84 b5       	in	r24, 0x24	; 36
 118:	83 6a       	ori	r24, 0xA3	; 163
 11a:	84 bd       	out	0x24, r24	; 36
	//TCCR0B |= (1 << WGM02);

	// Set prescaler to 64
	TCCR0B |= (1 << CS01) | (1 << CS00);
 11c:	85 b5       	in	r24, 0x25	; 37
 11e:	83 60       	ori	r24, 0x03	; 3
 120:	85 bd       	out	0x25, r24	; 37
 122:	08 95       	ret

00000124 <setMotorASpeed>:
}

// Function to set speed of motor A
void setMotorASpeed(uint8_t speed) {
	if (speed == 0) {
 124:	81 11       	cpse	r24, r1
 126:	02 c0       	rjmp	.+4      	; 0x12c <setMotorASpeed+0x8>
		OCR0B = 0; // Turn off PWM output
 128:	18 bc       	out	0x28, r1	; 40
 12a:	08 95       	ret
		} else {
		OCR0B = speed; // Set PWM duty cycle
 12c:	88 bd       	out	0x28, r24	; 40
 12e:	08 95       	ret

00000130 <setMotorBSpeed>:
	}
}

// Function to set speed of motor B
void setMotorBSpeed(uint8_t speed) {
	if (speed == 0) {
 130:	81 11       	cpse	r24, r1
 132:	02 c0       	rjmp	.+4      	; 0x138 <setMotorBSpeed+0x8>
		OCR0A = 0; // Turn off PWM output
 134:	17 bc       	out	0x27, r1	; 39
 136:	08 95       	ret
		} else {
		OCR0A = speed; // Set PWM duty cycle
 138:	87 bd       	out	0x27, r24	; 39
 13a:	08 95       	ret

0000013c <setMotorADirection>:
	}
}

// Function to control direction of motor A
void setMotorADirection(uint8_t direction) {
	if (direction == 1) { // Forward
 13c:	81 30       	cpi	r24, 0x01	; 1
 13e:	21 f4       	brne	.+8      	; 0x148 <setMotorADirection+0xc>
		PORTB |= (1 << A_DIRECTION_PIN); // Set A_DIRECTION_PIN
 140:	85 b1       	in	r24, 0x05	; 5
 142:	84 60       	ori	r24, 0x04	; 4
 144:	85 b9       	out	0x05, r24	; 5
 146:	08 95       	ret
		} else { // Reverse
		PORTB &= ~(1 << A_DIRECTION_PIN); // Clear A_DIRECTION_PIN
 148:	85 b1       	in	r24, 0x05	; 5
 14a:	8b 7f       	andi	r24, 0xFB	; 251
 14c:	85 b9       	out	0x05, r24	; 5
 14e:	08 95       	ret

00000150 <setMotorBDirection>:
	}
}

// Function to control direction of motor B
void setMotorBDirection(uint8_t direction) {
	if (direction == 1) { // Forward
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	21 f4       	brne	.+8      	; 0x15c <setMotorBDirection+0xc>
		PORTB |= (1 << B_DIRECTION_PIN); // Set B_DIRECTION_PIN
 154:	85 b1       	in	r24, 0x05	; 5
 156:	88 60       	ori	r24, 0x08	; 8
 158:	85 b9       	out	0x05, r24	; 5
 15a:	08 95       	ret
		} else { // Reverse
		PORTB &= ~(1 << B_DIRECTION_PIN); // Clear B_DIRECTION_PIN
 15c:	85 b1       	in	r24, 0x05	; 5
 15e:	87 7f       	andi	r24, 0xF7	; 247
 160:	85 b9       	out	0x05, r24	; 5
 162:	08 95       	ret

00000164 <main>:
#include "usart.h"
#include "movement.h"
//#include "servo.h"

int main(void)
{
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62
 16c:	c0 55       	subi	r28, 0x50	; 80
 16e:	d1 09       	sbc	r29, r1
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	f8 94       	cli
 174:	de bf       	out	0x3e, r29	; 62
 176:	0f be       	out	0x3f, r0	; 63
 178:	cd bf       	out	0x3d, r28	; 61
    
	init_ADC();
 17a:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ADC>
	init_USART(MYUBRR);
 17e:	87 e6       	ldi	r24, 0x67	; 103
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	0e 94 76 00 	call	0xec	; 0xec <init_USART>
 	init_driving_PWM();
 186:	0e 94 88 00 	call	0x110	; 0x110 <init_driving_PWM>
 	//init_servo_PWM();
	
	DDRB |= (1 << 2);
 18a:	84 b1       	in	r24, 0x04	; 4
 18c:	84 60       	ori	r24, 0x04	; 4
 18e:	84 b9       	out	0x04, r24	; 4
	
	
	int white_limit = (int)(WHITE + 30);
	int black_limit = (int)(BLACK - 30);
	//servo_set_angle(0,180);
	PORTB |= (1 << 2);
 190:	85 b1       	in	r24, 0x05	; 5
 192:	84 60       	ori	r24, 0x04	; 4
 194:	85 b9       	out	0x05, r24	; 5
	//int16_t i = 0;
	DDRB |= (1 << A_DIRECTION_PIN) | (1 << B_DIRECTION_PIN); //set direction pins as output
 196:	84 b1       	in	r24, 0x04	; 4
 198:	8c 60       	ori	r24, 0x0C	; 12
 19a:	84 b9       	out	0x04, r24	; 4
	
	sei();
 19c:	78 94       	sei
// 		for (i=180;i>=0;i--){
// 			servo_set_angle(i,180);
// 			_delay_ms(40);
// 		}
		
		PORTB |= (1 << 2);
 19e:	85 b1       	in	r24, 0x05	; 5
 1a0:	84 60       	ori	r24, 0x04	; 4
 1a2:	85 b9       	out	0x05, r24	; 5
		
		int sensorLeft = readADC(SENSOR_LEFT_CHANNEL);
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 1aa:	8c 01       	movw	r16, r24
		int lineTrackingSensorLeft = readADC(LINE_TRACKING_SENSOR_LEFT_CHANNEL) + 140;
 1ac:	85 e0       	ldi	r24, 0x05	; 5
 1ae:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 1b2:	84 57       	subi	r24, 0x74	; 116
 1b4:	9f 4f       	sbci	r25, 0xFF	; 255
 1b6:	7c 01       	movw	r14, r24
 1b8:	3c 01       	movw	r6, r24
		int lineTrackingSensorMiddle = readADC(LINE_TRACKING_SENSOR_MIDDLE_CHANNEL) + 110;
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 1c0:	82 59       	subi	r24, 0x92	; 146
 1c2:	9f 4f       	sbci	r25, 0xFF	; 255
 1c4:	4c 01       	movw	r8, r24
		int lineTrackingSensorRight = readADC(LINE_TRACKING_SENSOR_RIGHT_CHANNEL);
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 1cc:	6c 01       	movw	r12, r24
		int sensorRight = readADC(SENSOR_RIGHT_CHANNEL);
 1ce:	83 e0       	ldi	r24, 0x03	; 3
 1d0:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 1d4:	5c 01       	movw	r10, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d6:	87 ea       	ldi	r24, 0xA7	; 167
 1d8:	91 e6       	ldi	r25, 0x61	; 97
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <main+0x76>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x7c>
 1e0:	00 00       	nop
		
		_delay_ms(100);
		
		// Convert distance to string
		char buffer[80];
		snprintf(buffer, sizeof(buffer), "%d %d %d %d %d \n", sensorLeft, lineTrackingSensorLeft, lineTrackingSensorMiddle, lineTrackingSensorRight, sensorRight);
 1e2:	bf 92       	push	r11
 1e4:	af 92       	push	r10
 1e6:	df 92       	push	r13
 1e8:	cf 92       	push	r12
 1ea:	9f 92       	push	r9
 1ec:	8f 92       	push	r8
 1ee:	ff 92       	push	r15
 1f0:	ef 92       	push	r14
 1f2:	1f 93       	push	r17
 1f4:	0f 93       	push	r16
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	9f 93       	push	r25
 1fc:	8f 93       	push	r24
 1fe:	1f 92       	push	r1
 200:	80 e5       	ldi	r24, 0x50	; 80
 202:	8f 93       	push	r24
 204:	ce 01       	movw	r24, r28
 206:	01 96       	adiw	r24, 0x01	; 1
 208:	9f 93       	push	r25
 20a:	8f 93       	push	r24
 20c:	0e 94 59 01 	call	0x2b2	; 0x2b2 <snprintf>
		
		// Transmit distance over UART
		for (int i = 0; buffer[i] != '\0'; i++) {
 210:	0f b6       	in	r0, 0x3f	; 63
 212:	f8 94       	cli
 214:	de bf       	out	0x3e, r29	; 62
 216:	0f be       	out	0x3f, r0	; 63
 218:	cd bf       	out	0x3d, r28	; 61
 21a:	e1 2c       	mov	r14, r1
 21c:	f1 2c       	mov	r15, r1
 21e:	05 c0       	rjmp	.+10     	; 0x22a <main+0xc6>
			transferMessage(buffer[i]);
 220:	0e 94 81 00 	call	0x102	; 0x102 <transferMessage>
		// Convert distance to string
		char buffer[80];
		snprintf(buffer, sizeof(buffer), "%d %d %d %d %d \n", sensorLeft, lineTrackingSensorLeft, lineTrackingSensorMiddle, lineTrackingSensorRight, sensorRight);
		
		// Transmit distance over UART
		for (int i = 0; buffer[i] != '\0'; i++) {
 224:	9f ef       	ldi	r25, 0xFF	; 255
 226:	e9 1a       	sub	r14, r25
 228:	f9 0a       	sbc	r15, r25
 22a:	e1 e0       	ldi	r30, 0x01	; 1
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	ec 0f       	add	r30, r28
 230:	fd 1f       	adc	r31, r29
 232:	ee 0d       	add	r30, r14
 234:	ff 1d       	adc	r31, r15
 236:	80 81       	ld	r24, Z
 238:	81 11       	cpse	r24, r1
 23a:	f2 cf       	rjmp	.-28     	; 0x220 <main+0xbc>
 23c:	83 ec       	ldi	r24, 0xC3	; 195
 23e:	99 e0       	ldi	r25, 0x09	; 9
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <main+0xdc>
 244:	00 c0       	rjmp	.+0      	; 0x246 <main+0xe2>
 246:	00 00       	nop
		
		char receivedMessage = 'A';
		
		_delay_ms(10);
		if(receivedMessage == 'A'){
			PORTB |= (1 << 2);
 248:	85 b1       	in	r24, 0x05	; 5
 24a:	84 60       	ori	r24, 0x04	; 4
 24c:	85 b9       	out	0x05, r24	; 5
 24e:	83 ec       	ldi	r24, 0xC3	; 195
 250:	99 e0       	ldi	r25, 0x09	; 9
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	f1 f7       	brne	.-4      	; 0x252 <main+0xee>
 256:	00 c0       	rjmp	.+0      	; 0x258 <main+0xf4>
 258:	00 00       	nop
			transferMessage('O');
			transferMessage('R');
		}

		_delay_ms(10);
		if(sensorLeft > WHITE && lineTrackingSensorLeft > WHITE && lineTrackingSensorRight < BLACK && sensorRight < BLACK){
 25a:	0d 3c       	cpi	r16, 0xCD	; 205
 25c:	11 40       	sbci	r17, 0x01	; 1
 25e:	e4 f0       	brlt	.+56     	; 0x298 <main+0x134>
 260:	8d ec       	ldi	r24, 0xCD	; 205
 262:	68 16       	cp	r6, r24
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	78 06       	cpc	r7, r24
 268:	bc f0       	brlt	.+46     	; 0x298 <main+0x134>
 26a:	98 e5       	ldi	r25, 0x58	; 88
 26c:	c9 16       	cp	r12, r25
 26e:	92 e0       	ldi	r25, 0x02	; 2
 270:	d9 06       	cpc	r13, r25
 272:	94 f4       	brge	.+36     	; 0x298 <main+0x134>
 274:	88 e5       	ldi	r24, 0x58	; 88
 276:	a8 16       	cp	r10, r24
 278:	82 e0       	ldi	r24, 0x02	; 2
 27a:	b8 06       	cpc	r11, r24
 27c:	6c f4       	brge	.+26     	; 0x298 <main+0x134>
			setMotorADirection(1);
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	0e 94 9e 00 	call	0x13c	; 0x13c <setMotorADirection>
			setMotorASpeed(90);
 284:	8a e5       	ldi	r24, 0x5A	; 90
 286:	0e 94 92 00 	call	0x124	; 0x124 <setMotorASpeed>
			setMotorBDirection(1);
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	0e 94 a8 00 	call	0x150	; 0x150 <setMotorBDirection>
			setMotorBSpeed(90);
 290:	8a e5       	ldi	r24, 0x5A	; 90
 292:	0e 94 98 00 	call	0x130	; 0x130 <setMotorBSpeed>
 296:	06 c0       	rjmp	.+12     	; 0x2a4 <main+0x140>
		}else{
			setMotorASpeed(0);
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	0e 94 92 00 	call	0x124	; 0x124 <setMotorASpeed>
			setMotorBSpeed(0);
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	0e 94 98 00 	call	0x130	; 0x130 <setMotorBSpeed>
 2a4:	87 ea       	ldi	r24, 0xA7	; 167
 2a6:	91 e6       	ldi	r25, 0x61	; 97
 2a8:	01 97       	sbiw	r24, 0x01	; 1
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <main+0x144>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <main+0x14a>
 2ae:	00 00       	nop
// 		setMotorBSpeed(90);
// 		_delay_ms(2000);
// 		setMotorASpeed(0);
// 		setMotorBSpeed(0);
// 		_delay_ms(2000);
    }
 2b0:	76 cf       	rjmp	.-276    	; 0x19e <main+0x3a>

000002b2 <snprintf>:
 2b2:	ae e0       	ldi	r26, 0x0E	; 14
 2b4:	b0 e0       	ldi	r27, 0x00	; 0
 2b6:	ef e5       	ldi	r30, 0x5F	; 95
 2b8:	f1 e0       	ldi	r31, 0x01	; 1
 2ba:	0c 94 28 04 	jmp	0x850	; 0x850 <__prologue_saves__+0x1c>
 2be:	0d 89       	ldd	r16, Y+21	; 0x15
 2c0:	1e 89       	ldd	r17, Y+22	; 0x16
 2c2:	8f 89       	ldd	r24, Y+23	; 0x17
 2c4:	98 8d       	ldd	r25, Y+24	; 0x18
 2c6:	26 e0       	ldi	r18, 0x06	; 6
 2c8:	2c 83       	std	Y+4, r18	; 0x04
 2ca:	1a 83       	std	Y+2, r17	; 0x02
 2cc:	09 83       	std	Y+1, r16	; 0x01
 2ce:	97 ff       	sbrs	r25, 7
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <snprintf+0x24>
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	90 e8       	ldi	r25, 0x80	; 128
 2d6:	01 97       	sbiw	r24, 0x01	; 1
 2d8:	9e 83       	std	Y+6, r25	; 0x06
 2da:	8d 83       	std	Y+5, r24	; 0x05
 2dc:	ae 01       	movw	r20, r28
 2de:	45 5e       	subi	r20, 0xE5	; 229
 2e0:	5f 4f       	sbci	r21, 0xFF	; 255
 2e2:	69 8d       	ldd	r22, Y+25	; 0x19
 2e4:	7a 8d       	ldd	r23, Y+26	; 0x1a
 2e6:	ce 01       	movw	r24, r28
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	0e 94 89 01 	call	0x312	; 0x312 <vfprintf>
 2ee:	4d 81       	ldd	r20, Y+5	; 0x05
 2f0:	5e 81       	ldd	r21, Y+6	; 0x06
 2f2:	57 fd       	sbrc	r21, 7
 2f4:	0a c0       	rjmp	.+20     	; 0x30a <snprintf+0x58>
 2f6:	2f 81       	ldd	r18, Y+7	; 0x07
 2f8:	38 85       	ldd	r19, Y+8	; 0x08
 2fa:	42 17       	cp	r20, r18
 2fc:	53 07       	cpc	r21, r19
 2fe:	0c f4       	brge	.+2      	; 0x302 <snprintf+0x50>
 300:	9a 01       	movw	r18, r20
 302:	f8 01       	movw	r30, r16
 304:	e2 0f       	add	r30, r18
 306:	f3 1f       	adc	r31, r19
 308:	10 82       	st	Z, r1
 30a:	2e 96       	adiw	r28, 0x0e	; 14
 30c:	e4 e0       	ldi	r30, 0x04	; 4
 30e:	0c 94 44 04 	jmp	0x888	; 0x888 <__epilogue_restores__+0x1c>

00000312 <vfprintf>:
 312:	ab e0       	ldi	r26, 0x0B	; 11
 314:	b0 e0       	ldi	r27, 0x00	; 0
 316:	ef e8       	ldi	r30, 0x8F	; 143
 318:	f1 e0       	ldi	r31, 0x01	; 1
 31a:	0c 94 1a 04 	jmp	0x834	; 0x834 <__prologue_saves__>
 31e:	6c 01       	movw	r12, r24
 320:	7b 01       	movw	r14, r22
 322:	8a 01       	movw	r16, r20
 324:	fc 01       	movw	r30, r24
 326:	17 82       	std	Z+7, r1	; 0x07
 328:	16 82       	std	Z+6, r1	; 0x06
 32a:	83 81       	ldd	r24, Z+3	; 0x03
 32c:	81 ff       	sbrs	r24, 1
 32e:	cc c1       	rjmp	.+920    	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
 330:	ce 01       	movw	r24, r28
 332:	01 96       	adiw	r24, 0x01	; 1
 334:	3c 01       	movw	r6, r24
 336:	f6 01       	movw	r30, r12
 338:	93 81       	ldd	r25, Z+3	; 0x03
 33a:	f7 01       	movw	r30, r14
 33c:	93 fd       	sbrc	r25, 3
 33e:	85 91       	lpm	r24, Z+
 340:	93 ff       	sbrs	r25, 3
 342:	81 91       	ld	r24, Z+
 344:	7f 01       	movw	r14, r30
 346:	88 23       	and	r24, r24
 348:	09 f4       	brne	.+2      	; 0x34c <vfprintf+0x3a>
 34a:	ba c1       	rjmp	.+884    	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 34c:	85 32       	cpi	r24, 0x25	; 37
 34e:	39 f4       	brne	.+14     	; 0x35e <vfprintf+0x4c>
 350:	93 fd       	sbrc	r25, 3
 352:	85 91       	lpm	r24, Z+
 354:	93 ff       	sbrs	r25, 3
 356:	81 91       	ld	r24, Z+
 358:	7f 01       	movw	r14, r30
 35a:	85 32       	cpi	r24, 0x25	; 37
 35c:	29 f4       	brne	.+10     	; 0x368 <vfprintf+0x56>
 35e:	b6 01       	movw	r22, r12
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 366:	e7 cf       	rjmp	.-50     	; 0x336 <vfprintf+0x24>
 368:	91 2c       	mov	r9, r1
 36a:	21 2c       	mov	r2, r1
 36c:	31 2c       	mov	r3, r1
 36e:	ff e1       	ldi	r31, 0x1F	; 31
 370:	f3 15       	cp	r31, r3
 372:	d8 f0       	brcs	.+54     	; 0x3aa <vfprintf+0x98>
 374:	8b 32       	cpi	r24, 0x2B	; 43
 376:	79 f0       	breq	.+30     	; 0x396 <vfprintf+0x84>
 378:	38 f4       	brcc	.+14     	; 0x388 <vfprintf+0x76>
 37a:	80 32       	cpi	r24, 0x20	; 32
 37c:	79 f0       	breq	.+30     	; 0x39c <vfprintf+0x8a>
 37e:	83 32       	cpi	r24, 0x23	; 35
 380:	a1 f4       	brne	.+40     	; 0x3aa <vfprintf+0x98>
 382:	23 2d       	mov	r18, r3
 384:	20 61       	ori	r18, 0x10	; 16
 386:	1d c0       	rjmp	.+58     	; 0x3c2 <vfprintf+0xb0>
 388:	8d 32       	cpi	r24, 0x2D	; 45
 38a:	61 f0       	breq	.+24     	; 0x3a4 <vfprintf+0x92>
 38c:	80 33       	cpi	r24, 0x30	; 48
 38e:	69 f4       	brne	.+26     	; 0x3aa <vfprintf+0x98>
 390:	23 2d       	mov	r18, r3
 392:	21 60       	ori	r18, 0x01	; 1
 394:	16 c0       	rjmp	.+44     	; 0x3c2 <vfprintf+0xb0>
 396:	83 2d       	mov	r24, r3
 398:	82 60       	ori	r24, 0x02	; 2
 39a:	38 2e       	mov	r3, r24
 39c:	e3 2d       	mov	r30, r3
 39e:	e4 60       	ori	r30, 0x04	; 4
 3a0:	3e 2e       	mov	r3, r30
 3a2:	2a c0       	rjmp	.+84     	; 0x3f8 <vfprintf+0xe6>
 3a4:	f3 2d       	mov	r31, r3
 3a6:	f8 60       	ori	r31, 0x08	; 8
 3a8:	1d c0       	rjmp	.+58     	; 0x3e4 <vfprintf+0xd2>
 3aa:	37 fc       	sbrc	r3, 7
 3ac:	2d c0       	rjmp	.+90     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3ae:	20 ed       	ldi	r18, 0xD0	; 208
 3b0:	28 0f       	add	r18, r24
 3b2:	2a 30       	cpi	r18, 0x0A	; 10
 3b4:	40 f0       	brcs	.+16     	; 0x3c6 <vfprintf+0xb4>
 3b6:	8e 32       	cpi	r24, 0x2E	; 46
 3b8:	b9 f4       	brne	.+46     	; 0x3e8 <vfprintf+0xd6>
 3ba:	36 fc       	sbrc	r3, 6
 3bc:	81 c1       	rjmp	.+770    	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 3be:	23 2d       	mov	r18, r3
 3c0:	20 64       	ori	r18, 0x40	; 64
 3c2:	32 2e       	mov	r3, r18
 3c4:	19 c0       	rjmp	.+50     	; 0x3f8 <vfprintf+0xe6>
 3c6:	36 fe       	sbrs	r3, 6
 3c8:	06 c0       	rjmp	.+12     	; 0x3d6 <vfprintf+0xc4>
 3ca:	8a e0       	ldi	r24, 0x0A	; 10
 3cc:	98 9e       	mul	r9, r24
 3ce:	20 0d       	add	r18, r0
 3d0:	11 24       	eor	r1, r1
 3d2:	92 2e       	mov	r9, r18
 3d4:	11 c0       	rjmp	.+34     	; 0x3f8 <vfprintf+0xe6>
 3d6:	ea e0       	ldi	r30, 0x0A	; 10
 3d8:	2e 9e       	mul	r2, r30
 3da:	20 0d       	add	r18, r0
 3dc:	11 24       	eor	r1, r1
 3de:	22 2e       	mov	r2, r18
 3e0:	f3 2d       	mov	r31, r3
 3e2:	f0 62       	ori	r31, 0x20	; 32
 3e4:	3f 2e       	mov	r3, r31
 3e6:	08 c0       	rjmp	.+16     	; 0x3f8 <vfprintf+0xe6>
 3e8:	8c 36       	cpi	r24, 0x6C	; 108
 3ea:	21 f4       	brne	.+8      	; 0x3f4 <vfprintf+0xe2>
 3ec:	83 2d       	mov	r24, r3
 3ee:	80 68       	ori	r24, 0x80	; 128
 3f0:	38 2e       	mov	r3, r24
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <vfprintf+0xe6>
 3f4:	88 36       	cpi	r24, 0x68	; 104
 3f6:	41 f4       	brne	.+16     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3f8:	f7 01       	movw	r30, r14
 3fa:	93 fd       	sbrc	r25, 3
 3fc:	85 91       	lpm	r24, Z+
 3fe:	93 ff       	sbrs	r25, 3
 400:	81 91       	ld	r24, Z+
 402:	7f 01       	movw	r14, r30
 404:	81 11       	cpse	r24, r1
 406:	b3 cf       	rjmp	.-154    	; 0x36e <vfprintf+0x5c>
 408:	98 2f       	mov	r25, r24
 40a:	9f 7d       	andi	r25, 0xDF	; 223
 40c:	95 54       	subi	r25, 0x45	; 69
 40e:	93 30       	cpi	r25, 0x03	; 3
 410:	28 f4       	brcc	.+10     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 412:	0c 5f       	subi	r16, 0xFC	; 252
 414:	1f 4f       	sbci	r17, 0xFF	; 255
 416:	9f e3       	ldi	r25, 0x3F	; 63
 418:	99 83       	std	Y+1, r25	; 0x01
 41a:	0d c0       	rjmp	.+26     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 41c:	83 36       	cpi	r24, 0x63	; 99
 41e:	31 f0       	breq	.+12     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 420:	83 37       	cpi	r24, 0x73	; 115
 422:	71 f0       	breq	.+28     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 424:	83 35       	cpi	r24, 0x53	; 83
 426:	09 f0       	breq	.+2      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 428:	59 c0       	rjmp	.+178    	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
 42a:	21 c0       	rjmp	.+66     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 42c:	f8 01       	movw	r30, r16
 42e:	80 81       	ld	r24, Z
 430:	89 83       	std	Y+1, r24	; 0x01
 432:	0e 5f       	subi	r16, 0xFE	; 254
 434:	1f 4f       	sbci	r17, 0xFF	; 255
 436:	88 24       	eor	r8, r8
 438:	83 94       	inc	r8
 43a:	91 2c       	mov	r9, r1
 43c:	53 01       	movw	r10, r6
 43e:	13 c0       	rjmp	.+38     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 440:	28 01       	movw	r4, r16
 442:	f2 e0       	ldi	r31, 0x02	; 2
 444:	4f 0e       	add	r4, r31
 446:	51 1c       	adc	r5, r1
 448:	f8 01       	movw	r30, r16
 44a:	a0 80       	ld	r10, Z
 44c:	b1 80       	ldd	r11, Z+1	; 0x01
 44e:	36 fe       	sbrs	r3, 6
 450:	03 c0       	rjmp	.+6      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 452:	69 2d       	mov	r22, r9
 454:	70 e0       	ldi	r23, 0x00	; 0
 456:	02 c0       	rjmp	.+4      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 458:	6f ef       	ldi	r22, 0xFF	; 255
 45a:	7f ef       	ldi	r23, 0xFF	; 255
 45c:	c5 01       	movw	r24, r10
 45e:	0e 94 75 03 	call	0x6ea	; 0x6ea <strnlen>
 462:	4c 01       	movw	r8, r24
 464:	82 01       	movw	r16, r4
 466:	f3 2d       	mov	r31, r3
 468:	ff 77       	andi	r31, 0x7F	; 127
 46a:	3f 2e       	mov	r3, r31
 46c:	16 c0       	rjmp	.+44     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 46e:	28 01       	movw	r4, r16
 470:	22 e0       	ldi	r18, 0x02	; 2
 472:	42 0e       	add	r4, r18
 474:	51 1c       	adc	r5, r1
 476:	f8 01       	movw	r30, r16
 478:	a0 80       	ld	r10, Z
 47a:	b1 80       	ldd	r11, Z+1	; 0x01
 47c:	36 fe       	sbrs	r3, 6
 47e:	03 c0       	rjmp	.+6      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 480:	69 2d       	mov	r22, r9
 482:	70 e0       	ldi	r23, 0x00	; 0
 484:	02 c0       	rjmp	.+4      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 486:	6f ef       	ldi	r22, 0xFF	; 255
 488:	7f ef       	ldi	r23, 0xFF	; 255
 48a:	c5 01       	movw	r24, r10
 48c:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <strnlen_P>
 490:	4c 01       	movw	r8, r24
 492:	f3 2d       	mov	r31, r3
 494:	f0 68       	ori	r31, 0x80	; 128
 496:	3f 2e       	mov	r3, r31
 498:	82 01       	movw	r16, r4
 49a:	33 fc       	sbrc	r3, 3
 49c:	1b c0       	rjmp	.+54     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 49e:	82 2d       	mov	r24, r2
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	88 16       	cp	r8, r24
 4a4:	99 06       	cpc	r9, r25
 4a6:	b0 f4       	brcc	.+44     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4a8:	b6 01       	movw	r22, r12
 4aa:	80 e2       	ldi	r24, 0x20	; 32
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 4b2:	2a 94       	dec	r2
 4b4:	f4 cf       	rjmp	.-24     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 4b6:	f5 01       	movw	r30, r10
 4b8:	37 fc       	sbrc	r3, 7
 4ba:	85 91       	lpm	r24, Z+
 4bc:	37 fe       	sbrs	r3, 7
 4be:	81 91       	ld	r24, Z+
 4c0:	5f 01       	movw	r10, r30
 4c2:	b6 01       	movw	r22, r12
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 4ca:	21 10       	cpse	r2, r1
 4cc:	2a 94       	dec	r2
 4ce:	21 e0       	ldi	r18, 0x01	; 1
 4d0:	82 1a       	sub	r8, r18
 4d2:	91 08       	sbc	r9, r1
 4d4:	81 14       	cp	r8, r1
 4d6:	91 04       	cpc	r9, r1
 4d8:	71 f7       	brne	.-36     	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4da:	e8 c0       	rjmp	.+464    	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 4dc:	84 36       	cpi	r24, 0x64	; 100
 4de:	11 f0       	breq	.+4      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4e0:	89 36       	cpi	r24, 0x69	; 105
 4e2:	41 f5       	brne	.+80     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 4e4:	f8 01       	movw	r30, r16
 4e6:	37 fe       	sbrs	r3, 7
 4e8:	07 c0       	rjmp	.+14     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4ea:	60 81       	ld	r22, Z
 4ec:	71 81       	ldd	r23, Z+1	; 0x01
 4ee:	82 81       	ldd	r24, Z+2	; 0x02
 4f0:	93 81       	ldd	r25, Z+3	; 0x03
 4f2:	0c 5f       	subi	r16, 0xFC	; 252
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	08 c0       	rjmp	.+16     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 4f8:	60 81       	ld	r22, Z
 4fa:	71 81       	ldd	r23, Z+1	; 0x01
 4fc:	07 2e       	mov	r0, r23
 4fe:	00 0c       	add	r0, r0
 500:	88 0b       	sbc	r24, r24
 502:	99 0b       	sbc	r25, r25
 504:	0e 5f       	subi	r16, 0xFE	; 254
 506:	1f 4f       	sbci	r17, 0xFF	; 255
 508:	f3 2d       	mov	r31, r3
 50a:	ff 76       	andi	r31, 0x6F	; 111
 50c:	3f 2e       	mov	r3, r31
 50e:	97 ff       	sbrs	r25, 7
 510:	09 c0       	rjmp	.+18     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 512:	90 95       	com	r25
 514:	80 95       	com	r24
 516:	70 95       	com	r23
 518:	61 95       	neg	r22
 51a:	7f 4f       	sbci	r23, 0xFF	; 255
 51c:	8f 4f       	sbci	r24, 0xFF	; 255
 51e:	9f 4f       	sbci	r25, 0xFF	; 255
 520:	f0 68       	ori	r31, 0x80	; 128
 522:	3f 2e       	mov	r3, r31
 524:	2a e0       	ldi	r18, 0x0A	; 10
 526:	30 e0       	ldi	r19, 0x00	; 0
 528:	a3 01       	movw	r20, r6
 52a:	0e 94 bc 03 	call	0x778	; 0x778 <__ultoa_invert>
 52e:	88 2e       	mov	r8, r24
 530:	86 18       	sub	r8, r6
 532:	45 c0       	rjmp	.+138    	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 534:	85 37       	cpi	r24, 0x75	; 117
 536:	31 f4       	brne	.+12     	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
 538:	23 2d       	mov	r18, r3
 53a:	2f 7e       	andi	r18, 0xEF	; 239
 53c:	b2 2e       	mov	r11, r18
 53e:	2a e0       	ldi	r18, 0x0A	; 10
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	25 c0       	rjmp	.+74     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 544:	93 2d       	mov	r25, r3
 546:	99 7f       	andi	r25, 0xF9	; 249
 548:	b9 2e       	mov	r11, r25
 54a:	8f 36       	cpi	r24, 0x6F	; 111
 54c:	c1 f0       	breq	.+48     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 54e:	18 f4       	brcc	.+6      	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 550:	88 35       	cpi	r24, 0x58	; 88
 552:	79 f0       	breq	.+30     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 554:	b5 c0       	rjmp	.+362    	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 556:	80 37       	cpi	r24, 0x70	; 112
 558:	19 f0       	breq	.+6      	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
 55a:	88 37       	cpi	r24, 0x78	; 120
 55c:	21 f0       	breq	.+8      	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
 55e:	b0 c0       	rjmp	.+352    	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 560:	e9 2f       	mov	r30, r25
 562:	e0 61       	ori	r30, 0x10	; 16
 564:	be 2e       	mov	r11, r30
 566:	b4 fe       	sbrs	r11, 4
 568:	0d c0       	rjmp	.+26     	; 0x584 <__EEPROM_REGION_LENGTH__+0x184>
 56a:	fb 2d       	mov	r31, r11
 56c:	f4 60       	ori	r31, 0x04	; 4
 56e:	bf 2e       	mov	r11, r31
 570:	09 c0       	rjmp	.+18     	; 0x584 <__EEPROM_REGION_LENGTH__+0x184>
 572:	34 fe       	sbrs	r3, 4
 574:	0a c0       	rjmp	.+20     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 576:	29 2f       	mov	r18, r25
 578:	26 60       	ori	r18, 0x06	; 6
 57a:	b2 2e       	mov	r11, r18
 57c:	06 c0       	rjmp	.+12     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 57e:	28 e0       	ldi	r18, 0x08	; 8
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	05 c0       	rjmp	.+10     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 584:	20 e1       	ldi	r18, 0x10	; 16
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	02 c0       	rjmp	.+4      	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 58a:	20 e1       	ldi	r18, 0x10	; 16
 58c:	32 e0       	ldi	r19, 0x02	; 2
 58e:	f8 01       	movw	r30, r16
 590:	b7 fe       	sbrs	r11, 7
 592:	07 c0       	rjmp	.+14     	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 594:	60 81       	ld	r22, Z
 596:	71 81       	ldd	r23, Z+1	; 0x01
 598:	82 81       	ldd	r24, Z+2	; 0x02
 59a:	93 81       	ldd	r25, Z+3	; 0x03
 59c:	0c 5f       	subi	r16, 0xFC	; 252
 59e:	1f 4f       	sbci	r17, 0xFF	; 255
 5a0:	06 c0       	rjmp	.+12     	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 5a2:	60 81       	ld	r22, Z
 5a4:	71 81       	ldd	r23, Z+1	; 0x01
 5a6:	80 e0       	ldi	r24, 0x00	; 0
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 5f       	subi	r16, 0xFE	; 254
 5ac:	1f 4f       	sbci	r17, 0xFF	; 255
 5ae:	a3 01       	movw	r20, r6
 5b0:	0e 94 bc 03 	call	0x778	; 0x778 <__ultoa_invert>
 5b4:	88 2e       	mov	r8, r24
 5b6:	86 18       	sub	r8, r6
 5b8:	fb 2d       	mov	r31, r11
 5ba:	ff 77       	andi	r31, 0x7F	; 127
 5bc:	3f 2e       	mov	r3, r31
 5be:	36 fe       	sbrs	r3, 6
 5c0:	0d c0       	rjmp	.+26     	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
 5c2:	23 2d       	mov	r18, r3
 5c4:	2e 7f       	andi	r18, 0xFE	; 254
 5c6:	a2 2e       	mov	r10, r18
 5c8:	89 14       	cp	r8, r9
 5ca:	58 f4       	brcc	.+22     	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 5cc:	34 fe       	sbrs	r3, 4
 5ce:	0b c0       	rjmp	.+22     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5d0:	32 fc       	sbrc	r3, 2
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5d4:	83 2d       	mov	r24, r3
 5d6:	8e 7e       	andi	r24, 0xEE	; 238
 5d8:	a8 2e       	mov	r10, r24
 5da:	05 c0       	rjmp	.+10     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5dc:	b8 2c       	mov	r11, r8
 5de:	a3 2c       	mov	r10, r3
 5e0:	03 c0       	rjmp	.+6      	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 5e2:	b8 2c       	mov	r11, r8
 5e4:	01 c0       	rjmp	.+2      	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 5e6:	b9 2c       	mov	r11, r9
 5e8:	a4 fe       	sbrs	r10, 4
 5ea:	0f c0       	rjmp	.+30     	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 5ec:	fe 01       	movw	r30, r28
 5ee:	e8 0d       	add	r30, r8
 5f0:	f1 1d       	adc	r31, r1
 5f2:	80 81       	ld	r24, Z
 5f4:	80 33       	cpi	r24, 0x30	; 48
 5f6:	21 f4       	brne	.+8      	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
 5f8:	9a 2d       	mov	r25, r10
 5fa:	99 7e       	andi	r25, 0xE9	; 233
 5fc:	a9 2e       	mov	r10, r25
 5fe:	09 c0       	rjmp	.+18     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 600:	a2 fe       	sbrs	r10, 2
 602:	06 c0       	rjmp	.+12     	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 604:	b3 94       	inc	r11
 606:	b3 94       	inc	r11
 608:	04 c0       	rjmp	.+8      	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 60a:	8a 2d       	mov	r24, r10
 60c:	86 78       	andi	r24, 0x86	; 134
 60e:	09 f0       	breq	.+2      	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 610:	b3 94       	inc	r11
 612:	a3 fc       	sbrc	r10, 3
 614:	11 c0       	rjmp	.+34     	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 616:	a0 fe       	sbrs	r10, 0
 618:	06 c0       	rjmp	.+12     	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 61a:	b2 14       	cp	r11, r2
 61c:	88 f4       	brcc	.+34     	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 61e:	28 0c       	add	r2, r8
 620:	92 2c       	mov	r9, r2
 622:	9b 18       	sub	r9, r11
 624:	0e c0       	rjmp	.+28     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 626:	b2 14       	cp	r11, r2
 628:	60 f4       	brcc	.+24     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 62a:	b6 01       	movw	r22, r12
 62c:	80 e2       	ldi	r24, 0x20	; 32
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 634:	b3 94       	inc	r11
 636:	f7 cf       	rjmp	.-18     	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 638:	b2 14       	cp	r11, r2
 63a:	18 f4       	brcc	.+6      	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 63c:	2b 18       	sub	r2, r11
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 640:	98 2c       	mov	r9, r8
 642:	21 2c       	mov	r2, r1
 644:	a4 fe       	sbrs	r10, 4
 646:	10 c0       	rjmp	.+32     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 648:	b6 01       	movw	r22, r12
 64a:	80 e3       	ldi	r24, 0x30	; 48
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 652:	a2 fe       	sbrs	r10, 2
 654:	17 c0       	rjmp	.+46     	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 656:	a1 fc       	sbrc	r10, 1
 658:	03 c0       	rjmp	.+6      	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 65a:	88 e7       	ldi	r24, 0x78	; 120
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	02 c0       	rjmp	.+4      	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 660:	88 e5       	ldi	r24, 0x58	; 88
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	b6 01       	movw	r22, r12
 666:	0c c0       	rjmp	.+24     	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 668:	8a 2d       	mov	r24, r10
 66a:	86 78       	andi	r24, 0x86	; 134
 66c:	59 f0       	breq	.+22     	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 66e:	a1 fe       	sbrs	r10, 1
 670:	02 c0       	rjmp	.+4      	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 672:	8b e2       	ldi	r24, 0x2B	; 43
 674:	01 c0       	rjmp	.+2      	; 0x678 <__EEPROM_REGION_LENGTH__+0x278>
 676:	80 e2       	ldi	r24, 0x20	; 32
 678:	a7 fc       	sbrc	r10, 7
 67a:	8d e2       	ldi	r24, 0x2D	; 45
 67c:	b6 01       	movw	r22, r12
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 684:	89 14       	cp	r8, r9
 686:	38 f4       	brcc	.+14     	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 688:	b6 01       	movw	r22, r12
 68a:	80 e3       	ldi	r24, 0x30	; 48
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 692:	9a 94       	dec	r9
 694:	f7 cf       	rjmp	.-18     	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 696:	8a 94       	dec	r8
 698:	f3 01       	movw	r30, r6
 69a:	e8 0d       	add	r30, r8
 69c:	f1 1d       	adc	r31, r1
 69e:	80 81       	ld	r24, Z
 6a0:	b6 01       	movw	r22, r12
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 6a8:	81 10       	cpse	r8, r1
 6aa:	f5 cf       	rjmp	.-22     	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 6ac:	22 20       	and	r2, r2
 6ae:	09 f4       	brne	.+2      	; 0x6b2 <__EEPROM_REGION_LENGTH__+0x2b2>
 6b0:	42 ce       	rjmp	.-892    	; 0x336 <vfprintf+0x24>
 6b2:	b6 01       	movw	r22, r12
 6b4:	80 e2       	ldi	r24, 0x20	; 32
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 6bc:	2a 94       	dec	r2
 6be:	f6 cf       	rjmp	.-20     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 6c0:	f6 01       	movw	r30, r12
 6c2:	86 81       	ldd	r24, Z+6	; 0x06
 6c4:	97 81       	ldd	r25, Z+7	; 0x07
 6c6:	02 c0       	rjmp	.+4      	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 6c8:	8f ef       	ldi	r24, 0xFF	; 255
 6ca:	9f ef       	ldi	r25, 0xFF	; 255
 6cc:	2b 96       	adiw	r28, 0x0b	; 11
 6ce:	e2 e1       	ldi	r30, 0x12	; 18
 6d0:	0c 94 36 04 	jmp	0x86c	; 0x86c <__epilogue_restores__>

000006d4 <strnlen_P>:
 6d4:	fc 01       	movw	r30, r24
 6d6:	05 90       	lpm	r0, Z+
 6d8:	61 50       	subi	r22, 0x01	; 1
 6da:	70 40       	sbci	r23, 0x00	; 0
 6dc:	01 10       	cpse	r0, r1
 6de:	d8 f7       	brcc	.-10     	; 0x6d6 <strnlen_P+0x2>
 6e0:	80 95       	com	r24
 6e2:	90 95       	com	r25
 6e4:	8e 0f       	add	r24, r30
 6e6:	9f 1f       	adc	r25, r31
 6e8:	08 95       	ret

000006ea <strnlen>:
 6ea:	fc 01       	movw	r30, r24
 6ec:	61 50       	subi	r22, 0x01	; 1
 6ee:	70 40       	sbci	r23, 0x00	; 0
 6f0:	01 90       	ld	r0, Z+
 6f2:	01 10       	cpse	r0, r1
 6f4:	d8 f7       	brcc	.-10     	; 0x6ec <strnlen+0x2>
 6f6:	80 95       	com	r24
 6f8:	90 95       	com	r25
 6fa:	8e 0f       	add	r24, r30
 6fc:	9f 1f       	adc	r25, r31
 6fe:	08 95       	ret

00000700 <fputc>:
 700:	0f 93       	push	r16
 702:	1f 93       	push	r17
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	fb 01       	movw	r30, r22
 70a:	23 81       	ldd	r18, Z+3	; 0x03
 70c:	21 fd       	sbrc	r18, 1
 70e:	03 c0       	rjmp	.+6      	; 0x716 <fputc+0x16>
 710:	8f ef       	ldi	r24, 0xFF	; 255
 712:	9f ef       	ldi	r25, 0xFF	; 255
 714:	2c c0       	rjmp	.+88     	; 0x76e <fputc+0x6e>
 716:	22 ff       	sbrs	r18, 2
 718:	16 c0       	rjmp	.+44     	; 0x746 <fputc+0x46>
 71a:	46 81       	ldd	r20, Z+6	; 0x06
 71c:	57 81       	ldd	r21, Z+7	; 0x07
 71e:	24 81       	ldd	r18, Z+4	; 0x04
 720:	35 81       	ldd	r19, Z+5	; 0x05
 722:	42 17       	cp	r20, r18
 724:	53 07       	cpc	r21, r19
 726:	44 f4       	brge	.+16     	; 0x738 <fputc+0x38>
 728:	a0 81       	ld	r26, Z
 72a:	b1 81       	ldd	r27, Z+1	; 0x01
 72c:	9d 01       	movw	r18, r26
 72e:	2f 5f       	subi	r18, 0xFF	; 255
 730:	3f 4f       	sbci	r19, 0xFF	; 255
 732:	31 83       	std	Z+1, r19	; 0x01
 734:	20 83       	st	Z, r18
 736:	8c 93       	st	X, r24
 738:	26 81       	ldd	r18, Z+6	; 0x06
 73a:	37 81       	ldd	r19, Z+7	; 0x07
 73c:	2f 5f       	subi	r18, 0xFF	; 255
 73e:	3f 4f       	sbci	r19, 0xFF	; 255
 740:	37 83       	std	Z+7, r19	; 0x07
 742:	26 83       	std	Z+6, r18	; 0x06
 744:	14 c0       	rjmp	.+40     	; 0x76e <fputc+0x6e>
 746:	8b 01       	movw	r16, r22
 748:	ec 01       	movw	r28, r24
 74a:	fb 01       	movw	r30, r22
 74c:	00 84       	ldd	r0, Z+8	; 0x08
 74e:	f1 85       	ldd	r31, Z+9	; 0x09
 750:	e0 2d       	mov	r30, r0
 752:	09 95       	icall
 754:	89 2b       	or	r24, r25
 756:	e1 f6       	brne	.-72     	; 0x710 <fputc+0x10>
 758:	d8 01       	movw	r26, r16
 75a:	16 96       	adiw	r26, 0x06	; 6
 75c:	8d 91       	ld	r24, X+
 75e:	9c 91       	ld	r25, X
 760:	17 97       	sbiw	r26, 0x07	; 7
 762:	01 96       	adiw	r24, 0x01	; 1
 764:	17 96       	adiw	r26, 0x07	; 7
 766:	9c 93       	st	X, r25
 768:	8e 93       	st	-X, r24
 76a:	16 97       	sbiw	r26, 0x06	; 6
 76c:	ce 01       	movw	r24, r28
 76e:	df 91       	pop	r29
 770:	cf 91       	pop	r28
 772:	1f 91       	pop	r17
 774:	0f 91       	pop	r16
 776:	08 95       	ret

00000778 <__ultoa_invert>:
 778:	fa 01       	movw	r30, r20
 77a:	aa 27       	eor	r26, r26
 77c:	28 30       	cpi	r18, 0x08	; 8
 77e:	51 f1       	breq	.+84     	; 0x7d4 <__ultoa_invert+0x5c>
 780:	20 31       	cpi	r18, 0x10	; 16
 782:	81 f1       	breq	.+96     	; 0x7e4 <__ultoa_invert+0x6c>
 784:	e8 94       	clt
 786:	6f 93       	push	r22
 788:	6e 7f       	andi	r22, 0xFE	; 254
 78a:	6e 5f       	subi	r22, 0xFE	; 254
 78c:	7f 4f       	sbci	r23, 0xFF	; 255
 78e:	8f 4f       	sbci	r24, 0xFF	; 255
 790:	9f 4f       	sbci	r25, 0xFF	; 255
 792:	af 4f       	sbci	r26, 0xFF	; 255
 794:	b1 e0       	ldi	r27, 0x01	; 1
 796:	3e d0       	rcall	.+124    	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 798:	b4 e0       	ldi	r27, 0x04	; 4
 79a:	3c d0       	rcall	.+120    	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 79c:	67 0f       	add	r22, r23
 79e:	78 1f       	adc	r23, r24
 7a0:	89 1f       	adc	r24, r25
 7a2:	9a 1f       	adc	r25, r26
 7a4:	a1 1d       	adc	r26, r1
 7a6:	68 0f       	add	r22, r24
 7a8:	79 1f       	adc	r23, r25
 7aa:	8a 1f       	adc	r24, r26
 7ac:	91 1d       	adc	r25, r1
 7ae:	a1 1d       	adc	r26, r1
 7b0:	6a 0f       	add	r22, r26
 7b2:	71 1d       	adc	r23, r1
 7b4:	81 1d       	adc	r24, r1
 7b6:	91 1d       	adc	r25, r1
 7b8:	a1 1d       	adc	r26, r1
 7ba:	20 d0       	rcall	.+64     	; 0x7fc <__ultoa_invert+0x84>
 7bc:	09 f4       	brne	.+2      	; 0x7c0 <__ultoa_invert+0x48>
 7be:	68 94       	set
 7c0:	3f 91       	pop	r19
 7c2:	2a e0       	ldi	r18, 0x0A	; 10
 7c4:	26 9f       	mul	r18, r22
 7c6:	11 24       	eor	r1, r1
 7c8:	30 19       	sub	r19, r0
 7ca:	30 5d       	subi	r19, 0xD0	; 208
 7cc:	31 93       	st	Z+, r19
 7ce:	de f6       	brtc	.-74     	; 0x786 <__ultoa_invert+0xe>
 7d0:	cf 01       	movw	r24, r30
 7d2:	08 95       	ret
 7d4:	46 2f       	mov	r20, r22
 7d6:	47 70       	andi	r20, 0x07	; 7
 7d8:	40 5d       	subi	r20, 0xD0	; 208
 7da:	41 93       	st	Z+, r20
 7dc:	b3 e0       	ldi	r27, 0x03	; 3
 7de:	0f d0       	rcall	.+30     	; 0x7fe <__ultoa_invert+0x86>
 7e0:	c9 f7       	brne	.-14     	; 0x7d4 <__ultoa_invert+0x5c>
 7e2:	f6 cf       	rjmp	.-20     	; 0x7d0 <__ultoa_invert+0x58>
 7e4:	46 2f       	mov	r20, r22
 7e6:	4f 70       	andi	r20, 0x0F	; 15
 7e8:	40 5d       	subi	r20, 0xD0	; 208
 7ea:	4a 33       	cpi	r20, 0x3A	; 58
 7ec:	18 f0       	brcs	.+6      	; 0x7f4 <__ultoa_invert+0x7c>
 7ee:	49 5d       	subi	r20, 0xD9	; 217
 7f0:	31 fd       	sbrc	r19, 1
 7f2:	40 52       	subi	r20, 0x20	; 32
 7f4:	41 93       	st	Z+, r20
 7f6:	02 d0       	rcall	.+4      	; 0x7fc <__ultoa_invert+0x84>
 7f8:	a9 f7       	brne	.-22     	; 0x7e4 <__ultoa_invert+0x6c>
 7fa:	ea cf       	rjmp	.-44     	; 0x7d0 <__ultoa_invert+0x58>
 7fc:	b4 e0       	ldi	r27, 0x04	; 4
 7fe:	a6 95       	lsr	r26
 800:	97 95       	ror	r25
 802:	87 95       	ror	r24
 804:	77 95       	ror	r23
 806:	67 95       	ror	r22
 808:	ba 95       	dec	r27
 80a:	c9 f7       	brne	.-14     	; 0x7fe <__ultoa_invert+0x86>
 80c:	00 97       	sbiw	r24, 0x00	; 0
 80e:	61 05       	cpc	r22, r1
 810:	71 05       	cpc	r23, r1
 812:	08 95       	ret
 814:	9b 01       	movw	r18, r22
 816:	ac 01       	movw	r20, r24
 818:	0a 2e       	mov	r0, r26
 81a:	06 94       	lsr	r0
 81c:	57 95       	ror	r21
 81e:	47 95       	ror	r20
 820:	37 95       	ror	r19
 822:	27 95       	ror	r18
 824:	ba 95       	dec	r27
 826:	c9 f7       	brne	.-14     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 828:	62 0f       	add	r22, r18
 82a:	73 1f       	adc	r23, r19
 82c:	84 1f       	adc	r24, r20
 82e:	95 1f       	adc	r25, r21
 830:	a0 1d       	adc	r26, r0
 832:	08 95       	ret

00000834 <__prologue_saves__>:
 834:	2f 92       	push	r2
 836:	3f 92       	push	r3
 838:	4f 92       	push	r4
 83a:	5f 92       	push	r5
 83c:	6f 92       	push	r6
 83e:	7f 92       	push	r7
 840:	8f 92       	push	r8
 842:	9f 92       	push	r9
 844:	af 92       	push	r10
 846:	bf 92       	push	r11
 848:	cf 92       	push	r12
 84a:	df 92       	push	r13
 84c:	ef 92       	push	r14
 84e:	ff 92       	push	r15
 850:	0f 93       	push	r16
 852:	1f 93       	push	r17
 854:	cf 93       	push	r28
 856:	df 93       	push	r29
 858:	cd b7       	in	r28, 0x3d	; 61
 85a:	de b7       	in	r29, 0x3e	; 62
 85c:	ca 1b       	sub	r28, r26
 85e:	db 0b       	sbc	r29, r27
 860:	0f b6       	in	r0, 0x3f	; 63
 862:	f8 94       	cli
 864:	de bf       	out	0x3e, r29	; 62
 866:	0f be       	out	0x3f, r0	; 63
 868:	cd bf       	out	0x3d, r28	; 61
 86a:	09 94       	ijmp

0000086c <__epilogue_restores__>:
 86c:	2a 88       	ldd	r2, Y+18	; 0x12
 86e:	39 88       	ldd	r3, Y+17	; 0x11
 870:	48 88       	ldd	r4, Y+16	; 0x10
 872:	5f 84       	ldd	r5, Y+15	; 0x0f
 874:	6e 84       	ldd	r6, Y+14	; 0x0e
 876:	7d 84       	ldd	r7, Y+13	; 0x0d
 878:	8c 84       	ldd	r8, Y+12	; 0x0c
 87a:	9b 84       	ldd	r9, Y+11	; 0x0b
 87c:	aa 84       	ldd	r10, Y+10	; 0x0a
 87e:	b9 84       	ldd	r11, Y+9	; 0x09
 880:	c8 84       	ldd	r12, Y+8	; 0x08
 882:	df 80       	ldd	r13, Y+7	; 0x07
 884:	ee 80       	ldd	r14, Y+6	; 0x06
 886:	fd 80       	ldd	r15, Y+5	; 0x05
 888:	0c 81       	ldd	r16, Y+4	; 0x04
 88a:	1b 81       	ldd	r17, Y+3	; 0x03
 88c:	aa 81       	ldd	r26, Y+2	; 0x02
 88e:	b9 81       	ldd	r27, Y+1	; 0x01
 890:	ce 0f       	add	r28, r30
 892:	d1 1d       	adc	r29, r1
 894:	0f b6       	in	r0, 0x3f	; 63
 896:	f8 94       	cli
 898:	de bf       	out	0x3e, r29	; 62
 89a:	0f be       	out	0x3f, r0	; 63
 89c:	cd bf       	out	0x3d, r28	; 61
 89e:	ed 01       	movw	r28, r26
 8a0:	08 95       	ret

000008a2 <_exit>:
 8a2:	f8 94       	cli

000008a4 <__stop_program>:
 8a4:	ff cf       	rjmp	.-2      	; 0x8a4 <__stop_program>
