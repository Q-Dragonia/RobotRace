
RobotRace.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000009d6  00000a6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800104  00800104  00000a6e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000acc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010f8  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000087d  00000000  00000000  00001cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007ed  00000000  00000000  00002569  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00002d58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000068e  00000000  00000000  00002f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000511  00000000  00000000  000035e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00003af7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 ed       	ldi	r30, 0xD6	; 214
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 30       	cpi	r26, 0x05	; 5
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 40 01 	call	0x280	; 0x280 <main>
  9e:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ADC>:
	// Calculate pulse width
	float set = (float)angle / (float)max_angle; // Ratio of degrees
	set = (((float)SERVO_MAX - (float)SERVO_MIN) * set) + (float)SERVO_MIN; // Find the value for PWM
	uint16_t point = (uint16_t)set;
	update_pwm(point);
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 60       	ori	r24, 0x07	; 7
  b8:	80 83       	st	Z, r24
  ba:	80 81       	ld	r24, Z
  bc:	80 68       	ori	r24, 0x80	; 128
  be:	80 83       	st	Z, r24
  c0:	08 95       	ret

000000c2 <readADC>:
  c2:	ec e7       	ldi	r30, 0x7C	; 124
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	90 81       	ld	r25, Z
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	89 2b       	or	r24, r25
  ce:	80 83       	st	Z, r24
  d0:	ea e7       	ldi	r30, 0x7A	; 122
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	80 64       	ori	r24, 0x40	; 64
  d8:	80 83       	st	Z, r24
  da:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  de:	86 fd       	sbrc	r24, 6
  e0:	fc cf       	rjmp	.-8      	; 0xda <readADC+0x18>
  e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  e6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  ea:	08 95       	ret

000000ec <custom_delay_ms>:
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	00 d0       	rcall	.+0      	; 0xf2 <custom_delay_ms+0x6>
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
  f6:	40 e0       	ldi	r20, 0x00	; 0
  f8:	50 e0       	ldi	r21, 0x00	; 0
  fa:	11 c0       	rjmp	.+34     	; 0x11e <custom_delay_ms+0x32>
  fc:	1a 82       	std	Y+2, r1	; 0x02
  fe:	19 82       	std	Y+1, r1	; 0x01
 100:	07 c0       	rjmp	.+14     	; 0x110 <custom_delay_ms+0x24>
 102:	00 00       	nop
 104:	29 81       	ldd	r18, Y+1	; 0x01
 106:	3a 81       	ldd	r19, Y+2	; 0x02
 108:	2f 5f       	subi	r18, 0xFF	; 255
 10a:	3f 4f       	sbci	r19, 0xFF	; 255
 10c:	3a 83       	std	Y+2, r19	; 0x02
 10e:	29 83       	std	Y+1, r18	; 0x01
 110:	29 81       	ldd	r18, Y+1	; 0x01
 112:	3a 81       	ldd	r19, Y+2	; 0x02
 114:	22 35       	cpi	r18, 0x52	; 82
 116:	33 40       	sbci	r19, 0x03	; 3
 118:	a0 f3       	brcs	.-24     	; 0x102 <custom_delay_ms+0x16>
 11a:	4f 5f       	subi	r20, 0xFF	; 255
 11c:	5f 4f       	sbci	r21, 0xFF	; 255
 11e:	48 17       	cp	r20, r24
 120:	59 07       	cpc	r21, r25
 122:	60 f3       	brcs	.-40     	; 0xfc <custom_delay_ms+0x10>
 124:	0f 90       	pop	r0
 126:	0f 90       	pop	r0
 128:	df 91       	pop	r29
 12a:	cf 91       	pop	r28
 12c:	08 95       	ret

0000012e <init_USART>:
 12e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 132:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 136:	88 e1       	ldi	r24, 0x18	; 24
 138:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 13c:	86 e0       	ldi	r24, 0x06	; 6
 13e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 142:	08 95       	ret

00000144 <transferMessage>:
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	cd b7       	in	r28, 0x3d	; 61
 14a:	de b7       	in	r29, 0x3e	; 62
 14c:	64 97       	sbiw	r28, 0x14	; 20
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	f8 94       	cli
 152:	de bf       	out	0x3e, r29	; 62
 154:	0f be       	out	0x3f, r0	; 63
 156:	cd bf       	out	0x3d, r28	; 61
 158:	9f 93       	push	r25
 15a:	8f 93       	push	r24
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	9f 93       	push	r25
 162:	8f 93       	push	r24
 164:	1f 92       	push	r1
 166:	84 e1       	ldi	r24, 0x14	; 20
 168:	8f 93       	push	r24
 16a:	ce 01       	movw	r24, r28
 16c:	01 96       	adiw	r24, 0x01	; 1
 16e:	9f 93       	push	r25
 170:	8f 93       	push	r24
 172:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <snprintf>
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	f8 94       	cli
 17a:	de bf       	out	0x3e, r29	; 62
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	cd bf       	out	0x3d, r28	; 61
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	08 c0       	rjmp	.+16     	; 0x196 <transferMessage+0x52>
 186:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 18a:	85 ff       	sbrs	r24, 5
 18c:	fc cf       	rjmp	.-8      	; 0x186 <transferMessage+0x42>
 18e:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 192:	2f 5f       	subi	r18, 0xFF	; 255
 194:	3f 4f       	sbci	r19, 0xFF	; 255
 196:	e1 e0       	ldi	r30, 0x01	; 1
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	ec 0f       	add	r30, r28
 19c:	fd 1f       	adc	r31, r29
 19e:	e2 0f       	add	r30, r18
 1a0:	f3 1f       	adc	r31, r19
 1a2:	90 81       	ld	r25, Z
 1a4:	91 11       	cpse	r25, r1
 1a6:	ef cf       	rjmp	.-34     	; 0x186 <transferMessage+0x42>
 1a8:	64 96       	adiw	r28, 0x14	; 20
 1aa:	0f b6       	in	r0, 0x3f	; 63
 1ac:	f8 94       	cli
 1ae:	de bf       	out	0x3e, r29	; 62
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	cd bf       	out	0x3d, r28	; 61
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <receiveMessage>:
 1ba:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1be:	88 23       	and	r24, r24
 1c0:	1c f4       	brge	.+6      	; 0x1c8 <receiveMessage+0xe>
 1c2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1c6:	08 95       	ret
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	08 95       	ret

000001cc <init_driving_PWM>:
 1cc:	8a b1       	in	r24, 0x0a	; 10
 1ce:	80 66       	ori	r24, 0x60	; 96
 1d0:	8a b9       	out	0x0a, r24	; 10
 1d2:	84 b5       	in	r24, 0x24	; 36
 1d4:	83 6a       	ori	r24, 0xA3	; 163
 1d6:	84 bd       	out	0x24, r24	; 36
 1d8:	85 b5       	in	r24, 0x25	; 37
 1da:	83 60       	ori	r24, 0x03	; 3
 1dc:	85 bd       	out	0x25, r24	; 37
 1de:	84 b1       	in	r24, 0x04	; 4
 1e0:	8c 60       	ori	r24, 0x0C	; 12
 1e2:	84 b9       	out	0x04, r24	; 4
 1e4:	08 95       	ret

000001e6 <setMotorASpeed>:
 1e6:	81 11       	cpse	r24, r1
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <setMotorASpeed+0x8>
 1ea:	18 bc       	out	0x28, r1	; 40
 1ec:	08 95       	ret
 1ee:	88 bd       	out	0x28, r24	; 40
 1f0:	08 95       	ret

000001f2 <setMotorBSpeed>:
 1f2:	81 11       	cpse	r24, r1
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <setMotorBSpeed+0x8>
 1f6:	17 bc       	out	0x27, r1	; 39
 1f8:	08 95       	ret
 1fa:	87 bd       	out	0x27, r24	; 39
 1fc:	08 95       	ret

000001fe <setMotorADirection>:
 1fe:	81 30       	cpi	r24, 0x01	; 1
 200:	21 f4       	brne	.+8      	; 0x20a <setMotorADirection+0xc>
 202:	85 b1       	in	r24, 0x05	; 5
 204:	84 60       	ori	r24, 0x04	; 4
 206:	85 b9       	out	0x05, r24	; 5
 208:	08 95       	ret
 20a:	85 b1       	in	r24, 0x05	; 5
 20c:	8b 7f       	andi	r24, 0xFB	; 251
 20e:	85 b9       	out	0x05, r24	; 5
 210:	08 95       	ret

00000212 <setMotorBDirection>:
 212:	81 30       	cpi	r24, 0x01	; 1
 214:	21 f4       	brne	.+8      	; 0x21e <setMotorBDirection+0xc>
 216:	85 b1       	in	r24, 0x05	; 5
 218:	88 60       	ori	r24, 0x08	; 8
 21a:	85 b9       	out	0x05, r24	; 5
 21c:	08 95       	ret
 21e:	85 b1       	in	r24, 0x05	; 5
 220:	87 7f       	andi	r24, 0xF7	; 247
 222:	85 b9       	out	0x05, r24	; 5
 224:	08 95       	ret

00000226 <ultrasonic_init>:
#include "servo.h"
#include "usart.h"

void ultrasonic_init() {
	// Set trigger pin as output and echo pin as input for ultrasonic sensor
	DDRB |= (1 << TRIG_PIN); // Trigger pin as output
 226:	84 b1       	in	r24, 0x04	; 4
 228:	80 62       	ori	r24, 0x20	; 32
 22a:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << ECHO_PIN); // Echo pin as input
 22c:	84 b1       	in	r24, 0x04	; 4
 22e:	8f 7e       	andi	r24, 0xEF	; 239
 230:	84 b9       	out	0x04, r24	; 4
 232:	08 95       	ret

00000234 <timer1_init>:
}
void timer1_init(){
	TCCR1A = 0;
 234:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B |= (0b010<<CS10);
 238:	e1 e8       	ldi	r30, 0x81	; 129
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	82 60       	ori	r24, 0x02	; 2
 240:	80 83       	st	Z, r24
 242:	08 95       	ret

00000244 <measure_distance>:
	
}
int measure_distance() {
	// Send a 10us pulse to the ultrasonic sensor
	PORTB |= (1 << TRIG_PIN);
 244:	85 b1       	in	r24, 0x05	; 5
 246:	80 62       	ori	r24, 0x20	; 32
 248:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24a:	83 e0       	ldi	r24, 0x03	; 3
 24c:	8a 95       	dec	r24
 24e:	f1 f7       	brne	.-4      	; 0x24c <measure_distance+0x8>
 250:	00 00       	nop
	_delay_us(10);
	PORTB &= ~(1 << TRIG_PIN);
 252:	85 b1       	in	r24, 0x05	; 5
 254:	8f 7d       	andi	r24, 0xDF	; 223
 256:	85 b9       	out	0x05, r24	; 5

	// Measure pulse duration
	while (!(PINB & (1 << ECHO_PIN))); // Wait for echo pin to go high
 258:	1c 9b       	sbis	0x03, 4	; 3
 25a:	fe cf       	rjmp	.-4      	; 0x258 <measure_distance+0x14>
	TCNT1 = 0; // Record start time
 25c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 260:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	while (PINB & (1 << ECHO_PIN)); // Wait for echo pin to go low
 264:	1c 99       	sbic	0x03, 4	; 3
 266:	fe cf       	rjmp	.-4      	; 0x264 <measure_distance+0x20>
	int time = TCNT1/2;
 268:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 26c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 270:	96 95       	lsr	r25
 272:	87 95       	ror	r24

	// Calculate distance in cm
	int distance = (int)(time / 29);
 274:	6d e1       	ldi	r22, 0x1D	; 29
 276:	70 e0       	ldi	r23, 0x00	; 0
 278:	0e 94 c9 01 	call	0x392	; 0x392 <__divmodhi4>
 27c:	cb 01       	movw	r24, r22

	return distance;
}
 27e:	08 95       	ret

00000280 <main>:
#include "collision.h"

int main(void)
{
    
	init_ADC();
 280:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ADC>
	init_USART(MYUBRR);
 284:	87 e6       	ldi	r24, 0x67	; 103
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	0e 94 97 00 	call	0x12e	; 0x12e <init_USART>
 	init_driving_PWM();
 28c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <init_driving_PWM>
	ultrasonic_init();
 290:	0e 94 13 01 	call	0x226	; 0x226 <ultrasonic_init>
	timer1_init();
 294:	0e 94 1a 01 	call	0x234	; 0x234 <timer1_init>
	int16_t i = 0;
	char var;
	int distance;
	
	setMotorADirection(1);
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <setMotorADirection>
	setMotorBDirection(1);
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	0e 94 09 01 	call	0x212	; 0x212 <setMotorBDirection>
	setMotorASpeed(0);
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
	setMotorBSpeed(0);
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
	
	sei();
 2b0:	78 94       	sei
	
  while (1) 
    {
		var = receiveMessage();
 2b2:	0e 94 dd 00 	call	0x1ba	; 0x1ba <receiveMessage>
		if(var == 'A' || var == 'B' || var == 'C'){receivedMessage = var;}
 2b6:	9f eb       	ldi	r25, 0xBF	; 191
 2b8:	98 0f       	add	r25, r24
 2ba:	93 30       	cpi	r25, 0x03	; 3
 2bc:	08 f0       	brcs	.+2      	; 0x2c0 <main+0x40>
 2be:	45 c0       	rjmp	.+138    	; 0x34a <main+0xca>
 2c0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 2c4:	42 c0       	rjmp	.+132    	; 0x34a <main+0xca>
		
		while(receivedMessage == 'A'){
			int sensorLeft = (int)(readADC(SENSOR_LEFT_CHANNEL));
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 2cc:	6c 01       	movw	r12, r24
			int lineTrackingSensorLeft = (int)(readADC(LINE_TRACKING_SENSOR_LEFT_CHANNEL));
 2ce:	85 e0       	ldi	r24, 0x05	; 5
 2d0:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 2d4:	ec 01       	movw	r28, r24
			int lineTrackingSensorMiddle = (int)(readADC(LINE_TRACKING_SENSOR_MIDDLE_CHANNEL));
 2d6:	82 e0       	ldi	r24, 0x02	; 2
 2d8:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 2dc:	7c 01       	movw	r14, r24
			int lineTrackingSensorRight = (int)(readADC(LINE_TRACKING_SENSOR_RIGHT_CHANNEL));
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 2e4:	8c 01       	movw	r16, r24
			int sensorRight = (int)(readADC(SENSOR_RIGHT_CHANNEL));
 2e6:	83 e0       	ldi	r24, 0x03	; 3
 2e8:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
			
			int averageValue = (int)((sensorLeft + lineTrackingSensorLeft + lineTrackingSensorMiddle + lineTrackingSensorRight +sensorRight) / 5);
 2ec:	96 01       	movw	r18, r12
 2ee:	2c 0f       	add	r18, r28
 2f0:	3d 1f       	adc	r19, r29
 2f2:	e7 01       	movw	r28, r14
 2f4:	c2 0f       	add	r28, r18
 2f6:	d3 1f       	adc	r29, r19
 2f8:	c0 0f       	add	r28, r16
 2fa:	d1 1f       	adc	r29, r17
 2fc:	8c 0f       	add	r24, r28
 2fe:	9d 1f       	adc	r25, r29
 300:	65 e0       	ldi	r22, 0x05	; 5
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	0e 94 c9 01 	call	0x392	; 0x392 <__divmodhi4>
 308:	8b 01       	movw	r16, r22
			
			distance = measure_distance();
 30a:	0e 94 22 01 	call	0x244	; 0x244 <measure_distance>
 30e:	ec 01       	movw	r28, r24
			transferMessage(averageValue);
 310:	c8 01       	movw	r24, r16
 312:	0e 94 a2 00 	call	0x144	; 0x144 <transferMessage>
			custom_delay_ms(10);
 316:	8a e0       	ldi	r24, 0x0A	; 10
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	0e 94 76 00 	call	0xec	; 0xec <custom_delay_ms>
			if(distance < 60){
 31e:	ec 97       	sbiw	r28, 0x3c	; 60
 320:	64 f4       	brge	.+24     	; 0x33a <main+0xba>
				setMotorBSpeed(0);
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
				setMotorASpeed(0);
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
				distance = measure_distance();
 32e:	0e 94 22 01 	call	0x244	; 0x244 <measure_distance>
				custom_delay_ms(10);
 332:	8a e0       	ldi	r24, 0x0A	; 10
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	0e 94 76 00 	call	0xec	; 0xec <custom_delay_ms>
			}else{
				//move(averageValue);
		}
			var = receiveMessage();
 33a:	0e 94 dd 00 	call	0x1ba	; 0x1ba <receiveMessage>
			if(var == 'B' || var == 'C'){receivedMessage = var;}
 33e:	9e eb       	ldi	r25, 0xBE	; 190
 340:	98 0f       	add	r25, r24
 342:	92 30       	cpi	r25, 0x02	; 2
 344:	10 f4       	brcc	.+4      	; 0x34a <main+0xca>
 346:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
  while (1) 
    {
		var = receiveMessage();
		if(var == 'A' || var == 'B' || var == 'C'){receivedMessage = var;}
		
		while(receivedMessage == 'A'){
 34a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 34e:	81 34       	cpi	r24, 0x41	; 65
 350:	09 f4       	brne	.+2      	; 0x354 <main+0xd4>
 352:	b9 cf       	rjmp	.-142    	; 0x2c6 <main+0x46>
				//move(averageValue);
		}
			var = receiveMessage();
			if(var == 'B' || var == 'C'){receivedMessage = var;}
		}
		setMotorASpeed(0);
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
		setMotorBSpeed(0);
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
		if(receivedMessage == 'B'){
 360:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 364:	82 34       	cpi	r24, 0x42	; 66
 366:	81 f4       	brne	.+32     	; 0x388 <main+0x108>
			custom_delay_ms(5000);
 368:	88 e8       	ldi	r24, 0x88	; 136
 36a:	93 e1       	ldi	r25, 0x13	; 19
 36c:	0e 94 76 00 	call	0xec	; 0xec <custom_delay_ms>
			receivedMessage = 'A';
 370:	81 e4       	ldi	r24, 0x41	; 65
 372:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 376:	08 c0       	rjmp	.+16     	; 0x388 <main+0x108>
		}
		while(receivedMessage == 'C'){
			var = receiveMessage();
 378:	0e 94 dd 00 	call	0x1ba	; 0x1ba <receiveMessage>
			if(var == 'A' || var == 'B'){receivedMessage =var;}
 37c:	9f eb       	ldi	r25, 0xBF	; 191
 37e:	98 0f       	add	r25, r24
 380:	92 30       	cpi	r25, 0x02	; 2
 382:	10 f4       	brcc	.+4      	; 0x388 <main+0x108>
 384:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
		setMotorBSpeed(0);
		if(receivedMessage == 'B'){
			custom_delay_ms(5000);
			receivedMessage = 'A';
		}
		while(receivedMessage == 'C'){
 388:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 38c:	83 34       	cpi	r24, 0x43	; 67
 38e:	a1 f3       	breq	.-24     	; 0x378 <main+0xf8>
 390:	90 cf       	rjmp	.-224    	; 0x2b2 <main+0x32>

00000392 <__divmodhi4>:
 392:	97 fb       	bst	r25, 7
 394:	07 2e       	mov	r0, r23
 396:	16 f4       	brtc	.+4      	; 0x39c <__divmodhi4+0xa>
 398:	00 94       	com	r0
 39a:	07 d0       	rcall	.+14     	; 0x3aa <__divmodhi4_neg1>
 39c:	77 fd       	sbrc	r23, 7
 39e:	09 d0       	rcall	.+18     	; 0x3b2 <__divmodhi4_neg2>
 3a0:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__udivmodhi4>
 3a4:	07 fc       	sbrc	r0, 7
 3a6:	05 d0       	rcall	.+10     	; 0x3b2 <__divmodhi4_neg2>
 3a8:	3e f4       	brtc	.+14     	; 0x3b8 <__divmodhi4_exit>

000003aa <__divmodhi4_neg1>:
 3aa:	90 95       	com	r25
 3ac:	81 95       	neg	r24
 3ae:	9f 4f       	sbci	r25, 0xFF	; 255
 3b0:	08 95       	ret

000003b2 <__divmodhi4_neg2>:
 3b2:	70 95       	com	r23
 3b4:	61 95       	neg	r22
 3b6:	7f 4f       	sbci	r23, 0xFF	; 255

000003b8 <__divmodhi4_exit>:
 3b8:	08 95       	ret

000003ba <__udivmodhi4>:
 3ba:	aa 1b       	sub	r26, r26
 3bc:	bb 1b       	sub	r27, r27
 3be:	51 e1       	ldi	r21, 0x11	; 17
 3c0:	07 c0       	rjmp	.+14     	; 0x3d0 <__udivmodhi4_ep>

000003c2 <__udivmodhi4_loop>:
 3c2:	aa 1f       	adc	r26, r26
 3c4:	bb 1f       	adc	r27, r27
 3c6:	a6 17       	cp	r26, r22
 3c8:	b7 07       	cpc	r27, r23
 3ca:	10 f0       	brcs	.+4      	; 0x3d0 <__udivmodhi4_ep>
 3cc:	a6 1b       	sub	r26, r22
 3ce:	b7 0b       	sbc	r27, r23

000003d0 <__udivmodhi4_ep>:
 3d0:	88 1f       	adc	r24, r24
 3d2:	99 1f       	adc	r25, r25
 3d4:	5a 95       	dec	r21
 3d6:	a9 f7       	brne	.-22     	; 0x3c2 <__udivmodhi4_loop>
 3d8:	80 95       	com	r24
 3da:	90 95       	com	r25
 3dc:	bc 01       	movw	r22, r24
 3de:	cd 01       	movw	r24, r26
 3e0:	08 95       	ret

000003e2 <snprintf>:
 3e2:	ae e0       	ldi	r26, 0x0E	; 14
 3e4:	b0 e0       	ldi	r27, 0x00	; 0
 3e6:	e7 ef       	ldi	r30, 0xF7	; 247
 3e8:	f1 e0       	ldi	r31, 0x01	; 1
 3ea:	0c 94 c0 04 	jmp	0x980	; 0x980 <__prologue_saves__+0x1c>
 3ee:	0d 89       	ldd	r16, Y+21	; 0x15
 3f0:	1e 89       	ldd	r17, Y+22	; 0x16
 3f2:	8f 89       	ldd	r24, Y+23	; 0x17
 3f4:	98 8d       	ldd	r25, Y+24	; 0x18
 3f6:	26 e0       	ldi	r18, 0x06	; 6
 3f8:	2c 83       	std	Y+4, r18	; 0x04
 3fa:	1a 83       	std	Y+2, r17	; 0x02
 3fc:	09 83       	std	Y+1, r16	; 0x01
 3fe:	97 ff       	sbrs	r25, 7
 400:	02 c0       	rjmp	.+4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	90 e8       	ldi	r25, 0x80	; 128
 406:	01 97       	sbiw	r24, 0x01	; 1
 408:	9e 83       	std	Y+6, r25	; 0x06
 40a:	8d 83       	std	Y+5, r24	; 0x05
 40c:	ae 01       	movw	r20, r28
 40e:	45 5e       	subi	r20, 0xE5	; 229
 410:	5f 4f       	sbci	r21, 0xFF	; 255
 412:	69 8d       	ldd	r22, Y+25	; 0x19
 414:	7a 8d       	ldd	r23, Y+26	; 0x1a
 416:	ce 01       	movw	r24, r28
 418:	01 96       	adiw	r24, 0x01	; 1
 41a:	0e 94 21 02 	call	0x442	; 0x442 <vfprintf>
 41e:	4d 81       	ldd	r20, Y+5	; 0x05
 420:	5e 81       	ldd	r21, Y+6	; 0x06
 422:	57 fd       	sbrc	r21, 7
 424:	0a c0       	rjmp	.+20     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 426:	2f 81       	ldd	r18, Y+7	; 0x07
 428:	38 85       	ldd	r19, Y+8	; 0x08
 42a:	42 17       	cp	r20, r18
 42c:	53 07       	cpc	r21, r19
 42e:	0c f4       	brge	.+2      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 430:	9a 01       	movw	r18, r20
 432:	f8 01       	movw	r30, r16
 434:	e2 0f       	add	r30, r18
 436:	f3 1f       	adc	r31, r19
 438:	10 82       	st	Z, r1
 43a:	2e 96       	adiw	r28, 0x0e	; 14
 43c:	e4 e0       	ldi	r30, 0x04	; 4
 43e:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__epilogue_restores__+0x1c>

00000442 <vfprintf>:
 442:	ab e0       	ldi	r26, 0x0B	; 11
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	e7 e2       	ldi	r30, 0x27	; 39
 448:	f2 e0       	ldi	r31, 0x02	; 2
 44a:	0c 94 b2 04 	jmp	0x964	; 0x964 <__prologue_saves__>
 44e:	6c 01       	movw	r12, r24
 450:	7b 01       	movw	r14, r22
 452:	8a 01       	movw	r16, r20
 454:	fc 01       	movw	r30, r24
 456:	17 82       	std	Z+7, r1	; 0x07
 458:	16 82       	std	Z+6, r1	; 0x06
 45a:	83 81       	ldd	r24, Z+3	; 0x03
 45c:	81 ff       	sbrs	r24, 1
 45e:	cc c1       	rjmp	.+920    	; 0x7f8 <vfprintf+0x3b6>
 460:	ce 01       	movw	r24, r28
 462:	01 96       	adiw	r24, 0x01	; 1
 464:	3c 01       	movw	r6, r24
 466:	f6 01       	movw	r30, r12
 468:	93 81       	ldd	r25, Z+3	; 0x03
 46a:	f7 01       	movw	r30, r14
 46c:	93 fd       	sbrc	r25, 3
 46e:	85 91       	lpm	r24, Z+
 470:	93 ff       	sbrs	r25, 3
 472:	81 91       	ld	r24, Z+
 474:	7f 01       	movw	r14, r30
 476:	88 23       	and	r24, r24
 478:	09 f4       	brne	.+2      	; 0x47c <vfprintf+0x3a>
 47a:	ba c1       	rjmp	.+884    	; 0x7f0 <vfprintf+0x3ae>
 47c:	85 32       	cpi	r24, 0x25	; 37
 47e:	39 f4       	brne	.+14     	; 0x48e <vfprintf+0x4c>
 480:	93 fd       	sbrc	r25, 3
 482:	85 91       	lpm	r24, Z+
 484:	93 ff       	sbrs	r25, 3
 486:	81 91       	ld	r24, Z+
 488:	7f 01       	movw	r14, r30
 48a:	85 32       	cpi	r24, 0x25	; 37
 48c:	29 f4       	brne	.+10     	; 0x498 <vfprintf+0x56>
 48e:	b6 01       	movw	r22, r12
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 496:	e7 cf       	rjmp	.-50     	; 0x466 <vfprintf+0x24>
 498:	91 2c       	mov	r9, r1
 49a:	21 2c       	mov	r2, r1
 49c:	31 2c       	mov	r3, r1
 49e:	ff e1       	ldi	r31, 0x1F	; 31
 4a0:	f3 15       	cp	r31, r3
 4a2:	d8 f0       	brcs	.+54     	; 0x4da <vfprintf+0x98>
 4a4:	8b 32       	cpi	r24, 0x2B	; 43
 4a6:	79 f0       	breq	.+30     	; 0x4c6 <vfprintf+0x84>
 4a8:	38 f4       	brcc	.+14     	; 0x4b8 <vfprintf+0x76>
 4aa:	80 32       	cpi	r24, 0x20	; 32
 4ac:	79 f0       	breq	.+30     	; 0x4cc <vfprintf+0x8a>
 4ae:	83 32       	cpi	r24, 0x23	; 35
 4b0:	a1 f4       	brne	.+40     	; 0x4da <vfprintf+0x98>
 4b2:	23 2d       	mov	r18, r3
 4b4:	20 61       	ori	r18, 0x10	; 16
 4b6:	1d c0       	rjmp	.+58     	; 0x4f2 <vfprintf+0xb0>
 4b8:	8d 32       	cpi	r24, 0x2D	; 45
 4ba:	61 f0       	breq	.+24     	; 0x4d4 <vfprintf+0x92>
 4bc:	80 33       	cpi	r24, 0x30	; 48
 4be:	69 f4       	brne	.+26     	; 0x4da <vfprintf+0x98>
 4c0:	23 2d       	mov	r18, r3
 4c2:	21 60       	ori	r18, 0x01	; 1
 4c4:	16 c0       	rjmp	.+44     	; 0x4f2 <vfprintf+0xb0>
 4c6:	83 2d       	mov	r24, r3
 4c8:	82 60       	ori	r24, 0x02	; 2
 4ca:	38 2e       	mov	r3, r24
 4cc:	e3 2d       	mov	r30, r3
 4ce:	e4 60       	ori	r30, 0x04	; 4
 4d0:	3e 2e       	mov	r3, r30
 4d2:	2a c0       	rjmp	.+84     	; 0x528 <vfprintf+0xe6>
 4d4:	f3 2d       	mov	r31, r3
 4d6:	f8 60       	ori	r31, 0x08	; 8
 4d8:	1d c0       	rjmp	.+58     	; 0x514 <vfprintf+0xd2>
 4da:	37 fc       	sbrc	r3, 7
 4dc:	2d c0       	rjmp	.+90     	; 0x538 <vfprintf+0xf6>
 4de:	20 ed       	ldi	r18, 0xD0	; 208
 4e0:	28 0f       	add	r18, r24
 4e2:	2a 30       	cpi	r18, 0x0A	; 10
 4e4:	40 f0       	brcs	.+16     	; 0x4f6 <vfprintf+0xb4>
 4e6:	8e 32       	cpi	r24, 0x2E	; 46
 4e8:	b9 f4       	brne	.+46     	; 0x518 <vfprintf+0xd6>
 4ea:	36 fc       	sbrc	r3, 6
 4ec:	81 c1       	rjmp	.+770    	; 0x7f0 <vfprintf+0x3ae>
 4ee:	23 2d       	mov	r18, r3
 4f0:	20 64       	ori	r18, 0x40	; 64
 4f2:	32 2e       	mov	r3, r18
 4f4:	19 c0       	rjmp	.+50     	; 0x528 <vfprintf+0xe6>
 4f6:	36 fe       	sbrs	r3, 6
 4f8:	06 c0       	rjmp	.+12     	; 0x506 <vfprintf+0xc4>
 4fa:	8a e0       	ldi	r24, 0x0A	; 10
 4fc:	98 9e       	mul	r9, r24
 4fe:	20 0d       	add	r18, r0
 500:	11 24       	eor	r1, r1
 502:	92 2e       	mov	r9, r18
 504:	11 c0       	rjmp	.+34     	; 0x528 <vfprintf+0xe6>
 506:	ea e0       	ldi	r30, 0x0A	; 10
 508:	2e 9e       	mul	r2, r30
 50a:	20 0d       	add	r18, r0
 50c:	11 24       	eor	r1, r1
 50e:	22 2e       	mov	r2, r18
 510:	f3 2d       	mov	r31, r3
 512:	f0 62       	ori	r31, 0x20	; 32
 514:	3f 2e       	mov	r3, r31
 516:	08 c0       	rjmp	.+16     	; 0x528 <vfprintf+0xe6>
 518:	8c 36       	cpi	r24, 0x6C	; 108
 51a:	21 f4       	brne	.+8      	; 0x524 <vfprintf+0xe2>
 51c:	83 2d       	mov	r24, r3
 51e:	80 68       	ori	r24, 0x80	; 128
 520:	38 2e       	mov	r3, r24
 522:	02 c0       	rjmp	.+4      	; 0x528 <vfprintf+0xe6>
 524:	88 36       	cpi	r24, 0x68	; 104
 526:	41 f4       	brne	.+16     	; 0x538 <vfprintf+0xf6>
 528:	f7 01       	movw	r30, r14
 52a:	93 fd       	sbrc	r25, 3
 52c:	85 91       	lpm	r24, Z+
 52e:	93 ff       	sbrs	r25, 3
 530:	81 91       	ld	r24, Z+
 532:	7f 01       	movw	r14, r30
 534:	81 11       	cpse	r24, r1
 536:	b3 cf       	rjmp	.-154    	; 0x49e <vfprintf+0x5c>
 538:	98 2f       	mov	r25, r24
 53a:	9f 7d       	andi	r25, 0xDF	; 223
 53c:	95 54       	subi	r25, 0x45	; 69
 53e:	93 30       	cpi	r25, 0x03	; 3
 540:	28 f4       	brcc	.+10     	; 0x54c <vfprintf+0x10a>
 542:	0c 5f       	subi	r16, 0xFC	; 252
 544:	1f 4f       	sbci	r17, 0xFF	; 255
 546:	9f e3       	ldi	r25, 0x3F	; 63
 548:	99 83       	std	Y+1, r25	; 0x01
 54a:	0d c0       	rjmp	.+26     	; 0x566 <vfprintf+0x124>
 54c:	83 36       	cpi	r24, 0x63	; 99
 54e:	31 f0       	breq	.+12     	; 0x55c <vfprintf+0x11a>
 550:	83 37       	cpi	r24, 0x73	; 115
 552:	71 f0       	breq	.+28     	; 0x570 <vfprintf+0x12e>
 554:	83 35       	cpi	r24, 0x53	; 83
 556:	09 f0       	breq	.+2      	; 0x55a <vfprintf+0x118>
 558:	59 c0       	rjmp	.+178    	; 0x60c <vfprintf+0x1ca>
 55a:	21 c0       	rjmp	.+66     	; 0x59e <vfprintf+0x15c>
 55c:	f8 01       	movw	r30, r16
 55e:	80 81       	ld	r24, Z
 560:	89 83       	std	Y+1, r24	; 0x01
 562:	0e 5f       	subi	r16, 0xFE	; 254
 564:	1f 4f       	sbci	r17, 0xFF	; 255
 566:	88 24       	eor	r8, r8
 568:	83 94       	inc	r8
 56a:	91 2c       	mov	r9, r1
 56c:	53 01       	movw	r10, r6
 56e:	13 c0       	rjmp	.+38     	; 0x596 <vfprintf+0x154>
 570:	28 01       	movw	r4, r16
 572:	f2 e0       	ldi	r31, 0x02	; 2
 574:	4f 0e       	add	r4, r31
 576:	51 1c       	adc	r5, r1
 578:	f8 01       	movw	r30, r16
 57a:	a0 80       	ld	r10, Z
 57c:	b1 80       	ldd	r11, Z+1	; 0x01
 57e:	36 fe       	sbrs	r3, 6
 580:	03 c0       	rjmp	.+6      	; 0x588 <vfprintf+0x146>
 582:	69 2d       	mov	r22, r9
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	02 c0       	rjmp	.+4      	; 0x58c <vfprintf+0x14a>
 588:	6f ef       	ldi	r22, 0xFF	; 255
 58a:	7f ef       	ldi	r23, 0xFF	; 255
 58c:	c5 01       	movw	r24, r10
 58e:	0e 94 0d 04 	call	0x81a	; 0x81a <strnlen>
 592:	4c 01       	movw	r8, r24
 594:	82 01       	movw	r16, r4
 596:	f3 2d       	mov	r31, r3
 598:	ff 77       	andi	r31, 0x7F	; 127
 59a:	3f 2e       	mov	r3, r31
 59c:	16 c0       	rjmp	.+44     	; 0x5ca <vfprintf+0x188>
 59e:	28 01       	movw	r4, r16
 5a0:	22 e0       	ldi	r18, 0x02	; 2
 5a2:	42 0e       	add	r4, r18
 5a4:	51 1c       	adc	r5, r1
 5a6:	f8 01       	movw	r30, r16
 5a8:	a0 80       	ld	r10, Z
 5aa:	b1 80       	ldd	r11, Z+1	; 0x01
 5ac:	36 fe       	sbrs	r3, 6
 5ae:	03 c0       	rjmp	.+6      	; 0x5b6 <vfprintf+0x174>
 5b0:	69 2d       	mov	r22, r9
 5b2:	70 e0       	ldi	r23, 0x00	; 0
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <vfprintf+0x178>
 5b6:	6f ef       	ldi	r22, 0xFF	; 255
 5b8:	7f ef       	ldi	r23, 0xFF	; 255
 5ba:	c5 01       	movw	r24, r10
 5bc:	0e 94 02 04 	call	0x804	; 0x804 <strnlen_P>
 5c0:	4c 01       	movw	r8, r24
 5c2:	f3 2d       	mov	r31, r3
 5c4:	f0 68       	ori	r31, 0x80	; 128
 5c6:	3f 2e       	mov	r3, r31
 5c8:	82 01       	movw	r16, r4
 5ca:	33 fc       	sbrc	r3, 3
 5cc:	1b c0       	rjmp	.+54     	; 0x604 <vfprintf+0x1c2>
 5ce:	82 2d       	mov	r24, r2
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	88 16       	cp	r8, r24
 5d4:	99 06       	cpc	r9, r25
 5d6:	b0 f4       	brcc	.+44     	; 0x604 <vfprintf+0x1c2>
 5d8:	b6 01       	movw	r22, r12
 5da:	80 e2       	ldi	r24, 0x20	; 32
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 5e2:	2a 94       	dec	r2
 5e4:	f4 cf       	rjmp	.-24     	; 0x5ce <vfprintf+0x18c>
 5e6:	f5 01       	movw	r30, r10
 5e8:	37 fc       	sbrc	r3, 7
 5ea:	85 91       	lpm	r24, Z+
 5ec:	37 fe       	sbrs	r3, 7
 5ee:	81 91       	ld	r24, Z+
 5f0:	5f 01       	movw	r10, r30
 5f2:	b6 01       	movw	r22, r12
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 5fa:	21 10       	cpse	r2, r1
 5fc:	2a 94       	dec	r2
 5fe:	21 e0       	ldi	r18, 0x01	; 1
 600:	82 1a       	sub	r8, r18
 602:	91 08       	sbc	r9, r1
 604:	81 14       	cp	r8, r1
 606:	91 04       	cpc	r9, r1
 608:	71 f7       	brne	.-36     	; 0x5e6 <vfprintf+0x1a4>
 60a:	e8 c0       	rjmp	.+464    	; 0x7dc <vfprintf+0x39a>
 60c:	84 36       	cpi	r24, 0x64	; 100
 60e:	11 f0       	breq	.+4      	; 0x614 <vfprintf+0x1d2>
 610:	89 36       	cpi	r24, 0x69	; 105
 612:	41 f5       	brne	.+80     	; 0x664 <vfprintf+0x222>
 614:	f8 01       	movw	r30, r16
 616:	37 fe       	sbrs	r3, 7
 618:	07 c0       	rjmp	.+14     	; 0x628 <vfprintf+0x1e6>
 61a:	60 81       	ld	r22, Z
 61c:	71 81       	ldd	r23, Z+1	; 0x01
 61e:	82 81       	ldd	r24, Z+2	; 0x02
 620:	93 81       	ldd	r25, Z+3	; 0x03
 622:	0c 5f       	subi	r16, 0xFC	; 252
 624:	1f 4f       	sbci	r17, 0xFF	; 255
 626:	08 c0       	rjmp	.+16     	; 0x638 <vfprintf+0x1f6>
 628:	60 81       	ld	r22, Z
 62a:	71 81       	ldd	r23, Z+1	; 0x01
 62c:	07 2e       	mov	r0, r23
 62e:	00 0c       	add	r0, r0
 630:	88 0b       	sbc	r24, r24
 632:	99 0b       	sbc	r25, r25
 634:	0e 5f       	subi	r16, 0xFE	; 254
 636:	1f 4f       	sbci	r17, 0xFF	; 255
 638:	f3 2d       	mov	r31, r3
 63a:	ff 76       	andi	r31, 0x6F	; 111
 63c:	3f 2e       	mov	r3, r31
 63e:	97 ff       	sbrs	r25, 7
 640:	09 c0       	rjmp	.+18     	; 0x654 <vfprintf+0x212>
 642:	90 95       	com	r25
 644:	80 95       	com	r24
 646:	70 95       	com	r23
 648:	61 95       	neg	r22
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	f0 68       	ori	r31, 0x80	; 128
 652:	3f 2e       	mov	r3, r31
 654:	2a e0       	ldi	r18, 0x0A	; 10
 656:	30 e0       	ldi	r19, 0x00	; 0
 658:	a3 01       	movw	r20, r6
 65a:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__ultoa_invert>
 65e:	88 2e       	mov	r8, r24
 660:	86 18       	sub	r8, r6
 662:	45 c0       	rjmp	.+138    	; 0x6ee <vfprintf+0x2ac>
 664:	85 37       	cpi	r24, 0x75	; 117
 666:	31 f4       	brne	.+12     	; 0x674 <vfprintf+0x232>
 668:	23 2d       	mov	r18, r3
 66a:	2f 7e       	andi	r18, 0xEF	; 239
 66c:	b2 2e       	mov	r11, r18
 66e:	2a e0       	ldi	r18, 0x0A	; 10
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	25 c0       	rjmp	.+74     	; 0x6be <vfprintf+0x27c>
 674:	93 2d       	mov	r25, r3
 676:	99 7f       	andi	r25, 0xF9	; 249
 678:	b9 2e       	mov	r11, r25
 67a:	8f 36       	cpi	r24, 0x6F	; 111
 67c:	c1 f0       	breq	.+48     	; 0x6ae <vfprintf+0x26c>
 67e:	18 f4       	brcc	.+6      	; 0x686 <vfprintf+0x244>
 680:	88 35       	cpi	r24, 0x58	; 88
 682:	79 f0       	breq	.+30     	; 0x6a2 <vfprintf+0x260>
 684:	b5 c0       	rjmp	.+362    	; 0x7f0 <vfprintf+0x3ae>
 686:	80 37       	cpi	r24, 0x70	; 112
 688:	19 f0       	breq	.+6      	; 0x690 <vfprintf+0x24e>
 68a:	88 37       	cpi	r24, 0x78	; 120
 68c:	21 f0       	breq	.+8      	; 0x696 <vfprintf+0x254>
 68e:	b0 c0       	rjmp	.+352    	; 0x7f0 <vfprintf+0x3ae>
 690:	e9 2f       	mov	r30, r25
 692:	e0 61       	ori	r30, 0x10	; 16
 694:	be 2e       	mov	r11, r30
 696:	b4 fe       	sbrs	r11, 4
 698:	0d c0       	rjmp	.+26     	; 0x6b4 <vfprintf+0x272>
 69a:	fb 2d       	mov	r31, r11
 69c:	f4 60       	ori	r31, 0x04	; 4
 69e:	bf 2e       	mov	r11, r31
 6a0:	09 c0       	rjmp	.+18     	; 0x6b4 <vfprintf+0x272>
 6a2:	34 fe       	sbrs	r3, 4
 6a4:	0a c0       	rjmp	.+20     	; 0x6ba <vfprintf+0x278>
 6a6:	29 2f       	mov	r18, r25
 6a8:	26 60       	ori	r18, 0x06	; 6
 6aa:	b2 2e       	mov	r11, r18
 6ac:	06 c0       	rjmp	.+12     	; 0x6ba <vfprintf+0x278>
 6ae:	28 e0       	ldi	r18, 0x08	; 8
 6b0:	30 e0       	ldi	r19, 0x00	; 0
 6b2:	05 c0       	rjmp	.+10     	; 0x6be <vfprintf+0x27c>
 6b4:	20 e1       	ldi	r18, 0x10	; 16
 6b6:	30 e0       	ldi	r19, 0x00	; 0
 6b8:	02 c0       	rjmp	.+4      	; 0x6be <vfprintf+0x27c>
 6ba:	20 e1       	ldi	r18, 0x10	; 16
 6bc:	32 e0       	ldi	r19, 0x02	; 2
 6be:	f8 01       	movw	r30, r16
 6c0:	b7 fe       	sbrs	r11, 7
 6c2:	07 c0       	rjmp	.+14     	; 0x6d2 <vfprintf+0x290>
 6c4:	60 81       	ld	r22, Z
 6c6:	71 81       	ldd	r23, Z+1	; 0x01
 6c8:	82 81       	ldd	r24, Z+2	; 0x02
 6ca:	93 81       	ldd	r25, Z+3	; 0x03
 6cc:	0c 5f       	subi	r16, 0xFC	; 252
 6ce:	1f 4f       	sbci	r17, 0xFF	; 255
 6d0:	06 c0       	rjmp	.+12     	; 0x6de <vfprintf+0x29c>
 6d2:	60 81       	ld	r22, Z
 6d4:	71 81       	ldd	r23, Z+1	; 0x01
 6d6:	80 e0       	ldi	r24, 0x00	; 0
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	0e 5f       	subi	r16, 0xFE	; 254
 6dc:	1f 4f       	sbci	r17, 0xFF	; 255
 6de:	a3 01       	movw	r20, r6
 6e0:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__ultoa_invert>
 6e4:	88 2e       	mov	r8, r24
 6e6:	86 18       	sub	r8, r6
 6e8:	fb 2d       	mov	r31, r11
 6ea:	ff 77       	andi	r31, 0x7F	; 127
 6ec:	3f 2e       	mov	r3, r31
 6ee:	36 fe       	sbrs	r3, 6
 6f0:	0d c0       	rjmp	.+26     	; 0x70c <vfprintf+0x2ca>
 6f2:	23 2d       	mov	r18, r3
 6f4:	2e 7f       	andi	r18, 0xFE	; 254
 6f6:	a2 2e       	mov	r10, r18
 6f8:	89 14       	cp	r8, r9
 6fa:	58 f4       	brcc	.+22     	; 0x712 <vfprintf+0x2d0>
 6fc:	34 fe       	sbrs	r3, 4
 6fe:	0b c0       	rjmp	.+22     	; 0x716 <vfprintf+0x2d4>
 700:	32 fc       	sbrc	r3, 2
 702:	09 c0       	rjmp	.+18     	; 0x716 <vfprintf+0x2d4>
 704:	83 2d       	mov	r24, r3
 706:	8e 7e       	andi	r24, 0xEE	; 238
 708:	a8 2e       	mov	r10, r24
 70a:	05 c0       	rjmp	.+10     	; 0x716 <vfprintf+0x2d4>
 70c:	b8 2c       	mov	r11, r8
 70e:	a3 2c       	mov	r10, r3
 710:	03 c0       	rjmp	.+6      	; 0x718 <vfprintf+0x2d6>
 712:	b8 2c       	mov	r11, r8
 714:	01 c0       	rjmp	.+2      	; 0x718 <vfprintf+0x2d6>
 716:	b9 2c       	mov	r11, r9
 718:	a4 fe       	sbrs	r10, 4
 71a:	0f c0       	rjmp	.+30     	; 0x73a <vfprintf+0x2f8>
 71c:	fe 01       	movw	r30, r28
 71e:	e8 0d       	add	r30, r8
 720:	f1 1d       	adc	r31, r1
 722:	80 81       	ld	r24, Z
 724:	80 33       	cpi	r24, 0x30	; 48
 726:	21 f4       	brne	.+8      	; 0x730 <vfprintf+0x2ee>
 728:	9a 2d       	mov	r25, r10
 72a:	99 7e       	andi	r25, 0xE9	; 233
 72c:	a9 2e       	mov	r10, r25
 72e:	09 c0       	rjmp	.+18     	; 0x742 <vfprintf+0x300>
 730:	a2 fe       	sbrs	r10, 2
 732:	06 c0       	rjmp	.+12     	; 0x740 <vfprintf+0x2fe>
 734:	b3 94       	inc	r11
 736:	b3 94       	inc	r11
 738:	04 c0       	rjmp	.+8      	; 0x742 <vfprintf+0x300>
 73a:	8a 2d       	mov	r24, r10
 73c:	86 78       	andi	r24, 0x86	; 134
 73e:	09 f0       	breq	.+2      	; 0x742 <vfprintf+0x300>
 740:	b3 94       	inc	r11
 742:	a3 fc       	sbrc	r10, 3
 744:	11 c0       	rjmp	.+34     	; 0x768 <vfprintf+0x326>
 746:	a0 fe       	sbrs	r10, 0
 748:	06 c0       	rjmp	.+12     	; 0x756 <vfprintf+0x314>
 74a:	b2 14       	cp	r11, r2
 74c:	88 f4       	brcc	.+34     	; 0x770 <vfprintf+0x32e>
 74e:	28 0c       	add	r2, r8
 750:	92 2c       	mov	r9, r2
 752:	9b 18       	sub	r9, r11
 754:	0e c0       	rjmp	.+28     	; 0x772 <vfprintf+0x330>
 756:	b2 14       	cp	r11, r2
 758:	60 f4       	brcc	.+24     	; 0x772 <vfprintf+0x330>
 75a:	b6 01       	movw	r22, r12
 75c:	80 e2       	ldi	r24, 0x20	; 32
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 764:	b3 94       	inc	r11
 766:	f7 cf       	rjmp	.-18     	; 0x756 <vfprintf+0x314>
 768:	b2 14       	cp	r11, r2
 76a:	18 f4       	brcc	.+6      	; 0x772 <vfprintf+0x330>
 76c:	2b 18       	sub	r2, r11
 76e:	02 c0       	rjmp	.+4      	; 0x774 <vfprintf+0x332>
 770:	98 2c       	mov	r9, r8
 772:	21 2c       	mov	r2, r1
 774:	a4 fe       	sbrs	r10, 4
 776:	10 c0       	rjmp	.+32     	; 0x798 <vfprintf+0x356>
 778:	b6 01       	movw	r22, r12
 77a:	80 e3       	ldi	r24, 0x30	; 48
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 782:	a2 fe       	sbrs	r10, 2
 784:	17 c0       	rjmp	.+46     	; 0x7b4 <vfprintf+0x372>
 786:	a1 fc       	sbrc	r10, 1
 788:	03 c0       	rjmp	.+6      	; 0x790 <vfprintf+0x34e>
 78a:	88 e7       	ldi	r24, 0x78	; 120
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	02 c0       	rjmp	.+4      	; 0x794 <vfprintf+0x352>
 790:	88 e5       	ldi	r24, 0x58	; 88
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	b6 01       	movw	r22, r12
 796:	0c c0       	rjmp	.+24     	; 0x7b0 <vfprintf+0x36e>
 798:	8a 2d       	mov	r24, r10
 79a:	86 78       	andi	r24, 0x86	; 134
 79c:	59 f0       	breq	.+22     	; 0x7b4 <vfprintf+0x372>
 79e:	a1 fe       	sbrs	r10, 1
 7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <vfprintf+0x364>
 7a2:	8b e2       	ldi	r24, 0x2B	; 43
 7a4:	01 c0       	rjmp	.+2      	; 0x7a8 <vfprintf+0x366>
 7a6:	80 e2       	ldi	r24, 0x20	; 32
 7a8:	a7 fc       	sbrc	r10, 7
 7aa:	8d e2       	ldi	r24, 0x2D	; 45
 7ac:	b6 01       	movw	r22, r12
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 7b4:	89 14       	cp	r8, r9
 7b6:	38 f4       	brcc	.+14     	; 0x7c6 <vfprintf+0x384>
 7b8:	b6 01       	movw	r22, r12
 7ba:	80 e3       	ldi	r24, 0x30	; 48
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 7c2:	9a 94       	dec	r9
 7c4:	f7 cf       	rjmp	.-18     	; 0x7b4 <vfprintf+0x372>
 7c6:	8a 94       	dec	r8
 7c8:	f3 01       	movw	r30, r6
 7ca:	e8 0d       	add	r30, r8
 7cc:	f1 1d       	adc	r31, r1
 7ce:	80 81       	ld	r24, Z
 7d0:	b6 01       	movw	r22, r12
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 7d8:	81 10       	cpse	r8, r1
 7da:	f5 cf       	rjmp	.-22     	; 0x7c6 <vfprintf+0x384>
 7dc:	22 20       	and	r2, r2
 7de:	09 f4       	brne	.+2      	; 0x7e2 <vfprintf+0x3a0>
 7e0:	42 ce       	rjmp	.-892    	; 0x466 <vfprintf+0x24>
 7e2:	b6 01       	movw	r22, r12
 7e4:	80 e2       	ldi	r24, 0x20	; 32
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	0e 94 18 04 	call	0x830	; 0x830 <fputc>
 7ec:	2a 94       	dec	r2
 7ee:	f6 cf       	rjmp	.-20     	; 0x7dc <vfprintf+0x39a>
 7f0:	f6 01       	movw	r30, r12
 7f2:	86 81       	ldd	r24, Z+6	; 0x06
 7f4:	97 81       	ldd	r25, Z+7	; 0x07
 7f6:	02 c0       	rjmp	.+4      	; 0x7fc <vfprintf+0x3ba>
 7f8:	8f ef       	ldi	r24, 0xFF	; 255
 7fa:	9f ef       	ldi	r25, 0xFF	; 255
 7fc:	2b 96       	adiw	r28, 0x0b	; 11
 7fe:	e2 e1       	ldi	r30, 0x12	; 18
 800:	0c 94 ce 04 	jmp	0x99c	; 0x99c <__epilogue_restores__>

00000804 <strnlen_P>:
 804:	fc 01       	movw	r30, r24
 806:	05 90       	lpm	r0, Z+
 808:	61 50       	subi	r22, 0x01	; 1
 80a:	70 40       	sbci	r23, 0x00	; 0
 80c:	01 10       	cpse	r0, r1
 80e:	d8 f7       	brcc	.-10     	; 0x806 <strnlen_P+0x2>
 810:	80 95       	com	r24
 812:	90 95       	com	r25
 814:	8e 0f       	add	r24, r30
 816:	9f 1f       	adc	r25, r31
 818:	08 95       	ret

0000081a <strnlen>:
 81a:	fc 01       	movw	r30, r24
 81c:	61 50       	subi	r22, 0x01	; 1
 81e:	70 40       	sbci	r23, 0x00	; 0
 820:	01 90       	ld	r0, Z+
 822:	01 10       	cpse	r0, r1
 824:	d8 f7       	brcc	.-10     	; 0x81c <strnlen+0x2>
 826:	80 95       	com	r24
 828:	90 95       	com	r25
 82a:	8e 0f       	add	r24, r30
 82c:	9f 1f       	adc	r25, r31
 82e:	08 95       	ret

00000830 <fputc>:
 830:	0f 93       	push	r16
 832:	1f 93       	push	r17
 834:	cf 93       	push	r28
 836:	df 93       	push	r29
 838:	fb 01       	movw	r30, r22
 83a:	23 81       	ldd	r18, Z+3	; 0x03
 83c:	21 fd       	sbrc	r18, 1
 83e:	03 c0       	rjmp	.+6      	; 0x846 <fputc+0x16>
 840:	8f ef       	ldi	r24, 0xFF	; 255
 842:	9f ef       	ldi	r25, 0xFF	; 255
 844:	2c c0       	rjmp	.+88     	; 0x89e <fputc+0x6e>
 846:	22 ff       	sbrs	r18, 2
 848:	16 c0       	rjmp	.+44     	; 0x876 <fputc+0x46>
 84a:	46 81       	ldd	r20, Z+6	; 0x06
 84c:	57 81       	ldd	r21, Z+7	; 0x07
 84e:	24 81       	ldd	r18, Z+4	; 0x04
 850:	35 81       	ldd	r19, Z+5	; 0x05
 852:	42 17       	cp	r20, r18
 854:	53 07       	cpc	r21, r19
 856:	44 f4       	brge	.+16     	; 0x868 <fputc+0x38>
 858:	a0 81       	ld	r26, Z
 85a:	b1 81       	ldd	r27, Z+1	; 0x01
 85c:	9d 01       	movw	r18, r26
 85e:	2f 5f       	subi	r18, 0xFF	; 255
 860:	3f 4f       	sbci	r19, 0xFF	; 255
 862:	31 83       	std	Z+1, r19	; 0x01
 864:	20 83       	st	Z, r18
 866:	8c 93       	st	X, r24
 868:	26 81       	ldd	r18, Z+6	; 0x06
 86a:	37 81       	ldd	r19, Z+7	; 0x07
 86c:	2f 5f       	subi	r18, 0xFF	; 255
 86e:	3f 4f       	sbci	r19, 0xFF	; 255
 870:	37 83       	std	Z+7, r19	; 0x07
 872:	26 83       	std	Z+6, r18	; 0x06
 874:	14 c0       	rjmp	.+40     	; 0x89e <fputc+0x6e>
 876:	8b 01       	movw	r16, r22
 878:	ec 01       	movw	r28, r24
 87a:	fb 01       	movw	r30, r22
 87c:	00 84       	ldd	r0, Z+8	; 0x08
 87e:	f1 85       	ldd	r31, Z+9	; 0x09
 880:	e0 2d       	mov	r30, r0
 882:	09 95       	icall
 884:	89 2b       	or	r24, r25
 886:	e1 f6       	brne	.-72     	; 0x840 <fputc+0x10>
 888:	d8 01       	movw	r26, r16
 88a:	16 96       	adiw	r26, 0x06	; 6
 88c:	8d 91       	ld	r24, X+
 88e:	9c 91       	ld	r25, X
 890:	17 97       	sbiw	r26, 0x07	; 7
 892:	01 96       	adiw	r24, 0x01	; 1
 894:	17 96       	adiw	r26, 0x07	; 7
 896:	9c 93       	st	X, r25
 898:	8e 93       	st	-X, r24
 89a:	16 97       	sbiw	r26, 0x06	; 6
 89c:	ce 01       	movw	r24, r28
 89e:	df 91       	pop	r29
 8a0:	cf 91       	pop	r28
 8a2:	1f 91       	pop	r17
 8a4:	0f 91       	pop	r16
 8a6:	08 95       	ret

000008a8 <__ultoa_invert>:
 8a8:	fa 01       	movw	r30, r20
 8aa:	aa 27       	eor	r26, r26
 8ac:	28 30       	cpi	r18, 0x08	; 8
 8ae:	51 f1       	breq	.+84     	; 0x904 <__stack+0x5>
 8b0:	20 31       	cpi	r18, 0x10	; 16
 8b2:	81 f1       	breq	.+96     	; 0x914 <__stack+0x15>
 8b4:	e8 94       	clt
 8b6:	6f 93       	push	r22
 8b8:	6e 7f       	andi	r22, 0xFE	; 254
 8ba:	6e 5f       	subi	r22, 0xFE	; 254
 8bc:	7f 4f       	sbci	r23, 0xFF	; 255
 8be:	8f 4f       	sbci	r24, 0xFF	; 255
 8c0:	9f 4f       	sbci	r25, 0xFF	; 255
 8c2:	af 4f       	sbci	r26, 0xFF	; 255
 8c4:	b1 e0       	ldi	r27, 0x01	; 1
 8c6:	3e d0       	rcall	.+124    	; 0x944 <__stack+0x45>
 8c8:	b4 e0       	ldi	r27, 0x04	; 4
 8ca:	3c d0       	rcall	.+120    	; 0x944 <__stack+0x45>
 8cc:	67 0f       	add	r22, r23
 8ce:	78 1f       	adc	r23, r24
 8d0:	89 1f       	adc	r24, r25
 8d2:	9a 1f       	adc	r25, r26
 8d4:	a1 1d       	adc	r26, r1
 8d6:	68 0f       	add	r22, r24
 8d8:	79 1f       	adc	r23, r25
 8da:	8a 1f       	adc	r24, r26
 8dc:	91 1d       	adc	r25, r1
 8de:	a1 1d       	adc	r26, r1
 8e0:	6a 0f       	add	r22, r26
 8e2:	71 1d       	adc	r23, r1
 8e4:	81 1d       	adc	r24, r1
 8e6:	91 1d       	adc	r25, r1
 8e8:	a1 1d       	adc	r26, r1
 8ea:	20 d0       	rcall	.+64     	; 0x92c <__stack+0x2d>
 8ec:	09 f4       	brne	.+2      	; 0x8f0 <__ultoa_invert+0x48>
 8ee:	68 94       	set
 8f0:	3f 91       	pop	r19
 8f2:	2a e0       	ldi	r18, 0x0A	; 10
 8f4:	26 9f       	mul	r18, r22
 8f6:	11 24       	eor	r1, r1
 8f8:	30 19       	sub	r19, r0
 8fa:	30 5d       	subi	r19, 0xD0	; 208
 8fc:	31 93       	st	Z+, r19
 8fe:	de f6       	brtc	.-74     	; 0x8b6 <__ultoa_invert+0xe>
 900:	cf 01       	movw	r24, r30
 902:	08 95       	ret
 904:	46 2f       	mov	r20, r22
 906:	47 70       	andi	r20, 0x07	; 7
 908:	40 5d       	subi	r20, 0xD0	; 208
 90a:	41 93       	st	Z+, r20
 90c:	b3 e0       	ldi	r27, 0x03	; 3
 90e:	0f d0       	rcall	.+30     	; 0x92e <__stack+0x2f>
 910:	c9 f7       	brne	.-14     	; 0x904 <__stack+0x5>
 912:	f6 cf       	rjmp	.-20     	; 0x900 <__stack+0x1>
 914:	46 2f       	mov	r20, r22
 916:	4f 70       	andi	r20, 0x0F	; 15
 918:	40 5d       	subi	r20, 0xD0	; 208
 91a:	4a 33       	cpi	r20, 0x3A	; 58
 91c:	18 f0       	brcs	.+6      	; 0x924 <__stack+0x25>
 91e:	49 5d       	subi	r20, 0xD9	; 217
 920:	31 fd       	sbrc	r19, 1
 922:	40 52       	subi	r20, 0x20	; 32
 924:	41 93       	st	Z+, r20
 926:	02 d0       	rcall	.+4      	; 0x92c <__stack+0x2d>
 928:	a9 f7       	brne	.-22     	; 0x914 <__stack+0x15>
 92a:	ea cf       	rjmp	.-44     	; 0x900 <__stack+0x1>
 92c:	b4 e0       	ldi	r27, 0x04	; 4
 92e:	a6 95       	lsr	r26
 930:	97 95       	ror	r25
 932:	87 95       	ror	r24
 934:	77 95       	ror	r23
 936:	67 95       	ror	r22
 938:	ba 95       	dec	r27
 93a:	c9 f7       	brne	.-14     	; 0x92e <__stack+0x2f>
 93c:	00 97       	sbiw	r24, 0x00	; 0
 93e:	61 05       	cpc	r22, r1
 940:	71 05       	cpc	r23, r1
 942:	08 95       	ret
 944:	9b 01       	movw	r18, r22
 946:	ac 01       	movw	r20, r24
 948:	0a 2e       	mov	r0, r26
 94a:	06 94       	lsr	r0
 94c:	57 95       	ror	r21
 94e:	47 95       	ror	r20
 950:	37 95       	ror	r19
 952:	27 95       	ror	r18
 954:	ba 95       	dec	r27
 956:	c9 f7       	brne	.-14     	; 0x94a <__stack+0x4b>
 958:	62 0f       	add	r22, r18
 95a:	73 1f       	adc	r23, r19
 95c:	84 1f       	adc	r24, r20
 95e:	95 1f       	adc	r25, r21
 960:	a0 1d       	adc	r26, r0
 962:	08 95       	ret

00000964 <__prologue_saves__>:
 964:	2f 92       	push	r2
 966:	3f 92       	push	r3
 968:	4f 92       	push	r4
 96a:	5f 92       	push	r5
 96c:	6f 92       	push	r6
 96e:	7f 92       	push	r7
 970:	8f 92       	push	r8
 972:	9f 92       	push	r9
 974:	af 92       	push	r10
 976:	bf 92       	push	r11
 978:	cf 92       	push	r12
 97a:	df 92       	push	r13
 97c:	ef 92       	push	r14
 97e:	ff 92       	push	r15
 980:	0f 93       	push	r16
 982:	1f 93       	push	r17
 984:	cf 93       	push	r28
 986:	df 93       	push	r29
 988:	cd b7       	in	r28, 0x3d	; 61
 98a:	de b7       	in	r29, 0x3e	; 62
 98c:	ca 1b       	sub	r28, r26
 98e:	db 0b       	sbc	r29, r27
 990:	0f b6       	in	r0, 0x3f	; 63
 992:	f8 94       	cli
 994:	de bf       	out	0x3e, r29	; 62
 996:	0f be       	out	0x3f, r0	; 63
 998:	cd bf       	out	0x3d, r28	; 61
 99a:	09 94       	ijmp

0000099c <__epilogue_restores__>:
 99c:	2a 88       	ldd	r2, Y+18	; 0x12
 99e:	39 88       	ldd	r3, Y+17	; 0x11
 9a0:	48 88       	ldd	r4, Y+16	; 0x10
 9a2:	5f 84       	ldd	r5, Y+15	; 0x0f
 9a4:	6e 84       	ldd	r6, Y+14	; 0x0e
 9a6:	7d 84       	ldd	r7, Y+13	; 0x0d
 9a8:	8c 84       	ldd	r8, Y+12	; 0x0c
 9aa:	9b 84       	ldd	r9, Y+11	; 0x0b
 9ac:	aa 84       	ldd	r10, Y+10	; 0x0a
 9ae:	b9 84       	ldd	r11, Y+9	; 0x09
 9b0:	c8 84       	ldd	r12, Y+8	; 0x08
 9b2:	df 80       	ldd	r13, Y+7	; 0x07
 9b4:	ee 80       	ldd	r14, Y+6	; 0x06
 9b6:	fd 80       	ldd	r15, Y+5	; 0x05
 9b8:	0c 81       	ldd	r16, Y+4	; 0x04
 9ba:	1b 81       	ldd	r17, Y+3	; 0x03
 9bc:	aa 81       	ldd	r26, Y+2	; 0x02
 9be:	b9 81       	ldd	r27, Y+1	; 0x01
 9c0:	ce 0f       	add	r28, r30
 9c2:	d1 1d       	adc	r29, r1
 9c4:	0f b6       	in	r0, 0x3f	; 63
 9c6:	f8 94       	cli
 9c8:	de bf       	out	0x3e, r29	; 62
 9ca:	0f be       	out	0x3f, r0	; 63
 9cc:	cd bf       	out	0x3d, r28	; 61
 9ce:	ed 01       	movw	r28, r26
 9d0:	08 95       	ret

000009d2 <_exit>:
 9d2:	f8 94       	cli

000009d4 <__stop_program>:
 9d4:	ff cf       	rjmp	.-2      	; 0x9d4 <__stop_program>
