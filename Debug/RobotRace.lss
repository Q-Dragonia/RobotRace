
RobotRace.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000e0c  00000ea0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000068  00800112  00800112  00000eb2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000eb2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d93  00000000  00000000  00000fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000081b  00000000  00000000  00001d7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067d  00000000  00000000  00002596  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a4  00000000  00000000  00002c14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000589  00000000  00000000  00002db8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000065f  00000000  00000000  00003341  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  000039a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 8c 00 	jmp	0x118	; 0x118 <__vector_18>
  4c:	0c 94 aa 00 	jmp	0x154	; 0x154 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e0       	ldi	r30, 0x0C	; 12
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 37       	cpi	r26, 0x7A	; 122
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <main>
  9e:	0c 94 04 07 	jmp	0xe08	; 0xe08 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ADC>:
// Function to control direction of motor B
void setMotorBDirection(uint8_t direction) {
	if (direction == 1) { // Forward
		PORTD |= (1 << B_DIRECTION_PIN); // Set B_DIRECTION_PIN
		} else { // Reverse
		PORTD &= ~(1 << B_DIRECTION_PIN); // Clear B_DIRECTION_PIN
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 60       	ori	r24, 0x07	; 7
  b8:	80 83       	st	Z, r24
  ba:	80 81       	ld	r24, Z
  bc:	80 68       	ori	r24, 0x80	; 128
  be:	80 83       	st	Z, r24
  c0:	08 95       	ret

000000c2 <readADC>:
  c2:	ec e7       	ldi	r30, 0x7C	; 124
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	90 81       	ld	r25, Z
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	89 2b       	or	r24, r25
  ce:	80 83       	st	Z, r24
  d0:	ea e7       	ldi	r30, 0x7A	; 122
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	80 64       	ori	r24, 0x40	; 64
  d8:	80 83       	st	Z, r24
  da:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  de:	86 fd       	sbrc	r24, 6
  e0:	fc cf       	rjmp	.-8      	; 0xda <readADC+0x18>
  e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  e6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  ea:	08 95       	ret

000000ec <init_USART>:
  ec:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  f4:	e1 ec       	ldi	r30, 0xC1	; 193
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	88 e1       	ldi	r24, 0x18	; 24
  fa:	80 83       	st	Z, r24
  fc:	86 e0       	ldi	r24, 0x06	; 6
  fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 102:	80 81       	ld	r24, Z
 104:	80 68       	ori	r24, 0x80	; 128
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <transferMessage>:
 10a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 10e:	95 ff       	sbrs	r25, 5
 110:	fc cf       	rjmp	.-8      	; 0x10a <transferMessage>
 112:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 116:	08 95       	ret

00000118 <__vector_18>:
 118:	1f 92       	push	r1
 11a:	0f 92       	push	r0
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	0f 92       	push	r0
 120:	11 24       	eor	r1, r1
 122:	8f 93       	push	r24
 124:	9f 93       	push	r25
 126:	ef 93       	push	r30
 128:	ff 93       	push	r31
 12a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 12e:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <rxBufferIndex>
 132:	91 e0       	ldi	r25, 0x01	; 1
 134:	9e 0f       	add	r25, r30
 136:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <rxBufferIndex>
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	ec 5e       	subi	r30, 0xEC	; 236
 13e:	fe 4f       	sbci	r31, 0xFE	; 254
 140:	80 83       	st	Z, r24
 142:	ff 91       	pop	r31
 144:	ef 91       	pop	r30
 146:	9f 91       	pop	r25
 148:	8f 91       	pop	r24
 14a:	0f 90       	pop	r0
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	0f 90       	pop	r0
 150:	1f 90       	pop	r1
 152:	18 95       	reti

00000154 <__vector_19>:
 154:	1f 92       	push	r1
 156:	0f 92       	push	r0
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	0f 92       	push	r0
 15c:	11 24       	eor	r1, r1
 15e:	2f 93       	push	r18
 160:	3f 93       	push	r19
 162:	4f 93       	push	r20
 164:	8f 93       	push	r24
 166:	9f 93       	push	r25
 168:	ef 93       	push	r30
 16a:	ff 93       	push	r31
 16c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 170:	88 23       	and	r24, r24
 172:	f1 f0       	breq	.+60     	; 0x1b0 <__vector_19+0x5c>
 174:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <txBuffer>
 178:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 17c:	40 e0       	ldi	r20, 0x00	; 0
 17e:	09 c0       	rjmp	.+18     	; 0x192 <__vector_19+0x3e>
 180:	f9 01       	movw	r30, r18
 182:	e9 5e       	subi	r30, 0xE9	; 233
 184:	fe 4f       	sbci	r31, 0xFE	; 254
 186:	80 81       	ld	r24, Z
 188:	f9 01       	movw	r30, r18
 18a:	ea 5e       	subi	r30, 0xEA	; 234
 18c:	fe 4f       	sbci	r31, 0xFE	; 254
 18e:	80 83       	st	Z, r24
 190:	4f 5f       	subi	r20, 0xFF	; 255
 192:	24 2f       	mov	r18, r20
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	28 17       	cp	r18, r24
 1a0:	39 07       	cpc	r19, r25
 1a2:	74 f3       	brlt	.-36     	; 0x180 <__vector_19+0x2c>
 1a4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 1a8:	81 50       	subi	r24, 0x01	; 1
 1aa:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 1ae:	05 c0       	rjmp	.+10     	; 0x1ba <__vector_19+0x66>
 1b0:	e1 ec       	ldi	r30, 0xC1	; 193
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	8f 7d       	andi	r24, 0xDF	; 223
 1b8:	80 83       	st	Z, r24
 1ba:	ff 91       	pop	r31
 1bc:	ef 91       	pop	r30
 1be:	9f 91       	pop	r25
 1c0:	8f 91       	pop	r24
 1c2:	4f 91       	pop	r20
 1c4:	3f 91       	pop	r19
 1c6:	2f 91       	pop	r18
 1c8:	0f 90       	pop	r0
 1ca:	0f be       	out	0x3f, r0	; 63
 1cc:	0f 90       	pop	r0
 1ce:	1f 90       	pop	r1
 1d0:	18 95       	reti

000001d2 <init_driving_PWM>:
 1d2:	8a b1       	in	r24, 0x0a	; 10
 1d4:	80 66       	ori	r24, 0x60	; 96
 1d6:	8a b9       	out	0x0a, r24	; 10
 1d8:	84 b5       	in	r24, 0x24	; 36
 1da:	83 6a       	ori	r24, 0xA3	; 163
 1dc:	84 bd       	out	0x24, r24	; 36
 1de:	85 b5       	in	r24, 0x25	; 37
 1e0:	83 60       	ori	r24, 0x03	; 3
 1e2:	85 bd       	out	0x25, r24	; 37
 1e4:	08 95       	ret

000001e6 <init_servo_PWM>:

#include "definitions.h"

void init_servo_PWM() {
	// Set servo pin (OC1A) as output
	DDRB |= (1 << SERVO_PIN);
 1e6:	84 b1       	in	r24, 0x04	; 4
 1e8:	82 60       	ori	r24, 0x02	; 2
 1ea:	84 b9       	out	0x04, r24	; 4

	// Fast PWM, 8-bit, non-inverted mode
	TCCR1A = (1 << WGM11) | (1 << COM1A1);
 1ec:	82 e8       	ldi	r24, 0x82	; 130
 1ee:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>

	// Fast PWM, prescaler 64
	TCCR1B = (1 << WGM12) | (1 << WGM13) | (1 << CS11) | (1 << CS10);
 1f2:	8b e1       	ldi	r24, 0x1B	; 27
 1f4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>

	// Set TOP value for 50Hz (20ms) PWM signal
	ICR1 = 2499;  // (F_CPU / (64 * frequency)) - 1
 1f8:	83 ec       	ldi	r24, 0xC3	; 195
 1fa:	99 e0       	ldi	r25, 0x09	; 9
 1fc:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 200:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>

	// Set initial servo position to SERVO_MIN
	OCR1A = SERVO_MIN;
 204:	87 ee       	ldi	r24, 0xE7	; 231
 206:	93 e0       	ldi	r25, 0x03	; 3
 208:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 20c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 210:	08 95       	ret

00000212 <servo_set_angle>:
	OCR1AH = (i & 0xFF00)>>8;//set high bits
	OCR1AL = (i & 0x00FF);//set low bits
}

// Function to set servo angle
void servo_set_angle(uint16_t angle,uint16_t max_angle) {
 212:	cf 92       	push	r12
 214:	df 92       	push	r13
 216:	ef 92       	push	r14
 218:	ff 92       	push	r15
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	eb 01       	movw	r28, r22
	 // Calculate pulse width
	 float pulse_ms = ((float)angle / (float)max_angle) * (SERVO_MAX_PULSE - SERVO_MIN_PULSE) + SERVO_MIN_PULSE;
 220:	bc 01       	movw	r22, r24
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 11 03 	call	0x622	; 0x622 <__floatunsisf>
 22a:	6b 01       	movw	r12, r22
 22c:	7c 01       	movw	r14, r24
 22e:	be 01       	movw	r22, r28
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 11 03 	call	0x622	; 0x622 <__floatunsisf>
 238:	9b 01       	movw	r18, r22
 23a:	ac 01       	movw	r20, r24
 23c:	c7 01       	movw	r24, r14
 23e:	b6 01       	movw	r22, r12
 240:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__divsf3>
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	4a ef       	ldi	r20, 0xFA	; 250
 24a:	54 e4       	ldi	r21, 0x44	; 68
 24c:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 250:	20 e0       	ldi	r18, 0x00	; 0
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	4a ef       	ldi	r20, 0xFA	; 250
 256:	53 e4       	ldi	r21, 0x43	; 67
 258:	0e 94 04 02 	call	0x408	; 0x408 <__addsf3>
	 uint16_t compare_value = (uint16_t)(pulse_ms / 1000.0 * F_CPU / 64);
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	4a e7       	ldi	r20, 0x7A	; 122
 262:	54 e4       	ldi	r21, 0x44	; 68
 264:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__divsf3>
 268:	20 e0       	ldi	r18, 0x00	; 0
 26a:	34 e2       	ldi	r19, 0x24	; 36
 26c:	44 e7       	ldi	r20, 0x74	; 116
 26e:	5b e4       	ldi	r21, 0x4B	; 75
 270:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	40 e8       	ldi	r20, 0x80	; 128
 27a:	5c e3       	ldi	r21, 0x3C	; 60
 27c:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 280:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__fixunssfsi>

	 // Limit the compare value to the range of SERVO_MIN to SERVO_MAX
	 if (compare_value < SERVO_MIN) {
 284:	67 3e       	cpi	r22, 0xE7	; 231
 286:	83 e0       	ldi	r24, 0x03	; 3
 288:	78 07       	cpc	r23, r24
 28a:	28 f0       	brcs	.+10     	; 0x296 <servo_set_angle+0x84>
		 compare_value = SERVO_MIN;
		 } else if (compare_value > SERVO_MAX) {
 28c:	68 38       	cpi	r22, 0x88	; 136
 28e:	83 e1       	ldi	r24, 0x13	; 19
 290:	78 07       	cpc	r23, r24
 292:	20 f4       	brcc	.+8      	; 0x29c <servo_set_angle+0x8a>
 294:	05 c0       	rjmp	.+10     	; 0x2a0 <servo_set_angle+0x8e>
	 float pulse_ms = ((float)angle / (float)max_angle) * (SERVO_MAX_PULSE - SERVO_MIN_PULSE) + SERVO_MIN_PULSE;
	 uint16_t compare_value = (uint16_t)(pulse_ms / 1000.0 * F_CPU / 64);

	 // Limit the compare value to the range of SERVO_MIN to SERVO_MAX
	 if (compare_value < SERVO_MIN) {
		 compare_value = SERVO_MIN;
 296:	67 ee       	ldi	r22, 0xE7	; 231
 298:	73 e0       	ldi	r23, 0x03	; 3
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <servo_set_angle+0x8e>
		 } else if (compare_value > SERVO_MAX) {
		 compare_value = SERVO_MAX;
 29c:	67 e8       	ldi	r22, 0x87	; 135
 29e:	73 e1       	ldi	r23, 0x13	; 19
	 }

	 // Update OCR1A with the calculated compare value
	 OCR1A = compare_value;
 2a0:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 2a4:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
}
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	ff 90       	pop	r15
 2ae:	ef 90       	pop	r14
 2b0:	df 90       	pop	r13
 2b2:	cf 90       	pop	r12
 2b4:	08 95       	ret

000002b6 <main>:
#include "usart.h"
#include "movement.h"
#include "servo.h"

int main(void)
{
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	cd b7       	in	r28, 0x3d	; 61
 2bc:	de b7       	in	r29, 0x3e	; 62
 2be:	c0 55       	subi	r28, 0x50	; 80
 2c0:	d1 09       	sbc	r29, r1
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	f8 94       	cli
 2c6:	de bf       	out	0x3e, r29	; 62
 2c8:	0f be       	out	0x3f, r0	; 63
 2ca:	cd bf       	out	0x3d, r28	; 61
    
	init_ADC();
 2cc:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ADC>
	init_USART(MYUBRR);
 2d0:	87 e6       	ldi	r24, 0x67	; 103
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 76 00 	call	0xec	; 0xec <init_USART>
 	init_driving_PWM();
 2d8:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <init_driving_PWM>
 	init_servo_PWM();
 2dc:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <init_servo_PWM>
	
	DDRB |= (1 << 2);
 2e0:	84 b1       	in	r24, 0x04	; 4
 2e2:	84 60       	ori	r24, 0x04	; 4
 2e4:	84 b9       	out	0x04, r24	; 4
	
	int white_limit = (int)(WHITE * 1.5);
	int black_limit = (int)(BLACK * 0.75);
	servo_set_angle(0,180);
 2e6:	64 eb       	ldi	r22, 0xB4	; 180
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 09 01 	call	0x212	; 0x212 <servo_set_angle>
	int16_t i = 0;
	DDRD |= (1 << A_DIRECTION_PIN) | (1 << B_DIRECTION_PIN); //set direction pins as output
 2f2:	8a b1       	in	r24, 0x0a	; 10
 2f4:	84 61       	ori	r24, 0x14	; 20
 2f6:	8a b9       	out	0x0a, r24	; 10
	
	sei();
 2f8:	78 94       	sei
	
  while (1) 
    {
		
		//Servo move angle(subject to change)
		for(i = 0; i<=180;i++){
 2fa:	00 e0       	ldi	r16, 0x00	; 0
 2fc:	10 e0       	ldi	r17, 0x00	; 0
 2fe:	0d c0       	rjmp	.+26     	; 0x31a <main+0x64>
			servo_set_angle(i,180);
 300:	64 eb       	ldi	r22, 0xB4	; 180
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	c8 01       	movw	r24, r16
 306:	0e 94 09 01 	call	0x212	; 0x212 <servo_set_angle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 30a:	8f e0       	ldi	r24, 0x0F	; 15
 30c:	97 e2       	ldi	r25, 0x27	; 39
 30e:	01 97       	sbiw	r24, 0x01	; 1
 310:	f1 f7       	brne	.-4      	; 0x30e <main+0x58>
 312:	00 c0       	rjmp	.+0      	; 0x314 <main+0x5e>
 314:	00 00       	nop
	
  while (1) 
    {
		
		//Servo move angle(subject to change)
		for(i = 0; i<=180;i++){
 316:	0f 5f       	subi	r16, 0xFF	; 255
 318:	1f 4f       	sbci	r17, 0xFF	; 255
 31a:	05 3b       	cpi	r16, 0xB5	; 181
 31c:	11 05       	cpc	r17, r1
 31e:	84 f3       	brlt	.-32     	; 0x300 <main+0x4a>
 320:	04 eb       	ldi	r16, 0xB4	; 180
 322:	10 e0       	ldi	r17, 0x00	; 0
 324:	0d c0       	rjmp	.+26     	; 0x340 <main+0x8a>
			servo_set_angle(i,180);
			_delay_ms(40);
		}
		for (i=180;i>=0;i--){
			servo_set_angle(i,180);
 326:	64 eb       	ldi	r22, 0xB4	; 180
 328:	70 e0       	ldi	r23, 0x00	; 0
 32a:	c8 01       	movw	r24, r16
 32c:	0e 94 09 01 	call	0x212	; 0x212 <servo_set_angle>
 330:	8f e0       	ldi	r24, 0x0F	; 15
 332:	97 e2       	ldi	r25, 0x27	; 39
 334:	01 97       	sbiw	r24, 0x01	; 1
 336:	f1 f7       	brne	.-4      	; 0x334 <main+0x7e>
 338:	00 c0       	rjmp	.+0      	; 0x33a <main+0x84>
 33a:	00 00       	nop
		//Servo move angle(subject to change)
		for(i = 0; i<=180;i++){
			servo_set_angle(i,180);
			_delay_ms(40);
		}
		for (i=180;i>=0;i--){
 33c:	01 50       	subi	r16, 0x01	; 1
 33e:	11 09       	sbc	r17, r1
 340:	11 23       	and	r17, r17
 342:	8c f7       	brge	.-30     	; 0x326 <main+0x70>
			servo_set_angle(i,180);
			_delay_ms(40);
		}
		
		PORTB |= (1 << 2);
 344:	85 b1       	in	r24, 0x05	; 5
 346:	84 60       	ori	r24, 0x04	; 4
 348:	85 b9       	out	0x05, r24	; 5
		
		int sensorLeft = readADC(SENSOR_LEFT_CHANNEL);
 34a:	80 e0       	ldi	r24, 0x00	; 0
 34c:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 350:	d8 2e       	mov	r13, r24
 352:	c9 2e       	mov	r12, r25
		int lineTrackingSensorLeft = readADC(LINE_TRACKING_SENSOR_LEFT_CHANNEL) + 140;
 354:	85 e0       	ldi	r24, 0x05	; 5
 356:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 35a:	8c 01       	movw	r16, r24
 35c:	04 57       	subi	r16, 0x74	; 116
 35e:	1f 4f       	sbci	r17, 0xFF	; 255
		int lineTrackingSensorMiddle = readADC(LINE_TRACKING_SENSOR_MIDDLE_CHANNEL) + 110;
 360:	82 e0       	ldi	r24, 0x02	; 2
 362:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 366:	82 59       	subi	r24, 0x92	; 146
 368:	9f 4f       	sbci	r25, 0xFF	; 255
 36a:	7c 01       	movw	r14, r24
		int lineTrackingSensorRight = readADC(LINE_TRACKING_SENSOR_RIGHT_CHANNEL);
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 372:	b8 2e       	mov	r11, r24
 374:	a9 2e       	mov	r10, r25
		int sensorRight = readADC(SENSOR_RIGHT_CHANNEL);
 376:	83 e0       	ldi	r24, 0x03	; 3
 378:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
		
		// Convert distance to string
		char buffer[80];
		snprintf(buffer, sizeof(buffer), "%d %d %d %d %d \n", sensorLeft, lineTrackingSensorLeft, lineTrackingSensorMiddle, lineTrackingSensorRight, sensorRight);
 37c:	9f 93       	push	r25
 37e:	8f 93       	push	r24
 380:	af 92       	push	r10
 382:	bf 92       	push	r11
 384:	ff 92       	push	r15
 386:	ef 92       	push	r14
 388:	1f 93       	push	r17
 38a:	0f 93       	push	r16
 38c:	cf 92       	push	r12
 38e:	df 92       	push	r13
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	9f 93       	push	r25
 396:	8f 93       	push	r24
 398:	1f 92       	push	r1
 39a:	80 e5       	ldi	r24, 0x50	; 80
 39c:	8f 93       	push	r24
 39e:	ce 01       	movw	r24, r28
 3a0:	01 96       	adiw	r24, 0x01	; 1
 3a2:	9f 93       	push	r25
 3a4:	8f 93       	push	r24
 3a6:	0e 94 0c 04 	call	0x818	; 0x818 <snprintf>
		
		// Transmit distance over UART
		for (int i = 0; buffer[i] != '\0'; i++) {
 3aa:	0f b6       	in	r0, 0x3f	; 63
 3ac:	f8 94       	cli
 3ae:	de bf       	out	0x3e, r29	; 62
 3b0:	0f be       	out	0x3f, r0	; 63
 3b2:	cd bf       	out	0x3d, r28	; 61
 3b4:	00 e0       	ldi	r16, 0x00	; 0
 3b6:	10 e0       	ldi	r17, 0x00	; 0
 3b8:	04 c0       	rjmp	.+8      	; 0x3c2 <main+0x10c>
			transferMessage(buffer[i]);
 3ba:	0e 94 85 00 	call	0x10a	; 0x10a <transferMessage>
		// Convert distance to string
		char buffer[80];
		snprintf(buffer, sizeof(buffer), "%d %d %d %d %d \n", sensorLeft, lineTrackingSensorLeft, lineTrackingSensorMiddle, lineTrackingSensorRight, sensorRight);
		
		// Transmit distance over UART
		for (int i = 0; buffer[i] != '\0'; i++) {
 3be:	0f 5f       	subi	r16, 0xFF	; 255
 3c0:	1f 4f       	sbci	r17, 0xFF	; 255
 3c2:	e1 e0       	ldi	r30, 0x01	; 1
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	ec 0f       	add	r30, r28
 3c8:	fd 1f       	adc	r31, r29
 3ca:	e0 0f       	add	r30, r16
 3cc:	f1 1f       	adc	r31, r17
 3ce:	80 81       	ld	r24, Z
 3d0:	81 11       	cpse	r24, r1
 3d2:	f3 cf       	rjmp	.-26     	; 0x3ba <main+0x104>
 3d4:	87 ea       	ldi	r24, 0xA7	; 167
 3d6:	91 e6       	ldi	r25, 0x61	; 97
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <main+0x122>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <main+0x128>
 3de:	00 00       	nop
 3e0:	87 ea       	ldi	r24, 0xA7	; 167
 3e2:	91 e6       	ldi	r25, 0x61	; 97
 3e4:	01 97       	sbiw	r24, 0x01	; 1
 3e6:	f1 f7       	brne	.-4      	; 0x3e4 <main+0x12e>
 3e8:	00 c0       	rjmp	.+0      	; 0x3ea <main+0x134>
 3ea:	00 00       	nop
		
		char receivedMessage = 'A';
		
		_delay_ms(100);
		if(receivedMessage == 'A'){
			PORTB |= (1 << 2);
 3ec:	85 b1       	in	r24, 0x05	; 5
 3ee:	84 60       	ori	r24, 0x04	; 4
 3f0:	85 b9       	out	0x05, r24	; 5
 3f2:	9f e7       	ldi	r25, 0x7F	; 127
 3f4:	24 e8       	ldi	r18, 0x84	; 132
 3f6:	8e e1       	ldi	r24, 0x1E	; 30
 3f8:	91 50       	subi	r25, 0x01	; 1
 3fa:	20 40       	sbci	r18, 0x00	; 0
 3fc:	80 40       	sbci	r24, 0x00	; 0
 3fe:	e1 f7       	brne	.-8      	; 0x3f8 <main+0x142>
 400:	00 c0       	rjmp	.+0      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 402:	00 00       	nop
// 		setMotorBSpeed(90);
// 		_delay_ms(2000);
// 		setMotorASpeed(0);
// 		setMotorBSpeed(0);
// 		_delay_ms(2000);
    }
 404:	7a cf       	rjmp	.-268    	; 0x2fa <main+0x44>

00000406 <__subsf3>:
 406:	50 58       	subi	r21, 0x80	; 128

00000408 <__addsf3>:
 408:	bb 27       	eor	r27, r27
 40a:	aa 27       	eor	r26, r26
 40c:	0e 94 1b 02 	call	0x436	; 0x436 <__addsf3x>
 410:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_round>
 414:	0e 94 57 03 	call	0x6ae	; 0x6ae <__fp_pscA>
 418:	38 f0       	brcs	.+14     	; 0x428 <__addsf3+0x20>
 41a:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__fp_pscB>
 41e:	20 f0       	brcs	.+8      	; 0x428 <__addsf3+0x20>
 420:	39 f4       	brne	.+14     	; 0x430 <__addsf3+0x28>
 422:	9f 3f       	cpi	r25, 0xFF	; 255
 424:	19 f4       	brne	.+6      	; 0x42c <__addsf3+0x24>
 426:	26 f4       	brtc	.+8      	; 0x430 <__addsf3+0x28>
 428:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_nan>
 42c:	0e f4       	brtc	.+2      	; 0x430 <__addsf3+0x28>
 42e:	e0 95       	com	r30
 430:	e7 fb       	bst	r30, 7
 432:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_inf>

00000436 <__addsf3x>:
 436:	e9 2f       	mov	r30, r25
 438:	0e 94 76 03 	call	0x6ec	; 0x6ec <__fp_split3>
 43c:	58 f3       	brcs	.-42     	; 0x414 <__addsf3+0xc>
 43e:	ba 17       	cp	r27, r26
 440:	62 07       	cpc	r22, r18
 442:	73 07       	cpc	r23, r19
 444:	84 07       	cpc	r24, r20
 446:	95 07       	cpc	r25, r21
 448:	20 f0       	brcs	.+8      	; 0x452 <__addsf3x+0x1c>
 44a:	79 f4       	brne	.+30     	; 0x46a <__addsf3x+0x34>
 44c:	a6 f5       	brtc	.+104    	; 0x4b6 <__addsf3x+0x80>
 44e:	0c 94 98 03 	jmp	0x730	; 0x730 <__fp_zero>
 452:	0e f4       	brtc	.+2      	; 0x456 <__addsf3x+0x20>
 454:	e0 95       	com	r30
 456:	0b 2e       	mov	r0, r27
 458:	ba 2f       	mov	r27, r26
 45a:	a0 2d       	mov	r26, r0
 45c:	0b 01       	movw	r0, r22
 45e:	b9 01       	movw	r22, r18
 460:	90 01       	movw	r18, r0
 462:	0c 01       	movw	r0, r24
 464:	ca 01       	movw	r24, r20
 466:	a0 01       	movw	r20, r0
 468:	11 24       	eor	r1, r1
 46a:	ff 27       	eor	r31, r31
 46c:	59 1b       	sub	r21, r25
 46e:	99 f0       	breq	.+38     	; 0x496 <__addsf3x+0x60>
 470:	59 3f       	cpi	r21, 0xF9	; 249
 472:	50 f4       	brcc	.+20     	; 0x488 <__addsf3x+0x52>
 474:	50 3e       	cpi	r21, 0xE0	; 224
 476:	68 f1       	brcs	.+90     	; 0x4d2 <__addsf3x+0x9c>
 478:	1a 16       	cp	r1, r26
 47a:	f0 40       	sbci	r31, 0x00	; 0
 47c:	a2 2f       	mov	r26, r18
 47e:	23 2f       	mov	r18, r19
 480:	34 2f       	mov	r19, r20
 482:	44 27       	eor	r20, r20
 484:	58 5f       	subi	r21, 0xF8	; 248
 486:	f3 cf       	rjmp	.-26     	; 0x46e <__addsf3x+0x38>
 488:	46 95       	lsr	r20
 48a:	37 95       	ror	r19
 48c:	27 95       	ror	r18
 48e:	a7 95       	ror	r26
 490:	f0 40       	sbci	r31, 0x00	; 0
 492:	53 95       	inc	r21
 494:	c9 f7       	brne	.-14     	; 0x488 <__addsf3x+0x52>
 496:	7e f4       	brtc	.+30     	; 0x4b6 <__addsf3x+0x80>
 498:	1f 16       	cp	r1, r31
 49a:	ba 0b       	sbc	r27, r26
 49c:	62 0b       	sbc	r22, r18
 49e:	73 0b       	sbc	r23, r19
 4a0:	84 0b       	sbc	r24, r20
 4a2:	ba f0       	brmi	.+46     	; 0x4d2 <__addsf3x+0x9c>
 4a4:	91 50       	subi	r25, 0x01	; 1
 4a6:	a1 f0       	breq	.+40     	; 0x4d0 <__addsf3x+0x9a>
 4a8:	ff 0f       	add	r31, r31
 4aa:	bb 1f       	adc	r27, r27
 4ac:	66 1f       	adc	r22, r22
 4ae:	77 1f       	adc	r23, r23
 4b0:	88 1f       	adc	r24, r24
 4b2:	c2 f7       	brpl	.-16     	; 0x4a4 <__addsf3x+0x6e>
 4b4:	0e c0       	rjmp	.+28     	; 0x4d2 <__addsf3x+0x9c>
 4b6:	ba 0f       	add	r27, r26
 4b8:	62 1f       	adc	r22, r18
 4ba:	73 1f       	adc	r23, r19
 4bc:	84 1f       	adc	r24, r20
 4be:	48 f4       	brcc	.+18     	; 0x4d2 <__addsf3x+0x9c>
 4c0:	87 95       	ror	r24
 4c2:	77 95       	ror	r23
 4c4:	67 95       	ror	r22
 4c6:	b7 95       	ror	r27
 4c8:	f7 95       	ror	r31
 4ca:	9e 3f       	cpi	r25, 0xFE	; 254
 4cc:	08 f0       	brcs	.+2      	; 0x4d0 <__addsf3x+0x9a>
 4ce:	b0 cf       	rjmp	.-160    	; 0x430 <__addsf3+0x28>
 4d0:	93 95       	inc	r25
 4d2:	88 0f       	add	r24, r24
 4d4:	08 f0       	brcs	.+2      	; 0x4d8 <__addsf3x+0xa2>
 4d6:	99 27       	eor	r25, r25
 4d8:	ee 0f       	add	r30, r30
 4da:	97 95       	ror	r25
 4dc:	87 95       	ror	r24
 4de:	08 95       	ret

000004e0 <__divsf3>:
 4e0:	0e 94 84 02 	call	0x508	; 0x508 <__divsf3x>
 4e4:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_round>
 4e8:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__fp_pscB>
 4ec:	58 f0       	brcs	.+22     	; 0x504 <__divsf3+0x24>
 4ee:	0e 94 57 03 	call	0x6ae	; 0x6ae <__fp_pscA>
 4f2:	40 f0       	brcs	.+16     	; 0x504 <__divsf3+0x24>
 4f4:	29 f4       	brne	.+10     	; 0x500 <__divsf3+0x20>
 4f6:	5f 3f       	cpi	r21, 0xFF	; 255
 4f8:	29 f0       	breq	.+10     	; 0x504 <__divsf3+0x24>
 4fa:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_inf>
 4fe:	51 11       	cpse	r21, r1
 500:	0c 94 99 03 	jmp	0x732	; 0x732 <__fp_szero>
 504:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_nan>

00000508 <__divsf3x>:
 508:	0e 94 76 03 	call	0x6ec	; 0x6ec <__fp_split3>
 50c:	68 f3       	brcs	.-38     	; 0x4e8 <__divsf3+0x8>

0000050e <__divsf3_pse>:
 50e:	99 23       	and	r25, r25
 510:	b1 f3       	breq	.-20     	; 0x4fe <__divsf3+0x1e>
 512:	55 23       	and	r21, r21
 514:	91 f3       	breq	.-28     	; 0x4fa <__divsf3+0x1a>
 516:	95 1b       	sub	r25, r21
 518:	55 0b       	sbc	r21, r21
 51a:	bb 27       	eor	r27, r27
 51c:	aa 27       	eor	r26, r26
 51e:	62 17       	cp	r22, r18
 520:	73 07       	cpc	r23, r19
 522:	84 07       	cpc	r24, r20
 524:	38 f0       	brcs	.+14     	; 0x534 <__divsf3_pse+0x26>
 526:	9f 5f       	subi	r25, 0xFF	; 255
 528:	5f 4f       	sbci	r21, 0xFF	; 255
 52a:	22 0f       	add	r18, r18
 52c:	33 1f       	adc	r19, r19
 52e:	44 1f       	adc	r20, r20
 530:	aa 1f       	adc	r26, r26
 532:	a9 f3       	breq	.-22     	; 0x51e <__divsf3_pse+0x10>
 534:	35 d0       	rcall	.+106    	; 0x5a0 <__divsf3_pse+0x92>
 536:	0e 2e       	mov	r0, r30
 538:	3a f0       	brmi	.+14     	; 0x548 <__divsf3_pse+0x3a>
 53a:	e0 e8       	ldi	r30, 0x80	; 128
 53c:	32 d0       	rcall	.+100    	; 0x5a2 <__divsf3_pse+0x94>
 53e:	91 50       	subi	r25, 0x01	; 1
 540:	50 40       	sbci	r21, 0x00	; 0
 542:	e6 95       	lsr	r30
 544:	00 1c       	adc	r0, r0
 546:	ca f7       	brpl	.-14     	; 0x53a <__divsf3_pse+0x2c>
 548:	2b d0       	rcall	.+86     	; 0x5a0 <__divsf3_pse+0x92>
 54a:	fe 2f       	mov	r31, r30
 54c:	29 d0       	rcall	.+82     	; 0x5a0 <__divsf3_pse+0x92>
 54e:	66 0f       	add	r22, r22
 550:	77 1f       	adc	r23, r23
 552:	88 1f       	adc	r24, r24
 554:	bb 1f       	adc	r27, r27
 556:	26 17       	cp	r18, r22
 558:	37 07       	cpc	r19, r23
 55a:	48 07       	cpc	r20, r24
 55c:	ab 07       	cpc	r26, r27
 55e:	b0 e8       	ldi	r27, 0x80	; 128
 560:	09 f0       	breq	.+2      	; 0x564 <__divsf3_pse+0x56>
 562:	bb 0b       	sbc	r27, r27
 564:	80 2d       	mov	r24, r0
 566:	bf 01       	movw	r22, r30
 568:	ff 27       	eor	r31, r31
 56a:	93 58       	subi	r25, 0x83	; 131
 56c:	5f 4f       	sbci	r21, 0xFF	; 255
 56e:	3a f0       	brmi	.+14     	; 0x57e <__divsf3_pse+0x70>
 570:	9e 3f       	cpi	r25, 0xFE	; 254
 572:	51 05       	cpc	r21, r1
 574:	78 f0       	brcs	.+30     	; 0x594 <__divsf3_pse+0x86>
 576:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_inf>
 57a:	0c 94 99 03 	jmp	0x732	; 0x732 <__fp_szero>
 57e:	5f 3f       	cpi	r21, 0xFF	; 255
 580:	e4 f3       	brlt	.-8      	; 0x57a <__divsf3_pse+0x6c>
 582:	98 3e       	cpi	r25, 0xE8	; 232
 584:	d4 f3       	brlt	.-12     	; 0x57a <__divsf3_pse+0x6c>
 586:	86 95       	lsr	r24
 588:	77 95       	ror	r23
 58a:	67 95       	ror	r22
 58c:	b7 95       	ror	r27
 58e:	f7 95       	ror	r31
 590:	9f 5f       	subi	r25, 0xFF	; 255
 592:	c9 f7       	brne	.-14     	; 0x586 <__divsf3_pse+0x78>
 594:	88 0f       	add	r24, r24
 596:	91 1d       	adc	r25, r1
 598:	96 95       	lsr	r25
 59a:	87 95       	ror	r24
 59c:	97 f9       	bld	r25, 7
 59e:	08 95       	ret
 5a0:	e1 e0       	ldi	r30, 0x01	; 1
 5a2:	66 0f       	add	r22, r22
 5a4:	77 1f       	adc	r23, r23
 5a6:	88 1f       	adc	r24, r24
 5a8:	bb 1f       	adc	r27, r27
 5aa:	62 17       	cp	r22, r18
 5ac:	73 07       	cpc	r23, r19
 5ae:	84 07       	cpc	r24, r20
 5b0:	ba 07       	cpc	r27, r26
 5b2:	20 f0       	brcs	.+8      	; 0x5bc <__divsf3_pse+0xae>
 5b4:	62 1b       	sub	r22, r18
 5b6:	73 0b       	sbc	r23, r19
 5b8:	84 0b       	sbc	r24, r20
 5ba:	ba 0b       	sbc	r27, r26
 5bc:	ee 1f       	adc	r30, r30
 5be:	88 f7       	brcc	.-30     	; 0x5a2 <__divsf3_pse+0x94>
 5c0:	e0 95       	com	r30
 5c2:	08 95       	ret

000005c4 <__fixunssfsi>:
 5c4:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__fp_splitA>
 5c8:	88 f0       	brcs	.+34     	; 0x5ec <__fixunssfsi+0x28>
 5ca:	9f 57       	subi	r25, 0x7F	; 127
 5cc:	98 f0       	brcs	.+38     	; 0x5f4 <__fixunssfsi+0x30>
 5ce:	b9 2f       	mov	r27, r25
 5d0:	99 27       	eor	r25, r25
 5d2:	b7 51       	subi	r27, 0x17	; 23
 5d4:	b0 f0       	brcs	.+44     	; 0x602 <__fixunssfsi+0x3e>
 5d6:	e1 f0       	breq	.+56     	; 0x610 <__fixunssfsi+0x4c>
 5d8:	66 0f       	add	r22, r22
 5da:	77 1f       	adc	r23, r23
 5dc:	88 1f       	adc	r24, r24
 5de:	99 1f       	adc	r25, r25
 5e0:	1a f0       	brmi	.+6      	; 0x5e8 <__fixunssfsi+0x24>
 5e2:	ba 95       	dec	r27
 5e4:	c9 f7       	brne	.-14     	; 0x5d8 <__fixunssfsi+0x14>
 5e6:	14 c0       	rjmp	.+40     	; 0x610 <__fixunssfsi+0x4c>
 5e8:	b1 30       	cpi	r27, 0x01	; 1
 5ea:	91 f0       	breq	.+36     	; 0x610 <__fixunssfsi+0x4c>
 5ec:	0e 94 98 03 	call	0x730	; 0x730 <__fp_zero>
 5f0:	b1 e0       	ldi	r27, 0x01	; 1
 5f2:	08 95       	ret
 5f4:	0c 94 98 03 	jmp	0x730	; 0x730 <__fp_zero>
 5f8:	67 2f       	mov	r22, r23
 5fa:	78 2f       	mov	r23, r24
 5fc:	88 27       	eor	r24, r24
 5fe:	b8 5f       	subi	r27, 0xF8	; 248
 600:	39 f0       	breq	.+14     	; 0x610 <__fixunssfsi+0x4c>
 602:	b9 3f       	cpi	r27, 0xF9	; 249
 604:	cc f3       	brlt	.-14     	; 0x5f8 <__fixunssfsi+0x34>
 606:	86 95       	lsr	r24
 608:	77 95       	ror	r23
 60a:	67 95       	ror	r22
 60c:	b3 95       	inc	r27
 60e:	d9 f7       	brne	.-10     	; 0x606 <__fixunssfsi+0x42>
 610:	3e f4       	brtc	.+14     	; 0x620 <__fixunssfsi+0x5c>
 612:	90 95       	com	r25
 614:	80 95       	com	r24
 616:	70 95       	com	r23
 618:	61 95       	neg	r22
 61a:	7f 4f       	sbci	r23, 0xFF	; 255
 61c:	8f 4f       	sbci	r24, 0xFF	; 255
 61e:	9f 4f       	sbci	r25, 0xFF	; 255
 620:	08 95       	ret

00000622 <__floatunsisf>:
 622:	e8 94       	clt
 624:	09 c0       	rjmp	.+18     	; 0x638 <__floatsisf+0x12>

00000626 <__floatsisf>:
 626:	97 fb       	bst	r25, 7
 628:	3e f4       	brtc	.+14     	; 0x638 <__floatsisf+0x12>
 62a:	90 95       	com	r25
 62c:	80 95       	com	r24
 62e:	70 95       	com	r23
 630:	61 95       	neg	r22
 632:	7f 4f       	sbci	r23, 0xFF	; 255
 634:	8f 4f       	sbci	r24, 0xFF	; 255
 636:	9f 4f       	sbci	r25, 0xFF	; 255
 638:	99 23       	and	r25, r25
 63a:	a9 f0       	breq	.+42     	; 0x666 <__floatsisf+0x40>
 63c:	f9 2f       	mov	r31, r25
 63e:	96 e9       	ldi	r25, 0x96	; 150
 640:	bb 27       	eor	r27, r27
 642:	93 95       	inc	r25
 644:	f6 95       	lsr	r31
 646:	87 95       	ror	r24
 648:	77 95       	ror	r23
 64a:	67 95       	ror	r22
 64c:	b7 95       	ror	r27
 64e:	f1 11       	cpse	r31, r1
 650:	f8 cf       	rjmp	.-16     	; 0x642 <__floatsisf+0x1c>
 652:	fa f4       	brpl	.+62     	; 0x692 <__floatsisf+0x6c>
 654:	bb 0f       	add	r27, r27
 656:	11 f4       	brne	.+4      	; 0x65c <__floatsisf+0x36>
 658:	60 ff       	sbrs	r22, 0
 65a:	1b c0       	rjmp	.+54     	; 0x692 <__floatsisf+0x6c>
 65c:	6f 5f       	subi	r22, 0xFF	; 255
 65e:	7f 4f       	sbci	r23, 0xFF	; 255
 660:	8f 4f       	sbci	r24, 0xFF	; 255
 662:	9f 4f       	sbci	r25, 0xFF	; 255
 664:	16 c0       	rjmp	.+44     	; 0x692 <__floatsisf+0x6c>
 666:	88 23       	and	r24, r24
 668:	11 f0       	breq	.+4      	; 0x66e <__floatsisf+0x48>
 66a:	96 e9       	ldi	r25, 0x96	; 150
 66c:	11 c0       	rjmp	.+34     	; 0x690 <__floatsisf+0x6a>
 66e:	77 23       	and	r23, r23
 670:	21 f0       	breq	.+8      	; 0x67a <__floatsisf+0x54>
 672:	9e e8       	ldi	r25, 0x8E	; 142
 674:	87 2f       	mov	r24, r23
 676:	76 2f       	mov	r23, r22
 678:	05 c0       	rjmp	.+10     	; 0x684 <__floatsisf+0x5e>
 67a:	66 23       	and	r22, r22
 67c:	71 f0       	breq	.+28     	; 0x69a <__floatsisf+0x74>
 67e:	96 e8       	ldi	r25, 0x86	; 134
 680:	86 2f       	mov	r24, r22
 682:	70 e0       	ldi	r23, 0x00	; 0
 684:	60 e0       	ldi	r22, 0x00	; 0
 686:	2a f0       	brmi	.+10     	; 0x692 <__floatsisf+0x6c>
 688:	9a 95       	dec	r25
 68a:	66 0f       	add	r22, r22
 68c:	77 1f       	adc	r23, r23
 68e:	88 1f       	adc	r24, r24
 690:	da f7       	brpl	.-10     	; 0x688 <__floatsisf+0x62>
 692:	88 0f       	add	r24, r24
 694:	96 95       	lsr	r25
 696:	87 95       	ror	r24
 698:	97 f9       	bld	r25, 7
 69a:	08 95       	ret

0000069c <__fp_inf>:
 69c:	97 f9       	bld	r25, 7
 69e:	9f 67       	ori	r25, 0x7F	; 127
 6a0:	80 e8       	ldi	r24, 0x80	; 128
 6a2:	70 e0       	ldi	r23, 0x00	; 0
 6a4:	60 e0       	ldi	r22, 0x00	; 0
 6a6:	08 95       	ret

000006a8 <__fp_nan>:
 6a8:	9f ef       	ldi	r25, 0xFF	; 255
 6aa:	80 ec       	ldi	r24, 0xC0	; 192
 6ac:	08 95       	ret

000006ae <__fp_pscA>:
 6ae:	00 24       	eor	r0, r0
 6b0:	0a 94       	dec	r0
 6b2:	16 16       	cp	r1, r22
 6b4:	17 06       	cpc	r1, r23
 6b6:	18 06       	cpc	r1, r24
 6b8:	09 06       	cpc	r0, r25
 6ba:	08 95       	ret

000006bc <__fp_pscB>:
 6bc:	00 24       	eor	r0, r0
 6be:	0a 94       	dec	r0
 6c0:	12 16       	cp	r1, r18
 6c2:	13 06       	cpc	r1, r19
 6c4:	14 06       	cpc	r1, r20
 6c6:	05 06       	cpc	r0, r21
 6c8:	08 95       	ret

000006ca <__fp_round>:
 6ca:	09 2e       	mov	r0, r25
 6cc:	03 94       	inc	r0
 6ce:	00 0c       	add	r0, r0
 6d0:	11 f4       	brne	.+4      	; 0x6d6 <__fp_round+0xc>
 6d2:	88 23       	and	r24, r24
 6d4:	52 f0       	brmi	.+20     	; 0x6ea <__fp_round+0x20>
 6d6:	bb 0f       	add	r27, r27
 6d8:	40 f4       	brcc	.+16     	; 0x6ea <__fp_round+0x20>
 6da:	bf 2b       	or	r27, r31
 6dc:	11 f4       	brne	.+4      	; 0x6e2 <__fp_round+0x18>
 6de:	60 ff       	sbrs	r22, 0
 6e0:	04 c0       	rjmp	.+8      	; 0x6ea <__fp_round+0x20>
 6e2:	6f 5f       	subi	r22, 0xFF	; 255
 6e4:	7f 4f       	sbci	r23, 0xFF	; 255
 6e6:	8f 4f       	sbci	r24, 0xFF	; 255
 6e8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ea:	08 95       	ret

000006ec <__fp_split3>:
 6ec:	57 fd       	sbrc	r21, 7
 6ee:	90 58       	subi	r25, 0x80	; 128
 6f0:	44 0f       	add	r20, r20
 6f2:	55 1f       	adc	r21, r21
 6f4:	59 f0       	breq	.+22     	; 0x70c <__fp_splitA+0x10>
 6f6:	5f 3f       	cpi	r21, 0xFF	; 255
 6f8:	71 f0       	breq	.+28     	; 0x716 <__fp_splitA+0x1a>
 6fa:	47 95       	ror	r20

000006fc <__fp_splitA>:
 6fc:	88 0f       	add	r24, r24
 6fe:	97 fb       	bst	r25, 7
 700:	99 1f       	adc	r25, r25
 702:	61 f0       	breq	.+24     	; 0x71c <__fp_splitA+0x20>
 704:	9f 3f       	cpi	r25, 0xFF	; 255
 706:	79 f0       	breq	.+30     	; 0x726 <__fp_splitA+0x2a>
 708:	87 95       	ror	r24
 70a:	08 95       	ret
 70c:	12 16       	cp	r1, r18
 70e:	13 06       	cpc	r1, r19
 710:	14 06       	cpc	r1, r20
 712:	55 1f       	adc	r21, r21
 714:	f2 cf       	rjmp	.-28     	; 0x6fa <__fp_split3+0xe>
 716:	46 95       	lsr	r20
 718:	f1 df       	rcall	.-30     	; 0x6fc <__fp_splitA>
 71a:	08 c0       	rjmp	.+16     	; 0x72c <__fp_splitA+0x30>
 71c:	16 16       	cp	r1, r22
 71e:	17 06       	cpc	r1, r23
 720:	18 06       	cpc	r1, r24
 722:	99 1f       	adc	r25, r25
 724:	f1 cf       	rjmp	.-30     	; 0x708 <__fp_splitA+0xc>
 726:	86 95       	lsr	r24
 728:	71 05       	cpc	r23, r1
 72a:	61 05       	cpc	r22, r1
 72c:	08 94       	sec
 72e:	08 95       	ret

00000730 <__fp_zero>:
 730:	e8 94       	clt

00000732 <__fp_szero>:
 732:	bb 27       	eor	r27, r27
 734:	66 27       	eor	r22, r22
 736:	77 27       	eor	r23, r23
 738:	cb 01       	movw	r24, r22
 73a:	97 f9       	bld	r25, 7
 73c:	08 95       	ret

0000073e <__mulsf3>:
 73e:	0e 94 b2 03 	call	0x764	; 0x764 <__mulsf3x>
 742:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_round>
 746:	0e 94 57 03 	call	0x6ae	; 0x6ae <__fp_pscA>
 74a:	38 f0       	brcs	.+14     	; 0x75a <__mulsf3+0x1c>
 74c:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__fp_pscB>
 750:	20 f0       	brcs	.+8      	; 0x75a <__mulsf3+0x1c>
 752:	95 23       	and	r25, r21
 754:	11 f0       	breq	.+4      	; 0x75a <__mulsf3+0x1c>
 756:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_inf>
 75a:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_nan>
 75e:	11 24       	eor	r1, r1
 760:	0c 94 99 03 	jmp	0x732	; 0x732 <__fp_szero>

00000764 <__mulsf3x>:
 764:	0e 94 76 03 	call	0x6ec	; 0x6ec <__fp_split3>
 768:	70 f3       	brcs	.-36     	; 0x746 <__mulsf3+0x8>

0000076a <__mulsf3_pse>:
 76a:	95 9f       	mul	r25, r21
 76c:	c1 f3       	breq	.-16     	; 0x75e <__mulsf3+0x20>
 76e:	95 0f       	add	r25, r21
 770:	50 e0       	ldi	r21, 0x00	; 0
 772:	55 1f       	adc	r21, r21
 774:	62 9f       	mul	r22, r18
 776:	f0 01       	movw	r30, r0
 778:	72 9f       	mul	r23, r18
 77a:	bb 27       	eor	r27, r27
 77c:	f0 0d       	add	r31, r0
 77e:	b1 1d       	adc	r27, r1
 780:	63 9f       	mul	r22, r19
 782:	aa 27       	eor	r26, r26
 784:	f0 0d       	add	r31, r0
 786:	b1 1d       	adc	r27, r1
 788:	aa 1f       	adc	r26, r26
 78a:	64 9f       	mul	r22, r20
 78c:	66 27       	eor	r22, r22
 78e:	b0 0d       	add	r27, r0
 790:	a1 1d       	adc	r26, r1
 792:	66 1f       	adc	r22, r22
 794:	82 9f       	mul	r24, r18
 796:	22 27       	eor	r18, r18
 798:	b0 0d       	add	r27, r0
 79a:	a1 1d       	adc	r26, r1
 79c:	62 1f       	adc	r22, r18
 79e:	73 9f       	mul	r23, r19
 7a0:	b0 0d       	add	r27, r0
 7a2:	a1 1d       	adc	r26, r1
 7a4:	62 1f       	adc	r22, r18
 7a6:	83 9f       	mul	r24, r19
 7a8:	a0 0d       	add	r26, r0
 7aa:	61 1d       	adc	r22, r1
 7ac:	22 1f       	adc	r18, r18
 7ae:	74 9f       	mul	r23, r20
 7b0:	33 27       	eor	r19, r19
 7b2:	a0 0d       	add	r26, r0
 7b4:	61 1d       	adc	r22, r1
 7b6:	23 1f       	adc	r18, r19
 7b8:	84 9f       	mul	r24, r20
 7ba:	60 0d       	add	r22, r0
 7bc:	21 1d       	adc	r18, r1
 7be:	82 2f       	mov	r24, r18
 7c0:	76 2f       	mov	r23, r22
 7c2:	6a 2f       	mov	r22, r26
 7c4:	11 24       	eor	r1, r1
 7c6:	9f 57       	subi	r25, 0x7F	; 127
 7c8:	50 40       	sbci	r21, 0x00	; 0
 7ca:	9a f0       	brmi	.+38     	; 0x7f2 <__mulsf3_pse+0x88>
 7cc:	f1 f0       	breq	.+60     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7ce:	88 23       	and	r24, r24
 7d0:	4a f0       	brmi	.+18     	; 0x7e4 <__mulsf3_pse+0x7a>
 7d2:	ee 0f       	add	r30, r30
 7d4:	ff 1f       	adc	r31, r31
 7d6:	bb 1f       	adc	r27, r27
 7d8:	66 1f       	adc	r22, r22
 7da:	77 1f       	adc	r23, r23
 7dc:	88 1f       	adc	r24, r24
 7de:	91 50       	subi	r25, 0x01	; 1
 7e0:	50 40       	sbci	r21, 0x00	; 0
 7e2:	a9 f7       	brne	.-22     	; 0x7ce <__mulsf3_pse+0x64>
 7e4:	9e 3f       	cpi	r25, 0xFE	; 254
 7e6:	51 05       	cpc	r21, r1
 7e8:	80 f0       	brcs	.+32     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7ea:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_inf>
 7ee:	0c 94 99 03 	jmp	0x732	; 0x732 <__fp_szero>
 7f2:	5f 3f       	cpi	r21, 0xFF	; 255
 7f4:	e4 f3       	brlt	.-8      	; 0x7ee <__mulsf3_pse+0x84>
 7f6:	98 3e       	cpi	r25, 0xE8	; 232
 7f8:	d4 f3       	brlt	.-12     	; 0x7ee <__mulsf3_pse+0x84>
 7fa:	86 95       	lsr	r24
 7fc:	77 95       	ror	r23
 7fe:	67 95       	ror	r22
 800:	b7 95       	ror	r27
 802:	f7 95       	ror	r31
 804:	e7 95       	ror	r30
 806:	9f 5f       	subi	r25, 0xFF	; 255
 808:	c1 f7       	brne	.-16     	; 0x7fa <__mulsf3_pse+0x90>
 80a:	fe 2b       	or	r31, r30
 80c:	88 0f       	add	r24, r24
 80e:	91 1d       	adc	r25, r1
 810:	96 95       	lsr	r25
 812:	87 95       	ror	r24
 814:	97 f9       	bld	r25, 7
 816:	08 95       	ret

00000818 <snprintf>:
 818:	ae e0       	ldi	r26, 0x0E	; 14
 81a:	b0 e0       	ldi	r27, 0x00	; 0
 81c:	e2 e1       	ldi	r30, 0x12	; 18
 81e:	f4 e0       	ldi	r31, 0x04	; 4
 820:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__prologue_saves__+0x1c>
 824:	0d 89       	ldd	r16, Y+21	; 0x15
 826:	1e 89       	ldd	r17, Y+22	; 0x16
 828:	8f 89       	ldd	r24, Y+23	; 0x17
 82a:	98 8d       	ldd	r25, Y+24	; 0x18
 82c:	26 e0       	ldi	r18, 0x06	; 6
 82e:	2c 83       	std	Y+4, r18	; 0x04
 830:	1a 83       	std	Y+2, r17	; 0x02
 832:	09 83       	std	Y+1, r16	; 0x01
 834:	97 ff       	sbrs	r25, 7
 836:	02 c0       	rjmp	.+4      	; 0x83c <snprintf+0x24>
 838:	80 e0       	ldi	r24, 0x00	; 0
 83a:	90 e8       	ldi	r25, 0x80	; 128
 83c:	01 97       	sbiw	r24, 0x01	; 1
 83e:	9e 83       	std	Y+6, r25	; 0x06
 840:	8d 83       	std	Y+5, r24	; 0x05
 842:	ae 01       	movw	r20, r28
 844:	45 5e       	subi	r20, 0xE5	; 229
 846:	5f 4f       	sbci	r21, 0xFF	; 255
 848:	69 8d       	ldd	r22, Y+25	; 0x19
 84a:	7a 8d       	ldd	r23, Y+26	; 0x1a
 84c:	ce 01       	movw	r24, r28
 84e:	01 96       	adiw	r24, 0x01	; 1
 850:	0e 94 3c 04 	call	0x878	; 0x878 <vfprintf>
 854:	4d 81       	ldd	r20, Y+5	; 0x05
 856:	5e 81       	ldd	r21, Y+6	; 0x06
 858:	57 fd       	sbrc	r21, 7
 85a:	0a c0       	rjmp	.+20     	; 0x870 <snprintf+0x58>
 85c:	2f 81       	ldd	r18, Y+7	; 0x07
 85e:	38 85       	ldd	r19, Y+8	; 0x08
 860:	42 17       	cp	r20, r18
 862:	53 07       	cpc	r21, r19
 864:	0c f4       	brge	.+2      	; 0x868 <snprintf+0x50>
 866:	9a 01       	movw	r18, r20
 868:	f8 01       	movw	r30, r16
 86a:	e2 0f       	add	r30, r18
 86c:	f3 1f       	adc	r31, r19
 86e:	10 82       	st	Z, r1
 870:	2e 96       	adiw	r28, 0x0e	; 14
 872:	e4 e0       	ldi	r30, 0x04	; 4
 874:	0c 94 f7 06 	jmp	0xdee	; 0xdee <__epilogue_restores__+0x1c>

00000878 <vfprintf>:
 878:	ab e0       	ldi	r26, 0x0B	; 11
 87a:	b0 e0       	ldi	r27, 0x00	; 0
 87c:	e2 e4       	ldi	r30, 0x42	; 66
 87e:	f4 e0       	ldi	r31, 0x04	; 4
 880:	0c 94 cd 06 	jmp	0xd9a	; 0xd9a <__prologue_saves__>
 884:	6c 01       	movw	r12, r24
 886:	7b 01       	movw	r14, r22
 888:	8a 01       	movw	r16, r20
 88a:	fc 01       	movw	r30, r24
 88c:	17 82       	std	Z+7, r1	; 0x07
 88e:	16 82       	std	Z+6, r1	; 0x06
 890:	83 81       	ldd	r24, Z+3	; 0x03
 892:	81 ff       	sbrs	r24, 1
 894:	cc c1       	rjmp	.+920    	; 0xc2e <__stack+0x32f>
 896:	ce 01       	movw	r24, r28
 898:	01 96       	adiw	r24, 0x01	; 1
 89a:	3c 01       	movw	r6, r24
 89c:	f6 01       	movw	r30, r12
 89e:	93 81       	ldd	r25, Z+3	; 0x03
 8a0:	f7 01       	movw	r30, r14
 8a2:	93 fd       	sbrc	r25, 3
 8a4:	85 91       	lpm	r24, Z+
 8a6:	93 ff       	sbrs	r25, 3
 8a8:	81 91       	ld	r24, Z+
 8aa:	7f 01       	movw	r14, r30
 8ac:	88 23       	and	r24, r24
 8ae:	09 f4       	brne	.+2      	; 0x8b2 <vfprintf+0x3a>
 8b0:	ba c1       	rjmp	.+884    	; 0xc26 <__stack+0x327>
 8b2:	85 32       	cpi	r24, 0x25	; 37
 8b4:	39 f4       	brne	.+14     	; 0x8c4 <vfprintf+0x4c>
 8b6:	93 fd       	sbrc	r25, 3
 8b8:	85 91       	lpm	r24, Z+
 8ba:	93 ff       	sbrs	r25, 3
 8bc:	81 91       	ld	r24, Z+
 8be:	7f 01       	movw	r14, r30
 8c0:	85 32       	cpi	r24, 0x25	; 37
 8c2:	29 f4       	brne	.+10     	; 0x8ce <vfprintf+0x56>
 8c4:	b6 01       	movw	r22, r12
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 8cc:	e7 cf       	rjmp	.-50     	; 0x89c <vfprintf+0x24>
 8ce:	91 2c       	mov	r9, r1
 8d0:	21 2c       	mov	r2, r1
 8d2:	31 2c       	mov	r3, r1
 8d4:	ff e1       	ldi	r31, 0x1F	; 31
 8d6:	f3 15       	cp	r31, r3
 8d8:	d8 f0       	brcs	.+54     	; 0x910 <__stack+0x11>
 8da:	8b 32       	cpi	r24, 0x2B	; 43
 8dc:	79 f0       	breq	.+30     	; 0x8fc <vfprintf+0x84>
 8de:	38 f4       	brcc	.+14     	; 0x8ee <vfprintf+0x76>
 8e0:	80 32       	cpi	r24, 0x20	; 32
 8e2:	79 f0       	breq	.+30     	; 0x902 <__stack+0x3>
 8e4:	83 32       	cpi	r24, 0x23	; 35
 8e6:	a1 f4       	brne	.+40     	; 0x910 <__stack+0x11>
 8e8:	23 2d       	mov	r18, r3
 8ea:	20 61       	ori	r18, 0x10	; 16
 8ec:	1d c0       	rjmp	.+58     	; 0x928 <__stack+0x29>
 8ee:	8d 32       	cpi	r24, 0x2D	; 45
 8f0:	61 f0       	breq	.+24     	; 0x90a <__stack+0xb>
 8f2:	80 33       	cpi	r24, 0x30	; 48
 8f4:	69 f4       	brne	.+26     	; 0x910 <__stack+0x11>
 8f6:	23 2d       	mov	r18, r3
 8f8:	21 60       	ori	r18, 0x01	; 1
 8fa:	16 c0       	rjmp	.+44     	; 0x928 <__stack+0x29>
 8fc:	83 2d       	mov	r24, r3
 8fe:	82 60       	ori	r24, 0x02	; 2
 900:	38 2e       	mov	r3, r24
 902:	e3 2d       	mov	r30, r3
 904:	e4 60       	ori	r30, 0x04	; 4
 906:	3e 2e       	mov	r3, r30
 908:	2a c0       	rjmp	.+84     	; 0x95e <__stack+0x5f>
 90a:	f3 2d       	mov	r31, r3
 90c:	f8 60       	ori	r31, 0x08	; 8
 90e:	1d c0       	rjmp	.+58     	; 0x94a <__stack+0x4b>
 910:	37 fc       	sbrc	r3, 7
 912:	2d c0       	rjmp	.+90     	; 0x96e <__stack+0x6f>
 914:	20 ed       	ldi	r18, 0xD0	; 208
 916:	28 0f       	add	r18, r24
 918:	2a 30       	cpi	r18, 0x0A	; 10
 91a:	40 f0       	brcs	.+16     	; 0x92c <__stack+0x2d>
 91c:	8e 32       	cpi	r24, 0x2E	; 46
 91e:	b9 f4       	brne	.+46     	; 0x94e <__stack+0x4f>
 920:	36 fc       	sbrc	r3, 6
 922:	81 c1       	rjmp	.+770    	; 0xc26 <__stack+0x327>
 924:	23 2d       	mov	r18, r3
 926:	20 64       	ori	r18, 0x40	; 64
 928:	32 2e       	mov	r3, r18
 92a:	19 c0       	rjmp	.+50     	; 0x95e <__stack+0x5f>
 92c:	36 fe       	sbrs	r3, 6
 92e:	06 c0       	rjmp	.+12     	; 0x93c <__stack+0x3d>
 930:	8a e0       	ldi	r24, 0x0A	; 10
 932:	98 9e       	mul	r9, r24
 934:	20 0d       	add	r18, r0
 936:	11 24       	eor	r1, r1
 938:	92 2e       	mov	r9, r18
 93a:	11 c0       	rjmp	.+34     	; 0x95e <__stack+0x5f>
 93c:	ea e0       	ldi	r30, 0x0A	; 10
 93e:	2e 9e       	mul	r2, r30
 940:	20 0d       	add	r18, r0
 942:	11 24       	eor	r1, r1
 944:	22 2e       	mov	r2, r18
 946:	f3 2d       	mov	r31, r3
 948:	f0 62       	ori	r31, 0x20	; 32
 94a:	3f 2e       	mov	r3, r31
 94c:	08 c0       	rjmp	.+16     	; 0x95e <__stack+0x5f>
 94e:	8c 36       	cpi	r24, 0x6C	; 108
 950:	21 f4       	brne	.+8      	; 0x95a <__stack+0x5b>
 952:	83 2d       	mov	r24, r3
 954:	80 68       	ori	r24, 0x80	; 128
 956:	38 2e       	mov	r3, r24
 958:	02 c0       	rjmp	.+4      	; 0x95e <__stack+0x5f>
 95a:	88 36       	cpi	r24, 0x68	; 104
 95c:	41 f4       	brne	.+16     	; 0x96e <__stack+0x6f>
 95e:	f7 01       	movw	r30, r14
 960:	93 fd       	sbrc	r25, 3
 962:	85 91       	lpm	r24, Z+
 964:	93 ff       	sbrs	r25, 3
 966:	81 91       	ld	r24, Z+
 968:	7f 01       	movw	r14, r30
 96a:	81 11       	cpse	r24, r1
 96c:	b3 cf       	rjmp	.-154    	; 0x8d4 <vfprintf+0x5c>
 96e:	98 2f       	mov	r25, r24
 970:	9f 7d       	andi	r25, 0xDF	; 223
 972:	95 54       	subi	r25, 0x45	; 69
 974:	93 30       	cpi	r25, 0x03	; 3
 976:	28 f4       	brcc	.+10     	; 0x982 <__stack+0x83>
 978:	0c 5f       	subi	r16, 0xFC	; 252
 97a:	1f 4f       	sbci	r17, 0xFF	; 255
 97c:	9f e3       	ldi	r25, 0x3F	; 63
 97e:	99 83       	std	Y+1, r25	; 0x01
 980:	0d c0       	rjmp	.+26     	; 0x99c <__stack+0x9d>
 982:	83 36       	cpi	r24, 0x63	; 99
 984:	31 f0       	breq	.+12     	; 0x992 <__stack+0x93>
 986:	83 37       	cpi	r24, 0x73	; 115
 988:	71 f0       	breq	.+28     	; 0x9a6 <__stack+0xa7>
 98a:	83 35       	cpi	r24, 0x53	; 83
 98c:	09 f0       	breq	.+2      	; 0x990 <__stack+0x91>
 98e:	59 c0       	rjmp	.+178    	; 0xa42 <__stack+0x143>
 990:	21 c0       	rjmp	.+66     	; 0x9d4 <__stack+0xd5>
 992:	f8 01       	movw	r30, r16
 994:	80 81       	ld	r24, Z
 996:	89 83       	std	Y+1, r24	; 0x01
 998:	0e 5f       	subi	r16, 0xFE	; 254
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	88 24       	eor	r8, r8
 99e:	83 94       	inc	r8
 9a0:	91 2c       	mov	r9, r1
 9a2:	53 01       	movw	r10, r6
 9a4:	13 c0       	rjmp	.+38     	; 0x9cc <__stack+0xcd>
 9a6:	28 01       	movw	r4, r16
 9a8:	f2 e0       	ldi	r31, 0x02	; 2
 9aa:	4f 0e       	add	r4, r31
 9ac:	51 1c       	adc	r5, r1
 9ae:	f8 01       	movw	r30, r16
 9b0:	a0 80       	ld	r10, Z
 9b2:	b1 80       	ldd	r11, Z+1	; 0x01
 9b4:	36 fe       	sbrs	r3, 6
 9b6:	03 c0       	rjmp	.+6      	; 0x9be <__stack+0xbf>
 9b8:	69 2d       	mov	r22, r9
 9ba:	70 e0       	ldi	r23, 0x00	; 0
 9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <__stack+0xc3>
 9be:	6f ef       	ldi	r22, 0xFF	; 255
 9c0:	7f ef       	ldi	r23, 0xFF	; 255
 9c2:	c5 01       	movw	r24, r10
 9c4:	0e 94 28 06 	call	0xc50	; 0xc50 <strnlen>
 9c8:	4c 01       	movw	r8, r24
 9ca:	82 01       	movw	r16, r4
 9cc:	f3 2d       	mov	r31, r3
 9ce:	ff 77       	andi	r31, 0x7F	; 127
 9d0:	3f 2e       	mov	r3, r31
 9d2:	16 c0       	rjmp	.+44     	; 0xa00 <__stack+0x101>
 9d4:	28 01       	movw	r4, r16
 9d6:	22 e0       	ldi	r18, 0x02	; 2
 9d8:	42 0e       	add	r4, r18
 9da:	51 1c       	adc	r5, r1
 9dc:	f8 01       	movw	r30, r16
 9de:	a0 80       	ld	r10, Z
 9e0:	b1 80       	ldd	r11, Z+1	; 0x01
 9e2:	36 fe       	sbrs	r3, 6
 9e4:	03 c0       	rjmp	.+6      	; 0x9ec <__stack+0xed>
 9e6:	69 2d       	mov	r22, r9
 9e8:	70 e0       	ldi	r23, 0x00	; 0
 9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <__stack+0xf1>
 9ec:	6f ef       	ldi	r22, 0xFF	; 255
 9ee:	7f ef       	ldi	r23, 0xFF	; 255
 9f0:	c5 01       	movw	r24, r10
 9f2:	0e 94 1d 06 	call	0xc3a	; 0xc3a <strnlen_P>
 9f6:	4c 01       	movw	r8, r24
 9f8:	f3 2d       	mov	r31, r3
 9fa:	f0 68       	ori	r31, 0x80	; 128
 9fc:	3f 2e       	mov	r3, r31
 9fe:	82 01       	movw	r16, r4
 a00:	33 fc       	sbrc	r3, 3
 a02:	1b c0       	rjmp	.+54     	; 0xa3a <__stack+0x13b>
 a04:	82 2d       	mov	r24, r2
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	88 16       	cp	r8, r24
 a0a:	99 06       	cpc	r9, r25
 a0c:	b0 f4       	brcc	.+44     	; 0xa3a <__stack+0x13b>
 a0e:	b6 01       	movw	r22, r12
 a10:	80 e2       	ldi	r24, 0x20	; 32
 a12:	90 e0       	ldi	r25, 0x00	; 0
 a14:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 a18:	2a 94       	dec	r2
 a1a:	f4 cf       	rjmp	.-24     	; 0xa04 <__stack+0x105>
 a1c:	f5 01       	movw	r30, r10
 a1e:	37 fc       	sbrc	r3, 7
 a20:	85 91       	lpm	r24, Z+
 a22:	37 fe       	sbrs	r3, 7
 a24:	81 91       	ld	r24, Z+
 a26:	5f 01       	movw	r10, r30
 a28:	b6 01       	movw	r22, r12
 a2a:	90 e0       	ldi	r25, 0x00	; 0
 a2c:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 a30:	21 10       	cpse	r2, r1
 a32:	2a 94       	dec	r2
 a34:	21 e0       	ldi	r18, 0x01	; 1
 a36:	82 1a       	sub	r8, r18
 a38:	91 08       	sbc	r9, r1
 a3a:	81 14       	cp	r8, r1
 a3c:	91 04       	cpc	r9, r1
 a3e:	71 f7       	brne	.-36     	; 0xa1c <__stack+0x11d>
 a40:	e8 c0       	rjmp	.+464    	; 0xc12 <__stack+0x313>
 a42:	84 36       	cpi	r24, 0x64	; 100
 a44:	11 f0       	breq	.+4      	; 0xa4a <__stack+0x14b>
 a46:	89 36       	cpi	r24, 0x69	; 105
 a48:	41 f5       	brne	.+80     	; 0xa9a <__stack+0x19b>
 a4a:	f8 01       	movw	r30, r16
 a4c:	37 fe       	sbrs	r3, 7
 a4e:	07 c0       	rjmp	.+14     	; 0xa5e <__stack+0x15f>
 a50:	60 81       	ld	r22, Z
 a52:	71 81       	ldd	r23, Z+1	; 0x01
 a54:	82 81       	ldd	r24, Z+2	; 0x02
 a56:	93 81       	ldd	r25, Z+3	; 0x03
 a58:	0c 5f       	subi	r16, 0xFC	; 252
 a5a:	1f 4f       	sbci	r17, 0xFF	; 255
 a5c:	08 c0       	rjmp	.+16     	; 0xa6e <__stack+0x16f>
 a5e:	60 81       	ld	r22, Z
 a60:	71 81       	ldd	r23, Z+1	; 0x01
 a62:	07 2e       	mov	r0, r23
 a64:	00 0c       	add	r0, r0
 a66:	88 0b       	sbc	r24, r24
 a68:	99 0b       	sbc	r25, r25
 a6a:	0e 5f       	subi	r16, 0xFE	; 254
 a6c:	1f 4f       	sbci	r17, 0xFF	; 255
 a6e:	f3 2d       	mov	r31, r3
 a70:	ff 76       	andi	r31, 0x6F	; 111
 a72:	3f 2e       	mov	r3, r31
 a74:	97 ff       	sbrs	r25, 7
 a76:	09 c0       	rjmp	.+18     	; 0xa8a <__stack+0x18b>
 a78:	90 95       	com	r25
 a7a:	80 95       	com	r24
 a7c:	70 95       	com	r23
 a7e:	61 95       	neg	r22
 a80:	7f 4f       	sbci	r23, 0xFF	; 255
 a82:	8f 4f       	sbci	r24, 0xFF	; 255
 a84:	9f 4f       	sbci	r25, 0xFF	; 255
 a86:	f0 68       	ori	r31, 0x80	; 128
 a88:	3f 2e       	mov	r3, r31
 a8a:	2a e0       	ldi	r18, 0x0A	; 10
 a8c:	30 e0       	ldi	r19, 0x00	; 0
 a8e:	a3 01       	movw	r20, r6
 a90:	0e 94 6f 06 	call	0xcde	; 0xcde <__ultoa_invert>
 a94:	88 2e       	mov	r8, r24
 a96:	86 18       	sub	r8, r6
 a98:	45 c0       	rjmp	.+138    	; 0xb24 <__stack+0x225>
 a9a:	85 37       	cpi	r24, 0x75	; 117
 a9c:	31 f4       	brne	.+12     	; 0xaaa <__stack+0x1ab>
 a9e:	23 2d       	mov	r18, r3
 aa0:	2f 7e       	andi	r18, 0xEF	; 239
 aa2:	b2 2e       	mov	r11, r18
 aa4:	2a e0       	ldi	r18, 0x0A	; 10
 aa6:	30 e0       	ldi	r19, 0x00	; 0
 aa8:	25 c0       	rjmp	.+74     	; 0xaf4 <__stack+0x1f5>
 aaa:	93 2d       	mov	r25, r3
 aac:	99 7f       	andi	r25, 0xF9	; 249
 aae:	b9 2e       	mov	r11, r25
 ab0:	8f 36       	cpi	r24, 0x6F	; 111
 ab2:	c1 f0       	breq	.+48     	; 0xae4 <__stack+0x1e5>
 ab4:	18 f4       	brcc	.+6      	; 0xabc <__stack+0x1bd>
 ab6:	88 35       	cpi	r24, 0x58	; 88
 ab8:	79 f0       	breq	.+30     	; 0xad8 <__stack+0x1d9>
 aba:	b5 c0       	rjmp	.+362    	; 0xc26 <__stack+0x327>
 abc:	80 37       	cpi	r24, 0x70	; 112
 abe:	19 f0       	breq	.+6      	; 0xac6 <__stack+0x1c7>
 ac0:	88 37       	cpi	r24, 0x78	; 120
 ac2:	21 f0       	breq	.+8      	; 0xacc <__stack+0x1cd>
 ac4:	b0 c0       	rjmp	.+352    	; 0xc26 <__stack+0x327>
 ac6:	e9 2f       	mov	r30, r25
 ac8:	e0 61       	ori	r30, 0x10	; 16
 aca:	be 2e       	mov	r11, r30
 acc:	b4 fe       	sbrs	r11, 4
 ace:	0d c0       	rjmp	.+26     	; 0xaea <__stack+0x1eb>
 ad0:	fb 2d       	mov	r31, r11
 ad2:	f4 60       	ori	r31, 0x04	; 4
 ad4:	bf 2e       	mov	r11, r31
 ad6:	09 c0       	rjmp	.+18     	; 0xaea <__stack+0x1eb>
 ad8:	34 fe       	sbrs	r3, 4
 ada:	0a c0       	rjmp	.+20     	; 0xaf0 <__stack+0x1f1>
 adc:	29 2f       	mov	r18, r25
 ade:	26 60       	ori	r18, 0x06	; 6
 ae0:	b2 2e       	mov	r11, r18
 ae2:	06 c0       	rjmp	.+12     	; 0xaf0 <__stack+0x1f1>
 ae4:	28 e0       	ldi	r18, 0x08	; 8
 ae6:	30 e0       	ldi	r19, 0x00	; 0
 ae8:	05 c0       	rjmp	.+10     	; 0xaf4 <__stack+0x1f5>
 aea:	20 e1       	ldi	r18, 0x10	; 16
 aec:	30 e0       	ldi	r19, 0x00	; 0
 aee:	02 c0       	rjmp	.+4      	; 0xaf4 <__stack+0x1f5>
 af0:	20 e1       	ldi	r18, 0x10	; 16
 af2:	32 e0       	ldi	r19, 0x02	; 2
 af4:	f8 01       	movw	r30, r16
 af6:	b7 fe       	sbrs	r11, 7
 af8:	07 c0       	rjmp	.+14     	; 0xb08 <__stack+0x209>
 afa:	60 81       	ld	r22, Z
 afc:	71 81       	ldd	r23, Z+1	; 0x01
 afe:	82 81       	ldd	r24, Z+2	; 0x02
 b00:	93 81       	ldd	r25, Z+3	; 0x03
 b02:	0c 5f       	subi	r16, 0xFC	; 252
 b04:	1f 4f       	sbci	r17, 0xFF	; 255
 b06:	06 c0       	rjmp	.+12     	; 0xb14 <__stack+0x215>
 b08:	60 81       	ld	r22, Z
 b0a:	71 81       	ldd	r23, Z+1	; 0x01
 b0c:	80 e0       	ldi	r24, 0x00	; 0
 b0e:	90 e0       	ldi	r25, 0x00	; 0
 b10:	0e 5f       	subi	r16, 0xFE	; 254
 b12:	1f 4f       	sbci	r17, 0xFF	; 255
 b14:	a3 01       	movw	r20, r6
 b16:	0e 94 6f 06 	call	0xcde	; 0xcde <__ultoa_invert>
 b1a:	88 2e       	mov	r8, r24
 b1c:	86 18       	sub	r8, r6
 b1e:	fb 2d       	mov	r31, r11
 b20:	ff 77       	andi	r31, 0x7F	; 127
 b22:	3f 2e       	mov	r3, r31
 b24:	36 fe       	sbrs	r3, 6
 b26:	0d c0       	rjmp	.+26     	; 0xb42 <__stack+0x243>
 b28:	23 2d       	mov	r18, r3
 b2a:	2e 7f       	andi	r18, 0xFE	; 254
 b2c:	a2 2e       	mov	r10, r18
 b2e:	89 14       	cp	r8, r9
 b30:	58 f4       	brcc	.+22     	; 0xb48 <__stack+0x249>
 b32:	34 fe       	sbrs	r3, 4
 b34:	0b c0       	rjmp	.+22     	; 0xb4c <__stack+0x24d>
 b36:	32 fc       	sbrc	r3, 2
 b38:	09 c0       	rjmp	.+18     	; 0xb4c <__stack+0x24d>
 b3a:	83 2d       	mov	r24, r3
 b3c:	8e 7e       	andi	r24, 0xEE	; 238
 b3e:	a8 2e       	mov	r10, r24
 b40:	05 c0       	rjmp	.+10     	; 0xb4c <__stack+0x24d>
 b42:	b8 2c       	mov	r11, r8
 b44:	a3 2c       	mov	r10, r3
 b46:	03 c0       	rjmp	.+6      	; 0xb4e <__stack+0x24f>
 b48:	b8 2c       	mov	r11, r8
 b4a:	01 c0       	rjmp	.+2      	; 0xb4e <__stack+0x24f>
 b4c:	b9 2c       	mov	r11, r9
 b4e:	a4 fe       	sbrs	r10, 4
 b50:	0f c0       	rjmp	.+30     	; 0xb70 <__stack+0x271>
 b52:	fe 01       	movw	r30, r28
 b54:	e8 0d       	add	r30, r8
 b56:	f1 1d       	adc	r31, r1
 b58:	80 81       	ld	r24, Z
 b5a:	80 33       	cpi	r24, 0x30	; 48
 b5c:	21 f4       	brne	.+8      	; 0xb66 <__stack+0x267>
 b5e:	9a 2d       	mov	r25, r10
 b60:	99 7e       	andi	r25, 0xE9	; 233
 b62:	a9 2e       	mov	r10, r25
 b64:	09 c0       	rjmp	.+18     	; 0xb78 <__stack+0x279>
 b66:	a2 fe       	sbrs	r10, 2
 b68:	06 c0       	rjmp	.+12     	; 0xb76 <__stack+0x277>
 b6a:	b3 94       	inc	r11
 b6c:	b3 94       	inc	r11
 b6e:	04 c0       	rjmp	.+8      	; 0xb78 <__stack+0x279>
 b70:	8a 2d       	mov	r24, r10
 b72:	86 78       	andi	r24, 0x86	; 134
 b74:	09 f0       	breq	.+2      	; 0xb78 <__stack+0x279>
 b76:	b3 94       	inc	r11
 b78:	a3 fc       	sbrc	r10, 3
 b7a:	11 c0       	rjmp	.+34     	; 0xb9e <__stack+0x29f>
 b7c:	a0 fe       	sbrs	r10, 0
 b7e:	06 c0       	rjmp	.+12     	; 0xb8c <__stack+0x28d>
 b80:	b2 14       	cp	r11, r2
 b82:	88 f4       	brcc	.+34     	; 0xba6 <__stack+0x2a7>
 b84:	28 0c       	add	r2, r8
 b86:	92 2c       	mov	r9, r2
 b88:	9b 18       	sub	r9, r11
 b8a:	0e c0       	rjmp	.+28     	; 0xba8 <__stack+0x2a9>
 b8c:	b2 14       	cp	r11, r2
 b8e:	60 f4       	brcc	.+24     	; 0xba8 <__stack+0x2a9>
 b90:	b6 01       	movw	r22, r12
 b92:	80 e2       	ldi	r24, 0x20	; 32
 b94:	90 e0       	ldi	r25, 0x00	; 0
 b96:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 b9a:	b3 94       	inc	r11
 b9c:	f7 cf       	rjmp	.-18     	; 0xb8c <__stack+0x28d>
 b9e:	b2 14       	cp	r11, r2
 ba0:	18 f4       	brcc	.+6      	; 0xba8 <__stack+0x2a9>
 ba2:	2b 18       	sub	r2, r11
 ba4:	02 c0       	rjmp	.+4      	; 0xbaa <__stack+0x2ab>
 ba6:	98 2c       	mov	r9, r8
 ba8:	21 2c       	mov	r2, r1
 baa:	a4 fe       	sbrs	r10, 4
 bac:	10 c0       	rjmp	.+32     	; 0xbce <__stack+0x2cf>
 bae:	b6 01       	movw	r22, r12
 bb0:	80 e3       	ldi	r24, 0x30	; 48
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 bb8:	a2 fe       	sbrs	r10, 2
 bba:	17 c0       	rjmp	.+46     	; 0xbea <__stack+0x2eb>
 bbc:	a1 fc       	sbrc	r10, 1
 bbe:	03 c0       	rjmp	.+6      	; 0xbc6 <__stack+0x2c7>
 bc0:	88 e7       	ldi	r24, 0x78	; 120
 bc2:	90 e0       	ldi	r25, 0x00	; 0
 bc4:	02 c0       	rjmp	.+4      	; 0xbca <__stack+0x2cb>
 bc6:	88 e5       	ldi	r24, 0x58	; 88
 bc8:	90 e0       	ldi	r25, 0x00	; 0
 bca:	b6 01       	movw	r22, r12
 bcc:	0c c0       	rjmp	.+24     	; 0xbe6 <__stack+0x2e7>
 bce:	8a 2d       	mov	r24, r10
 bd0:	86 78       	andi	r24, 0x86	; 134
 bd2:	59 f0       	breq	.+22     	; 0xbea <__stack+0x2eb>
 bd4:	a1 fe       	sbrs	r10, 1
 bd6:	02 c0       	rjmp	.+4      	; 0xbdc <__stack+0x2dd>
 bd8:	8b e2       	ldi	r24, 0x2B	; 43
 bda:	01 c0       	rjmp	.+2      	; 0xbde <__stack+0x2df>
 bdc:	80 e2       	ldi	r24, 0x20	; 32
 bde:	a7 fc       	sbrc	r10, 7
 be0:	8d e2       	ldi	r24, 0x2D	; 45
 be2:	b6 01       	movw	r22, r12
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 bea:	89 14       	cp	r8, r9
 bec:	38 f4       	brcc	.+14     	; 0xbfc <__stack+0x2fd>
 bee:	b6 01       	movw	r22, r12
 bf0:	80 e3       	ldi	r24, 0x30	; 48
 bf2:	90 e0       	ldi	r25, 0x00	; 0
 bf4:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 bf8:	9a 94       	dec	r9
 bfa:	f7 cf       	rjmp	.-18     	; 0xbea <__stack+0x2eb>
 bfc:	8a 94       	dec	r8
 bfe:	f3 01       	movw	r30, r6
 c00:	e8 0d       	add	r30, r8
 c02:	f1 1d       	adc	r31, r1
 c04:	80 81       	ld	r24, Z
 c06:	b6 01       	movw	r22, r12
 c08:	90 e0       	ldi	r25, 0x00	; 0
 c0a:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 c0e:	81 10       	cpse	r8, r1
 c10:	f5 cf       	rjmp	.-22     	; 0xbfc <__stack+0x2fd>
 c12:	22 20       	and	r2, r2
 c14:	09 f4       	brne	.+2      	; 0xc18 <__stack+0x319>
 c16:	42 ce       	rjmp	.-892    	; 0x89c <vfprintf+0x24>
 c18:	b6 01       	movw	r22, r12
 c1a:	80 e2       	ldi	r24, 0x20	; 32
 c1c:	90 e0       	ldi	r25, 0x00	; 0
 c1e:	0e 94 33 06 	call	0xc66	; 0xc66 <fputc>
 c22:	2a 94       	dec	r2
 c24:	f6 cf       	rjmp	.-20     	; 0xc12 <__stack+0x313>
 c26:	f6 01       	movw	r30, r12
 c28:	86 81       	ldd	r24, Z+6	; 0x06
 c2a:	97 81       	ldd	r25, Z+7	; 0x07
 c2c:	02 c0       	rjmp	.+4      	; 0xc32 <__stack+0x333>
 c2e:	8f ef       	ldi	r24, 0xFF	; 255
 c30:	9f ef       	ldi	r25, 0xFF	; 255
 c32:	2b 96       	adiw	r28, 0x0b	; 11
 c34:	e2 e1       	ldi	r30, 0x12	; 18
 c36:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__epilogue_restores__>

00000c3a <strnlen_P>:
 c3a:	fc 01       	movw	r30, r24
 c3c:	05 90       	lpm	r0, Z+
 c3e:	61 50       	subi	r22, 0x01	; 1
 c40:	70 40       	sbci	r23, 0x00	; 0
 c42:	01 10       	cpse	r0, r1
 c44:	d8 f7       	brcc	.-10     	; 0xc3c <strnlen_P+0x2>
 c46:	80 95       	com	r24
 c48:	90 95       	com	r25
 c4a:	8e 0f       	add	r24, r30
 c4c:	9f 1f       	adc	r25, r31
 c4e:	08 95       	ret

00000c50 <strnlen>:
 c50:	fc 01       	movw	r30, r24
 c52:	61 50       	subi	r22, 0x01	; 1
 c54:	70 40       	sbci	r23, 0x00	; 0
 c56:	01 90       	ld	r0, Z+
 c58:	01 10       	cpse	r0, r1
 c5a:	d8 f7       	brcc	.-10     	; 0xc52 <strnlen+0x2>
 c5c:	80 95       	com	r24
 c5e:	90 95       	com	r25
 c60:	8e 0f       	add	r24, r30
 c62:	9f 1f       	adc	r25, r31
 c64:	08 95       	ret

00000c66 <fputc>:
 c66:	0f 93       	push	r16
 c68:	1f 93       	push	r17
 c6a:	cf 93       	push	r28
 c6c:	df 93       	push	r29
 c6e:	fb 01       	movw	r30, r22
 c70:	23 81       	ldd	r18, Z+3	; 0x03
 c72:	21 fd       	sbrc	r18, 1
 c74:	03 c0       	rjmp	.+6      	; 0xc7c <fputc+0x16>
 c76:	8f ef       	ldi	r24, 0xFF	; 255
 c78:	9f ef       	ldi	r25, 0xFF	; 255
 c7a:	2c c0       	rjmp	.+88     	; 0xcd4 <fputc+0x6e>
 c7c:	22 ff       	sbrs	r18, 2
 c7e:	16 c0       	rjmp	.+44     	; 0xcac <fputc+0x46>
 c80:	46 81       	ldd	r20, Z+6	; 0x06
 c82:	57 81       	ldd	r21, Z+7	; 0x07
 c84:	24 81       	ldd	r18, Z+4	; 0x04
 c86:	35 81       	ldd	r19, Z+5	; 0x05
 c88:	42 17       	cp	r20, r18
 c8a:	53 07       	cpc	r21, r19
 c8c:	44 f4       	brge	.+16     	; 0xc9e <fputc+0x38>
 c8e:	a0 81       	ld	r26, Z
 c90:	b1 81       	ldd	r27, Z+1	; 0x01
 c92:	9d 01       	movw	r18, r26
 c94:	2f 5f       	subi	r18, 0xFF	; 255
 c96:	3f 4f       	sbci	r19, 0xFF	; 255
 c98:	31 83       	std	Z+1, r19	; 0x01
 c9a:	20 83       	st	Z, r18
 c9c:	8c 93       	st	X, r24
 c9e:	26 81       	ldd	r18, Z+6	; 0x06
 ca0:	37 81       	ldd	r19, Z+7	; 0x07
 ca2:	2f 5f       	subi	r18, 0xFF	; 255
 ca4:	3f 4f       	sbci	r19, 0xFF	; 255
 ca6:	37 83       	std	Z+7, r19	; 0x07
 ca8:	26 83       	std	Z+6, r18	; 0x06
 caa:	14 c0       	rjmp	.+40     	; 0xcd4 <fputc+0x6e>
 cac:	8b 01       	movw	r16, r22
 cae:	ec 01       	movw	r28, r24
 cb0:	fb 01       	movw	r30, r22
 cb2:	00 84       	ldd	r0, Z+8	; 0x08
 cb4:	f1 85       	ldd	r31, Z+9	; 0x09
 cb6:	e0 2d       	mov	r30, r0
 cb8:	09 95       	icall
 cba:	89 2b       	or	r24, r25
 cbc:	e1 f6       	brne	.-72     	; 0xc76 <fputc+0x10>
 cbe:	d8 01       	movw	r26, r16
 cc0:	16 96       	adiw	r26, 0x06	; 6
 cc2:	8d 91       	ld	r24, X+
 cc4:	9c 91       	ld	r25, X
 cc6:	17 97       	sbiw	r26, 0x07	; 7
 cc8:	01 96       	adiw	r24, 0x01	; 1
 cca:	17 96       	adiw	r26, 0x07	; 7
 ccc:	9c 93       	st	X, r25
 cce:	8e 93       	st	-X, r24
 cd0:	16 97       	sbiw	r26, 0x06	; 6
 cd2:	ce 01       	movw	r24, r28
 cd4:	df 91       	pop	r29
 cd6:	cf 91       	pop	r28
 cd8:	1f 91       	pop	r17
 cda:	0f 91       	pop	r16
 cdc:	08 95       	ret

00000cde <__ultoa_invert>:
 cde:	fa 01       	movw	r30, r20
 ce0:	aa 27       	eor	r26, r26
 ce2:	28 30       	cpi	r18, 0x08	; 8
 ce4:	51 f1       	breq	.+84     	; 0xd3a <__ultoa_invert+0x5c>
 ce6:	20 31       	cpi	r18, 0x10	; 16
 ce8:	81 f1       	breq	.+96     	; 0xd4a <__ultoa_invert+0x6c>
 cea:	e8 94       	clt
 cec:	6f 93       	push	r22
 cee:	6e 7f       	andi	r22, 0xFE	; 254
 cf0:	6e 5f       	subi	r22, 0xFE	; 254
 cf2:	7f 4f       	sbci	r23, 0xFF	; 255
 cf4:	8f 4f       	sbci	r24, 0xFF	; 255
 cf6:	9f 4f       	sbci	r25, 0xFF	; 255
 cf8:	af 4f       	sbci	r26, 0xFF	; 255
 cfa:	b1 e0       	ldi	r27, 0x01	; 1
 cfc:	3e d0       	rcall	.+124    	; 0xd7a <__ultoa_invert+0x9c>
 cfe:	b4 e0       	ldi	r27, 0x04	; 4
 d00:	3c d0       	rcall	.+120    	; 0xd7a <__ultoa_invert+0x9c>
 d02:	67 0f       	add	r22, r23
 d04:	78 1f       	adc	r23, r24
 d06:	89 1f       	adc	r24, r25
 d08:	9a 1f       	adc	r25, r26
 d0a:	a1 1d       	adc	r26, r1
 d0c:	68 0f       	add	r22, r24
 d0e:	79 1f       	adc	r23, r25
 d10:	8a 1f       	adc	r24, r26
 d12:	91 1d       	adc	r25, r1
 d14:	a1 1d       	adc	r26, r1
 d16:	6a 0f       	add	r22, r26
 d18:	71 1d       	adc	r23, r1
 d1a:	81 1d       	adc	r24, r1
 d1c:	91 1d       	adc	r25, r1
 d1e:	a1 1d       	adc	r26, r1
 d20:	20 d0       	rcall	.+64     	; 0xd62 <__ultoa_invert+0x84>
 d22:	09 f4       	brne	.+2      	; 0xd26 <__ultoa_invert+0x48>
 d24:	68 94       	set
 d26:	3f 91       	pop	r19
 d28:	2a e0       	ldi	r18, 0x0A	; 10
 d2a:	26 9f       	mul	r18, r22
 d2c:	11 24       	eor	r1, r1
 d2e:	30 19       	sub	r19, r0
 d30:	30 5d       	subi	r19, 0xD0	; 208
 d32:	31 93       	st	Z+, r19
 d34:	de f6       	brtc	.-74     	; 0xcec <__ultoa_invert+0xe>
 d36:	cf 01       	movw	r24, r30
 d38:	08 95       	ret
 d3a:	46 2f       	mov	r20, r22
 d3c:	47 70       	andi	r20, 0x07	; 7
 d3e:	40 5d       	subi	r20, 0xD0	; 208
 d40:	41 93       	st	Z+, r20
 d42:	b3 e0       	ldi	r27, 0x03	; 3
 d44:	0f d0       	rcall	.+30     	; 0xd64 <__ultoa_invert+0x86>
 d46:	c9 f7       	brne	.-14     	; 0xd3a <__ultoa_invert+0x5c>
 d48:	f6 cf       	rjmp	.-20     	; 0xd36 <__ultoa_invert+0x58>
 d4a:	46 2f       	mov	r20, r22
 d4c:	4f 70       	andi	r20, 0x0F	; 15
 d4e:	40 5d       	subi	r20, 0xD0	; 208
 d50:	4a 33       	cpi	r20, 0x3A	; 58
 d52:	18 f0       	brcs	.+6      	; 0xd5a <__ultoa_invert+0x7c>
 d54:	49 5d       	subi	r20, 0xD9	; 217
 d56:	31 fd       	sbrc	r19, 1
 d58:	40 52       	subi	r20, 0x20	; 32
 d5a:	41 93       	st	Z+, r20
 d5c:	02 d0       	rcall	.+4      	; 0xd62 <__ultoa_invert+0x84>
 d5e:	a9 f7       	brne	.-22     	; 0xd4a <__ultoa_invert+0x6c>
 d60:	ea cf       	rjmp	.-44     	; 0xd36 <__ultoa_invert+0x58>
 d62:	b4 e0       	ldi	r27, 0x04	; 4
 d64:	a6 95       	lsr	r26
 d66:	97 95       	ror	r25
 d68:	87 95       	ror	r24
 d6a:	77 95       	ror	r23
 d6c:	67 95       	ror	r22
 d6e:	ba 95       	dec	r27
 d70:	c9 f7       	brne	.-14     	; 0xd64 <__ultoa_invert+0x86>
 d72:	00 97       	sbiw	r24, 0x00	; 0
 d74:	61 05       	cpc	r22, r1
 d76:	71 05       	cpc	r23, r1
 d78:	08 95       	ret
 d7a:	9b 01       	movw	r18, r22
 d7c:	ac 01       	movw	r20, r24
 d7e:	0a 2e       	mov	r0, r26
 d80:	06 94       	lsr	r0
 d82:	57 95       	ror	r21
 d84:	47 95       	ror	r20
 d86:	37 95       	ror	r19
 d88:	27 95       	ror	r18
 d8a:	ba 95       	dec	r27
 d8c:	c9 f7       	brne	.-14     	; 0xd80 <__ultoa_invert+0xa2>
 d8e:	62 0f       	add	r22, r18
 d90:	73 1f       	adc	r23, r19
 d92:	84 1f       	adc	r24, r20
 d94:	95 1f       	adc	r25, r21
 d96:	a0 1d       	adc	r26, r0
 d98:	08 95       	ret

00000d9a <__prologue_saves__>:
 d9a:	2f 92       	push	r2
 d9c:	3f 92       	push	r3
 d9e:	4f 92       	push	r4
 da0:	5f 92       	push	r5
 da2:	6f 92       	push	r6
 da4:	7f 92       	push	r7
 da6:	8f 92       	push	r8
 da8:	9f 92       	push	r9
 daa:	af 92       	push	r10
 dac:	bf 92       	push	r11
 dae:	cf 92       	push	r12
 db0:	df 92       	push	r13
 db2:	ef 92       	push	r14
 db4:	ff 92       	push	r15
 db6:	0f 93       	push	r16
 db8:	1f 93       	push	r17
 dba:	cf 93       	push	r28
 dbc:	df 93       	push	r29
 dbe:	cd b7       	in	r28, 0x3d	; 61
 dc0:	de b7       	in	r29, 0x3e	; 62
 dc2:	ca 1b       	sub	r28, r26
 dc4:	db 0b       	sbc	r29, r27
 dc6:	0f b6       	in	r0, 0x3f	; 63
 dc8:	f8 94       	cli
 dca:	de bf       	out	0x3e, r29	; 62
 dcc:	0f be       	out	0x3f, r0	; 63
 dce:	cd bf       	out	0x3d, r28	; 61
 dd0:	09 94       	ijmp

00000dd2 <__epilogue_restores__>:
 dd2:	2a 88       	ldd	r2, Y+18	; 0x12
 dd4:	39 88       	ldd	r3, Y+17	; 0x11
 dd6:	48 88       	ldd	r4, Y+16	; 0x10
 dd8:	5f 84       	ldd	r5, Y+15	; 0x0f
 dda:	6e 84       	ldd	r6, Y+14	; 0x0e
 ddc:	7d 84       	ldd	r7, Y+13	; 0x0d
 dde:	8c 84       	ldd	r8, Y+12	; 0x0c
 de0:	9b 84       	ldd	r9, Y+11	; 0x0b
 de2:	aa 84       	ldd	r10, Y+10	; 0x0a
 de4:	b9 84       	ldd	r11, Y+9	; 0x09
 de6:	c8 84       	ldd	r12, Y+8	; 0x08
 de8:	df 80       	ldd	r13, Y+7	; 0x07
 dea:	ee 80       	ldd	r14, Y+6	; 0x06
 dec:	fd 80       	ldd	r15, Y+5	; 0x05
 dee:	0c 81       	ldd	r16, Y+4	; 0x04
 df0:	1b 81       	ldd	r17, Y+3	; 0x03
 df2:	aa 81       	ldd	r26, Y+2	; 0x02
 df4:	b9 81       	ldd	r27, Y+1	; 0x01
 df6:	ce 0f       	add	r28, r30
 df8:	d1 1d       	adc	r29, r1
 dfa:	0f b6       	in	r0, 0x3f	; 63
 dfc:	f8 94       	cli
 dfe:	de bf       	out	0x3e, r29	; 62
 e00:	0f be       	out	0x3f, r0	; 63
 e02:	cd bf       	out	0x3d, r28	; 61
 e04:	ed 01       	movw	r28, r26
 e06:	08 95       	ret

00000e08 <_exit>:
 e08:	f8 94       	cli

00000e0a <__stop_program>:
 e0a:	ff cf       	rjmp	.-2      	; 0xe0a <__stop_program>
