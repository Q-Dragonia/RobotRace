
RobotRace.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000b88  00000c1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b88  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800118  00800118  00000c34  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c34  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000143c  00000000  00000000  00000db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ac  00000000  00000000  000021f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000885  00000000  00000000  00002aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00003328  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000674  00000000  00000000  00003528  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008f5  00000000  00000000  00003b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00004491  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e8       	ldi	r30, 0x88	; 136
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e1       	ldi	r26, 0x18	; 24
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a9 31       	cpi	r26, 0x19	; 25
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 12 02 	call	0x424	; 0x424 <main>
  9e:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ADC>:
	// Calculate pulse width
	float set = (float)angle / (float)max_angle; // Ratio of degrees
	set = (((float)SERVO_MAX - (float)SERVO_MIN) * set) + (float)SERVO_MIN; // Find the value for PWM
	uint16_t point = (uint16_t)set;
	update_pwm(point);
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 60       	ori	r24, 0x07	; 7
  b8:	80 83       	st	Z, r24
  ba:	80 81       	ld	r24, Z
  bc:	80 68       	ori	r24, 0x80	; 128
  be:	80 83       	st	Z, r24
  c0:	08 95       	ret

000000c2 <readADC>:
  c2:	ec e7       	ldi	r30, 0x7C	; 124
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	90 81       	ld	r25, Z
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	89 2b       	or	r24, r25
  ce:	80 83       	st	Z, r24
  d0:	ea e7       	ldi	r30, 0x7A	; 122
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	80 64       	ori	r24, 0x40	; 64
  d8:	80 83       	st	Z, r24
  da:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  de:	86 fd       	sbrc	r24, 6
  e0:	fc cf       	rjmp	.-8      	; 0xda <readADC+0x18>
  e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  e6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  ea:	08 95       	ret

000000ec <custom_delay_ms>:
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	00 d0       	rcall	.+0      	; 0xf2 <custom_delay_ms+0x6>
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
  f6:	40 e0       	ldi	r20, 0x00	; 0
  f8:	50 e0       	ldi	r21, 0x00	; 0
  fa:	11 c0       	rjmp	.+34     	; 0x11e <custom_delay_ms+0x32>
  fc:	1a 82       	std	Y+2, r1	; 0x02
  fe:	19 82       	std	Y+1, r1	; 0x01
 100:	07 c0       	rjmp	.+14     	; 0x110 <custom_delay_ms+0x24>
 102:	00 00       	nop
 104:	29 81       	ldd	r18, Y+1	; 0x01
 106:	3a 81       	ldd	r19, Y+2	; 0x02
 108:	2f 5f       	subi	r18, 0xFF	; 255
 10a:	3f 4f       	sbci	r19, 0xFF	; 255
 10c:	3a 83       	std	Y+2, r19	; 0x02
 10e:	29 83       	std	Y+1, r18	; 0x01
 110:	29 81       	ldd	r18, Y+1	; 0x01
 112:	3a 81       	ldd	r19, Y+2	; 0x02
 114:	22 35       	cpi	r18, 0x52	; 82
 116:	33 40       	sbci	r19, 0x03	; 3
 118:	a0 f3       	brcs	.-24     	; 0x102 <custom_delay_ms+0x16>
 11a:	4f 5f       	subi	r20, 0xFF	; 255
 11c:	5f 4f       	sbci	r21, 0xFF	; 255
 11e:	48 17       	cp	r20, r24
 120:	59 07       	cpc	r21, r25
 122:	60 f3       	brcs	.-40     	; 0xfc <custom_delay_ms+0x10>
 124:	0f 90       	pop	r0
 126:	0f 90       	pop	r0
 128:	df 91       	pop	r29
 12a:	cf 91       	pop	r28
 12c:	08 95       	ret

0000012e <init_USART>:
 12e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 132:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 136:	88 e1       	ldi	r24, 0x18	; 24
 138:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 13c:	86 e0       	ldi	r24, 0x06	; 6
 13e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 142:	08 95       	ret

00000144 <transferMessage>:
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	cd b7       	in	r28, 0x3d	; 61
 14a:	de b7       	in	r29, 0x3e	; 62
 14c:	64 97       	sbiw	r28, 0x14	; 20
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	f8 94       	cli
 152:	de bf       	out	0x3e, r29	; 62
 154:	0f be       	out	0x3f, r0	; 63
 156:	cd bf       	out	0x3d, r28	; 61
 158:	9f 93       	push	r25
 15a:	8f 93       	push	r24
 15c:	84 e1       	ldi	r24, 0x14	; 20
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	9f 93       	push	r25
 162:	8f 93       	push	r24
 164:	1f 92       	push	r1
 166:	84 e1       	ldi	r24, 0x14	; 20
 168:	8f 93       	push	r24
 16a:	ce 01       	movw	r24, r28
 16c:	01 96       	adiw	r24, 0x01	; 1
 16e:	9f 93       	push	r25
 170:	8f 93       	push	r24
 172:	0e 94 ca 02 	call	0x594	; 0x594 <snprintf>
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	f8 94       	cli
 17a:	de bf       	out	0x3e, r29	; 62
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	cd bf       	out	0x3d, r28	; 61
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	08 c0       	rjmp	.+16     	; 0x196 <transferMessage+0x52>
 186:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 18a:	85 ff       	sbrs	r24, 5
 18c:	fc cf       	rjmp	.-8      	; 0x186 <transferMessage+0x42>
 18e:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 192:	2f 5f       	subi	r18, 0xFF	; 255
 194:	3f 4f       	sbci	r19, 0xFF	; 255
 196:	e1 e0       	ldi	r30, 0x01	; 1
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	ec 0f       	add	r30, r28
 19c:	fd 1f       	adc	r31, r29
 19e:	e2 0f       	add	r30, r18
 1a0:	f3 1f       	adc	r31, r19
 1a2:	90 81       	ld	r25, Z
 1a4:	91 11       	cpse	r25, r1
 1a6:	ef cf       	rjmp	.-34     	; 0x186 <transferMessage+0x42>
 1a8:	64 96       	adiw	r28, 0x14	; 20
 1aa:	0f b6       	in	r0, 0x3f	; 63
 1ac:	f8 94       	cli
 1ae:	de bf       	out	0x3e, r29	; 62
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	cd bf       	out	0x3d, r28	; 61
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <receiveMessage>:
 1ba:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1be:	88 23       	and	r24, r24
 1c0:	1c f4       	brge	.+6      	; 0x1c8 <receiveMessage+0xe>
 1c2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1c6:	08 95       	ret
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	08 95       	ret

000001cc <init_driving_PWM>:
 1cc:	8a b1       	in	r24, 0x0a	; 10
 1ce:	80 66       	ori	r24, 0x60	; 96
 1d0:	8a b9       	out	0x0a, r24	; 10
 1d2:	84 b5       	in	r24, 0x24	; 36
 1d4:	83 6a       	ori	r24, 0xA3	; 163
 1d6:	84 bd       	out	0x24, r24	; 36
 1d8:	85 b5       	in	r24, 0x25	; 37
 1da:	83 60       	ori	r24, 0x03	; 3
 1dc:	85 bd       	out	0x25, r24	; 37
 1de:	84 b1       	in	r24, 0x04	; 4
 1e0:	8c 60       	ori	r24, 0x0C	; 12
 1e2:	84 b9       	out	0x04, r24	; 4
 1e4:	08 95       	ret

000001e6 <setMotorASpeed>:
 1e6:	81 11       	cpse	r24, r1
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <setMotorASpeed+0x8>
 1ea:	18 bc       	out	0x28, r1	; 40
 1ec:	08 95       	ret
 1ee:	88 bd       	out	0x28, r24	; 40
 1f0:	08 95       	ret

000001f2 <setMotorBSpeed>:
 1f2:	81 11       	cpse	r24, r1
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <setMotorBSpeed+0x8>
 1f6:	17 bc       	out	0x27, r1	; 39
 1f8:	08 95       	ret
 1fa:	87 bd       	out	0x27, r24	; 39
 1fc:	08 95       	ret

000001fe <setMotorADirection>:
 1fe:	81 30       	cpi	r24, 0x01	; 1
 200:	21 f4       	brne	.+8      	; 0x20a <setMotorADirection+0xc>
 202:	85 b1       	in	r24, 0x05	; 5
 204:	84 60       	ori	r24, 0x04	; 4
 206:	85 b9       	out	0x05, r24	; 5
 208:	08 95       	ret
 20a:	85 b1       	in	r24, 0x05	; 5
 20c:	8b 7f       	andi	r24, 0xFB	; 251
 20e:	85 b9       	out	0x05, r24	; 5
 210:	08 95       	ret

00000212 <setMotorBDirection>:
 212:	81 30       	cpi	r24, 0x01	; 1
 214:	21 f4       	brne	.+8      	; 0x21e <setMotorBDirection+0xc>
 216:	85 b1       	in	r24, 0x05	; 5
 218:	88 60       	ori	r24, 0x08	; 8
 21a:	85 b9       	out	0x05, r24	; 5
 21c:	08 95       	ret
 21e:	85 b1       	in	r24, 0x05	; 5
 220:	87 7f       	andi	r24, 0xF7	; 247
 222:	85 b9       	out	0x05, r24	; 5
 224:	08 95       	ret

00000226 <Forward>:
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	83 ec       	ldi	r24, 0xC3	; 195
 22c:	99 e0       	ldi	r25, 0x09	; 9
 22e:	01 97       	sbiw	r24, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <Forward+0x8>
 232:	00 c0       	rjmp	.+0      	; 0x234 <Forward+0xe>
 234:	00 00       	nop
 236:	c2 e1       	ldi	r28, 0x12	; 18
 238:	d1 e0       	ldi	r29, 0x01	; 1
 23a:	88 81       	ld	r24, Y
 23c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
 240:	88 81       	ld	r24, Y
 242:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
 246:	83 ec       	ldi	r24, 0xC3	; 195
 248:	99 e0       	ldi	r25, 0x09	; 9
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <Forward+0x24>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <Forward+0x2a>
 250:	00 00       	nop
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <turnRight>:
 258:	83 ec       	ldi	r24, 0xC3	; 195
 25a:	99 e0       	ldi	r25, 0x09	; 9
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <turnRight+0x4>
 260:	00 c0       	rjmp	.+0      	; 0x262 <turnRight+0xa>
 262:	00 00       	nop
 264:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <turningSpeed>
 268:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
 26c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <driveSpeedFull>
 270:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
 274:	83 ec       	ldi	r24, 0xC3	; 195
 276:	99 e0       	ldi	r25, 0x09	; 9
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <turnRight+0x20>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <turnRight+0x26>
 27e:	00 00       	nop
 280:	08 95       	ret

00000282 <turnRighty>:
 282:	83 ec       	ldi	r24, 0xC3	; 195
 284:	99 e0       	ldi	r25, 0x09	; 9
 286:	01 97       	sbiw	r24, 0x01	; 1
 288:	f1 f7       	brne	.-4      	; 0x286 <turnRighty+0x4>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <turnRighty+0xa>
 28c:	00 00       	nop
 28e:	84 eb       	ldi	r24, 0xB4	; 180
 290:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
 294:	8e e1       	ldi	r24, 0x1E	; 30
 296:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
 29a:	83 ec       	ldi	r24, 0xC3	; 195
 29c:	99 e0       	ldi	r25, 0x09	; 9
 29e:	01 97       	sbiw	r24, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <turnRighty+0x1c>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <turnRighty+0x22>
 2a4:	00 00       	nop
 2a6:	08 95       	ret

000002a8 <turnHardRight>:
 2a8:	83 ec       	ldi	r24, 0xC3	; 195
 2aa:	99 e0       	ldi	r25, 0x09	; 9
 2ac:	01 97       	sbiw	r24, 0x01	; 1
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <turnHardRight+0x4>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <turnHardRight+0xa>
 2b2:	00 00       	nop
 2b4:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <hardTurningSPeed>
 2b8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
 2bc:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <driveSpeedTruning>
 2c0:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
 2c4:	83 ec       	ldi	r24, 0xC3	; 195
 2c6:	99 e0       	ldi	r25, 0x09	; 9
 2c8:	01 97       	sbiw	r24, 0x01	; 1
 2ca:	f1 f7       	brne	.-4      	; 0x2c8 <turnHardRight+0x20>
 2cc:	00 c0       	rjmp	.+0      	; 0x2ce <turnHardRight+0x26>
 2ce:	00 00       	nop
 2d0:	08 95       	ret

000002d2 <turnLeft>:
 2d2:	83 ec       	ldi	r24, 0xC3	; 195
 2d4:	99 e0       	ldi	r25, 0x09	; 9
 2d6:	01 97       	sbiw	r24, 0x01	; 1
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <turnLeft+0x4>
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <turnLeft+0xa>
 2dc:	00 00       	nop
 2de:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <driveSpeedFull>
 2e2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
 2e6:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <turningSpeed>
 2ea:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
 2ee:	83 ec       	ldi	r24, 0xC3	; 195
 2f0:	99 e0       	ldi	r25, 0x09	; 9
 2f2:	01 97       	sbiw	r24, 0x01	; 1
 2f4:	f1 f7       	brne	.-4      	; 0x2f2 <turnLeft+0x20>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <turnLeft+0x26>
 2f8:	00 00       	nop
 2fa:	08 95       	ret

000002fc <turnLefty>:
 2fc:	83 ec       	ldi	r24, 0xC3	; 195
 2fe:	99 e0       	ldi	r25, 0x09	; 9
 300:	01 97       	sbiw	r24, 0x01	; 1
 302:	f1 f7       	brne	.-4      	; 0x300 <turnLefty+0x4>
 304:	00 c0       	rjmp	.+0      	; 0x306 <turnLefty+0xa>
 306:	00 00       	nop
 308:	8e e1       	ldi	r24, 0x1E	; 30
 30a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
 30e:	84 eb       	ldi	r24, 0xB4	; 180
 310:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
 314:	83 ec       	ldi	r24, 0xC3	; 195
 316:	99 e0       	ldi	r25, 0x09	; 9
 318:	01 97       	sbiw	r24, 0x01	; 1
 31a:	f1 f7       	brne	.-4      	; 0x318 <turnLefty+0x1c>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <turnLefty+0x22>
 31e:	00 00       	nop
 320:	08 95       	ret

00000322 <turnHardLeft>:
 322:	83 ec       	ldi	r24, 0xC3	; 195
 324:	99 e0       	ldi	r25, 0x09	; 9
 326:	01 97       	sbiw	r24, 0x01	; 1
 328:	f1 f7       	brne	.-4      	; 0x326 <turnHardLeft+0x4>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <turnHardLeft+0xa>
 32c:	00 00       	nop
 32e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <driveSpeedTruning>
 332:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
 336:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <hardTurningSPeed>
 33a:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
 33e:	83 ec       	ldi	r24, 0xC3	; 195
 340:	99 e0       	ldi	r25, 0x09	; 9
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	f1 f7       	brne	.-4      	; 0x342 <turnHardLeft+0x20>
 346:	00 c0       	rjmp	.+0      	; 0x348 <turnHardLeft+0x26>
 348:	00 00       	nop
 34a:	08 95       	ret

0000034c <move>:
 34c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <whiteOuterLimit>
 350:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <whiteOuterLimit+0x1>
 354:	82 17       	cp	r24, r18
 356:	93 07       	cpc	r25, r19
 358:	1c f4       	brge	.+6      	; 0x360 <move+0x14>
 35a:	0e 94 54 01 	call	0x2a8	; 0x2a8 <turnHardRight>
 35e:	08 95       	ret
 360:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <white_limit>
 364:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <white_limit+0x1>
 368:	82 17       	cp	r24, r18
 36a:	93 07       	cpc	r25, r19
 36c:	1c f4       	brge	.+6      	; 0x374 <move+0x28>
 36e:	0e 94 41 01 	call	0x282	; 0x282 <turnRighty>
 372:	08 95       	ret
 374:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <whiteInnerLimit>
 378:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <whiteInnerLimit+0x1>
 37c:	82 17       	cp	r24, r18
 37e:	93 07       	cpc	r25, r19
 380:	1c f4       	brge	.+6      	; 0x388 <move+0x3c>
 382:	0e 94 2c 01 	call	0x258	; 0x258 <turnRight>
 386:	08 95       	ret
 388:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <blackOuterLimit>
 38c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <blackOuterLimit+0x1>
 390:	28 17       	cp	r18, r24
 392:	39 07       	cpc	r19, r25
 394:	1c f4       	brge	.+6      	; 0x39c <move+0x50>
 396:	0e 94 91 01 	call	0x322	; 0x322 <turnHardLeft>
 39a:	08 95       	ret
 39c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <black_limit>
 3a0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <black_limit+0x1>
 3a4:	28 17       	cp	r18, r24
 3a6:	39 07       	cpc	r19, r25
 3a8:	1c f4       	brge	.+6      	; 0x3b0 <move+0x64>
 3aa:	0e 94 7e 01 	call	0x2fc	; 0x2fc <turnLefty>
 3ae:	08 95       	ret
 3b0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3b4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3b8:	28 17       	cp	r18, r24
 3ba:	39 07       	cpc	r19, r25
 3bc:	1c f4       	brge	.+6      	; 0x3c4 <move+0x78>
 3be:	0e 94 69 01 	call	0x2d2	; 0x2d2 <turnLeft>
 3c2:	08 95       	ret
 3c4:	0e 94 13 01 	call	0x226	; 0x226 <Forward>
 3c8:	08 95       	ret

000003ca <ultrasonic_init>:
#include "servo.h"
#include "usart.h"

void ultrasonic_init() {
	// Set trigger pin as output and echo pin as input for ultrasonic sensor
	DDRB |= (1 << TRIG_PIN); // Trigger pin as output
 3ca:	84 b1       	in	r24, 0x04	; 4
 3cc:	80 62       	ori	r24, 0x20	; 32
 3ce:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << ECHO_PIN); // Echo pin as input
 3d0:	84 b1       	in	r24, 0x04	; 4
 3d2:	8f 7e       	andi	r24, 0xEF	; 239
 3d4:	84 b9       	out	0x04, r24	; 4
 3d6:	08 95       	ret

000003d8 <timer1_init>:
}
void timer1_init(){
	TCCR1A = 0;
 3d8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B |= (0b010<<CS10);
 3dc:	e1 e8       	ldi	r30, 0x81	; 129
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	82 60       	ori	r24, 0x02	; 2
 3e4:	80 83       	st	Z, r24
 3e6:	08 95       	ret

000003e8 <measure_distance>:
	
}
int measure_distance() {
	// Send a 10us pulse to the ultrasonic sensor
	PORTB |= (1 << TRIG_PIN);
 3e8:	85 b1       	in	r24, 0x05	; 5
 3ea:	80 62       	ori	r24, 0x20	; 32
 3ec:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ee:	83 e0       	ldi	r24, 0x03	; 3
 3f0:	8a 95       	dec	r24
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <measure_distance+0x8>
 3f4:	00 00       	nop
	_delay_us(10);
	PORTB &= ~(1 << TRIG_PIN);
 3f6:	85 b1       	in	r24, 0x05	; 5
 3f8:	8f 7d       	andi	r24, 0xDF	; 223
 3fa:	85 b9       	out	0x05, r24	; 5

	// Measure pulse duration
	while (!(PINB & (1 << ECHO_PIN))); // Wait for echo pin to go high
 3fc:	1c 9b       	sbis	0x03, 4	; 3
 3fe:	fe cf       	rjmp	.-4      	; 0x3fc <measure_distance+0x14>
	TCNT1 = 0; // Record start time
 400:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 404:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	while (PINB & (1 << ECHO_PIN)); // Wait for echo pin to go low
 408:	1c 99       	sbic	0x03, 4	; 3
 40a:	fe cf       	rjmp	.-4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
	int time = TCNT1/2;
 40c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 410:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 414:	96 95       	lsr	r25
 416:	87 95       	ror	r24

	// Calculate distance in cm
	int distance = (int)(time / 29);
 418:	6d e1       	ldi	r22, 0x1D	; 29
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	0e 94 a2 02 	call	0x544	; 0x544 <__divmodhi4>
 420:	cb 01       	movw	r24, r22

	return distance;
}
 422:	08 95       	ret

00000424 <main>:
#include "collision.h"

int main(void)
{
    
	init_ADC();
 424:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ADC>
	init_USART(MYUBRR);
 428:	87 e6       	ldi	r24, 0x67	; 103
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	0e 94 97 00 	call	0x12e	; 0x12e <init_USART>
 	init_driving_PWM();
 430:	0e 94 e6 00 	call	0x1cc	; 0x1cc <init_driving_PWM>
	ultrasonic_init();
 434:	0e 94 e5 01 	call	0x3ca	; 0x3ca <ultrasonic_init>
	timer1_init();
 438:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <timer1_init>
	int16_t i = 0;
	char var;
	int distance;
	
	setMotorADirection(1);
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	0e 94 ff 00 	call	0x1fe	; 0x1fe <setMotorADirection>
	setMotorBDirection(1);
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	0e 94 09 01 	call	0x212	; 0x212 <setMotorBDirection>
	setMotorASpeed(0);
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
	setMotorBSpeed(0);
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
	
	sei();
 454:	78 94       	sei
	
  while (1) 
    {
		var = receiveMessage();
 456:	0e 94 dd 00 	call	0x1ba	; 0x1ba <receiveMessage>
		if(var == 'A' || var == 'B' || var == 'C'){receivedMessage = var;}
 45a:	9f eb       	ldi	r25, 0xBF	; 191
 45c:	98 0f       	add	r25, r24
 45e:	93 30       	cpi	r25, 0x03	; 3
 460:	08 f0       	brcs	.+2      	; 0x464 <main+0x40>
 462:	4c c0       	rjmp	.+152    	; 0x4fc <main+0xd8>
 464:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 468:	49 c0       	rjmp	.+146    	; 0x4fc <main+0xd8>
		
		while(receivedMessage == 'A'){
			int sensorLeft = (int)(readADC(SENSOR_LEFT_CHANNEL) - 30);
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 470:	4e 97       	sbiw	r24, 0x1e	; 30
 472:	6c 01       	movw	r12, r24
			int lineTrackingSensorLeft = (int)readADC(LINE_TRACKING_SENSOR_LEFT_CHANNEL);
 474:	85 e0       	ldi	r24, 0x05	; 5
 476:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 47a:	ec 01       	movw	r28, r24
			int lineTrackingSensorMiddle = (int)readADC(LINE_TRACKING_SENSOR_MIDDLE_CHANNEL);
 47c:	82 e0       	ldi	r24, 0x02	; 2
 47e:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 482:	7c 01       	movw	r14, r24
			int lineTrackingSensorRight = (int)(readADC(LINE_TRACKING_SENSOR_RIGHT_CHANNEL) - 30);
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 48a:	8c 01       	movw	r16, r24
 48c:	0e 51       	subi	r16, 0x1E	; 30
 48e:	11 09       	sbc	r17, r1
			int sensorRight = (int)(readADC(SENSOR_RIGHT_CHANNEL) - 20);
 490:	83 e0       	ldi	r24, 0x03	; 3
 492:	0e 94 61 00 	call	0xc2	; 0xc2 <readADC>
 496:	44 97       	sbiw	r24, 0x14	; 20
			
			int averageValue = (int)((sensorLeft + lineTrackingSensorLeft + lineTrackingSensorMiddle + lineTrackingSensorRight +sensorRight) / 5);
 498:	96 01       	movw	r18, r12
 49a:	2c 0f       	add	r18, r28
 49c:	3d 1f       	adc	r19, r29
 49e:	e7 01       	movw	r28, r14
 4a0:	c2 0f       	add	r28, r18
 4a2:	d3 1f       	adc	r29, r19
 4a4:	c0 0f       	add	r28, r16
 4a6:	d1 1f       	adc	r29, r17
 4a8:	8c 0f       	add	r24, r28
 4aa:	9d 1f       	adc	r25, r29
 4ac:	65 e0       	ldi	r22, 0x05	; 5
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	0e 94 a2 02 	call	0x544	; 0x544 <__divmodhi4>
 4b4:	8b 01       	movw	r16, r22
			
			distance = measure_distance();
 4b6:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <measure_distance>
 4ba:	ec 01       	movw	r28, r24
			transferMessage(distance);
 4bc:	0e 94 a2 00 	call	0x144	; 0x144 <transferMessage>
			custom_delay_ms(10);
 4c0:	8a e0       	ldi	r24, 0x0A	; 10
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0e 94 76 00 	call	0xec	; 0xec <custom_delay_ms>
			if(distance < 60){
 4c8:	ec 97       	sbiw	r28, 0x3c	; 60
 4ca:	6c f4       	brge	.+26     	; 0x4e6 <main+0xc2>
				setMotorBSpeed(0);
 4cc:	80 e0       	ldi	r24, 0x00	; 0
 4ce:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
				setMotorASpeed(0);
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
				distance = measure_distance();
 4d8:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <measure_distance>
				custom_delay_ms(10);
 4dc:	8a e0       	ldi	r24, 0x0A	; 10
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	0e 94 76 00 	call	0xec	; 0xec <custom_delay_ms>
 4e4:	03 c0       	rjmp	.+6      	; 0x4ec <main+0xc8>
			}else{
			move(averageValue);
 4e6:	c8 01       	movw	r24, r16
 4e8:	0e 94 a6 01 	call	0x34c	; 0x34c <move>
		}
			var = receiveMessage();
 4ec:	0e 94 dd 00 	call	0x1ba	; 0x1ba <receiveMessage>
			if(var == 'B' || var == 'C'){receivedMessage = var;}
 4f0:	9e eb       	ldi	r25, 0xBE	; 190
 4f2:	98 0f       	add	r25, r24
 4f4:	92 30       	cpi	r25, 0x02	; 2
 4f6:	10 f4       	brcc	.+4      	; 0x4fc <main+0xd8>
 4f8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
  while (1) 
    {
		var = receiveMessage();
		if(var == 'A' || var == 'B' || var == 'C'){receivedMessage = var;}
		
		while(receivedMessage == 'A'){
 4fc:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 500:	81 34       	cpi	r24, 0x41	; 65
 502:	09 f4       	brne	.+2      	; 0x506 <main+0xe2>
 504:	b2 cf       	rjmp	.-156    	; 0x46a <main+0x46>
			move(averageValue);
		}
			var = receiveMessage();
			if(var == 'B' || var == 'C'){receivedMessage = var;}
		}
		setMotorASpeed(0);
 506:	80 e0       	ldi	r24, 0x00	; 0
 508:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <setMotorASpeed>
		setMotorBSpeed(0);
 50c:	80 e0       	ldi	r24, 0x00	; 0
 50e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <setMotorBSpeed>
		if(receivedMessage == 'B'){
 512:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 516:	82 34       	cpi	r24, 0x42	; 66
 518:	81 f4       	brne	.+32     	; 0x53a <main+0x116>
			custom_delay_ms(5000);
 51a:	88 e8       	ldi	r24, 0x88	; 136
 51c:	93 e1       	ldi	r25, 0x13	; 19
 51e:	0e 94 76 00 	call	0xec	; 0xec <custom_delay_ms>
			receivedMessage = 'A';
 522:	81 e4       	ldi	r24, 0x41	; 65
 524:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 528:	08 c0       	rjmp	.+16     	; 0x53a <main+0x116>
		}
		while(receivedMessage == 'C'){
			var = receiveMessage();
 52a:	0e 94 dd 00 	call	0x1ba	; 0x1ba <receiveMessage>
			if(var == 'A' || var == 'B'){receivedMessage =var;}
 52e:	9f eb       	ldi	r25, 0xBF	; 191
 530:	98 0f       	add	r25, r24
 532:	92 30       	cpi	r25, 0x02	; 2
 534:	10 f4       	brcc	.+4      	; 0x53a <main+0x116>
 536:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
		setMotorBSpeed(0);
		if(receivedMessage == 'B'){
			custom_delay_ms(5000);
			receivedMessage = 'A';
		}
		while(receivedMessage == 'C'){
 53a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 53e:	83 34       	cpi	r24, 0x43	; 67
 540:	a1 f3       	breq	.-24     	; 0x52a <main+0x106>
 542:	89 cf       	rjmp	.-238    	; 0x456 <main+0x32>

00000544 <__divmodhi4>:
 544:	97 fb       	bst	r25, 7
 546:	07 2e       	mov	r0, r23
 548:	16 f4       	brtc	.+4      	; 0x54e <__divmodhi4+0xa>
 54a:	00 94       	com	r0
 54c:	07 d0       	rcall	.+14     	; 0x55c <__divmodhi4_neg1>
 54e:	77 fd       	sbrc	r23, 7
 550:	09 d0       	rcall	.+18     	; 0x564 <__divmodhi4_neg2>
 552:	0e 94 b6 02 	call	0x56c	; 0x56c <__udivmodhi4>
 556:	07 fc       	sbrc	r0, 7
 558:	05 d0       	rcall	.+10     	; 0x564 <__divmodhi4_neg2>
 55a:	3e f4       	brtc	.+14     	; 0x56a <__divmodhi4_exit>

0000055c <__divmodhi4_neg1>:
 55c:	90 95       	com	r25
 55e:	81 95       	neg	r24
 560:	9f 4f       	sbci	r25, 0xFF	; 255
 562:	08 95       	ret

00000564 <__divmodhi4_neg2>:
 564:	70 95       	com	r23
 566:	61 95       	neg	r22
 568:	7f 4f       	sbci	r23, 0xFF	; 255

0000056a <__divmodhi4_exit>:
 56a:	08 95       	ret

0000056c <__udivmodhi4>:
 56c:	aa 1b       	sub	r26, r26
 56e:	bb 1b       	sub	r27, r27
 570:	51 e1       	ldi	r21, 0x11	; 17
 572:	07 c0       	rjmp	.+14     	; 0x582 <__udivmodhi4_ep>

00000574 <__udivmodhi4_loop>:
 574:	aa 1f       	adc	r26, r26
 576:	bb 1f       	adc	r27, r27
 578:	a6 17       	cp	r26, r22
 57a:	b7 07       	cpc	r27, r23
 57c:	10 f0       	brcs	.+4      	; 0x582 <__udivmodhi4_ep>
 57e:	a6 1b       	sub	r26, r22
 580:	b7 0b       	sbc	r27, r23

00000582 <__udivmodhi4_ep>:
 582:	88 1f       	adc	r24, r24
 584:	99 1f       	adc	r25, r25
 586:	5a 95       	dec	r21
 588:	a9 f7       	brne	.-22     	; 0x574 <__udivmodhi4_loop>
 58a:	80 95       	com	r24
 58c:	90 95       	com	r25
 58e:	bc 01       	movw	r22, r24
 590:	cd 01       	movw	r24, r26
 592:	08 95       	ret

00000594 <snprintf>:
 594:	ae e0       	ldi	r26, 0x0E	; 14
 596:	b0 e0       	ldi	r27, 0x00	; 0
 598:	e0 ed       	ldi	r30, 0xD0	; 208
 59a:	f2 e0       	ldi	r31, 0x02	; 2
 59c:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__prologue_saves__+0x1c>
 5a0:	0d 89       	ldd	r16, Y+21	; 0x15
 5a2:	1e 89       	ldd	r17, Y+22	; 0x16
 5a4:	8f 89       	ldd	r24, Y+23	; 0x17
 5a6:	98 8d       	ldd	r25, Y+24	; 0x18
 5a8:	26 e0       	ldi	r18, 0x06	; 6
 5aa:	2c 83       	std	Y+4, r18	; 0x04
 5ac:	1a 83       	std	Y+2, r17	; 0x02
 5ae:	09 83       	std	Y+1, r16	; 0x01
 5b0:	97 ff       	sbrs	r25, 7
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <snprintf+0x24>
 5b4:	80 e0       	ldi	r24, 0x00	; 0
 5b6:	90 e8       	ldi	r25, 0x80	; 128
 5b8:	01 97       	sbiw	r24, 0x01	; 1
 5ba:	9e 83       	std	Y+6, r25	; 0x06
 5bc:	8d 83       	std	Y+5, r24	; 0x05
 5be:	ae 01       	movw	r20, r28
 5c0:	45 5e       	subi	r20, 0xE5	; 229
 5c2:	5f 4f       	sbci	r21, 0xFF	; 255
 5c4:	69 8d       	ldd	r22, Y+25	; 0x19
 5c6:	7a 8d       	ldd	r23, Y+26	; 0x1a
 5c8:	ce 01       	movw	r24, r28
 5ca:	01 96       	adiw	r24, 0x01	; 1
 5cc:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <vfprintf>
 5d0:	4d 81       	ldd	r20, Y+5	; 0x05
 5d2:	5e 81       	ldd	r21, Y+6	; 0x06
 5d4:	57 fd       	sbrc	r21, 7
 5d6:	0a c0       	rjmp	.+20     	; 0x5ec <snprintf+0x58>
 5d8:	2f 81       	ldd	r18, Y+7	; 0x07
 5da:	38 85       	ldd	r19, Y+8	; 0x08
 5dc:	42 17       	cp	r20, r18
 5de:	53 07       	cpc	r21, r19
 5e0:	0c f4       	brge	.+2      	; 0x5e4 <snprintf+0x50>
 5e2:	9a 01       	movw	r18, r20
 5e4:	f8 01       	movw	r30, r16
 5e6:	e2 0f       	add	r30, r18
 5e8:	f3 1f       	adc	r31, r19
 5ea:	10 82       	st	Z, r1
 5ec:	2e 96       	adiw	r28, 0x0e	; 14
 5ee:	e4 e0       	ldi	r30, 0x04	; 4
 5f0:	0c 94 b5 05 	jmp	0xb6a	; 0xb6a <__epilogue_restores__+0x1c>

000005f4 <vfprintf>:
 5f4:	ab e0       	ldi	r26, 0x0B	; 11
 5f6:	b0 e0       	ldi	r27, 0x00	; 0
 5f8:	e0 e0       	ldi	r30, 0x00	; 0
 5fa:	f3 e0       	ldi	r31, 0x03	; 3
 5fc:	0c 94 8b 05 	jmp	0xb16	; 0xb16 <__prologue_saves__>
 600:	6c 01       	movw	r12, r24
 602:	7b 01       	movw	r14, r22
 604:	8a 01       	movw	r16, r20
 606:	fc 01       	movw	r30, r24
 608:	17 82       	std	Z+7, r1	; 0x07
 60a:	16 82       	std	Z+6, r1	; 0x06
 60c:	83 81       	ldd	r24, Z+3	; 0x03
 60e:	81 ff       	sbrs	r24, 1
 610:	cc c1       	rjmp	.+920    	; 0x9aa <__stack+0xab>
 612:	ce 01       	movw	r24, r28
 614:	01 96       	adiw	r24, 0x01	; 1
 616:	3c 01       	movw	r6, r24
 618:	f6 01       	movw	r30, r12
 61a:	93 81       	ldd	r25, Z+3	; 0x03
 61c:	f7 01       	movw	r30, r14
 61e:	93 fd       	sbrc	r25, 3
 620:	85 91       	lpm	r24, Z+
 622:	93 ff       	sbrs	r25, 3
 624:	81 91       	ld	r24, Z+
 626:	7f 01       	movw	r14, r30
 628:	88 23       	and	r24, r24
 62a:	09 f4       	brne	.+2      	; 0x62e <vfprintf+0x3a>
 62c:	ba c1       	rjmp	.+884    	; 0x9a2 <__stack+0xa3>
 62e:	85 32       	cpi	r24, 0x25	; 37
 630:	39 f4       	brne	.+14     	; 0x640 <vfprintf+0x4c>
 632:	93 fd       	sbrc	r25, 3
 634:	85 91       	lpm	r24, Z+
 636:	93 ff       	sbrs	r25, 3
 638:	81 91       	ld	r24, Z+
 63a:	7f 01       	movw	r14, r30
 63c:	85 32       	cpi	r24, 0x25	; 37
 63e:	29 f4       	brne	.+10     	; 0x64a <vfprintf+0x56>
 640:	b6 01       	movw	r22, r12
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 648:	e7 cf       	rjmp	.-50     	; 0x618 <vfprintf+0x24>
 64a:	91 2c       	mov	r9, r1
 64c:	21 2c       	mov	r2, r1
 64e:	31 2c       	mov	r3, r1
 650:	ff e1       	ldi	r31, 0x1F	; 31
 652:	f3 15       	cp	r31, r3
 654:	d8 f0       	brcs	.+54     	; 0x68c <vfprintf+0x98>
 656:	8b 32       	cpi	r24, 0x2B	; 43
 658:	79 f0       	breq	.+30     	; 0x678 <vfprintf+0x84>
 65a:	38 f4       	brcc	.+14     	; 0x66a <vfprintf+0x76>
 65c:	80 32       	cpi	r24, 0x20	; 32
 65e:	79 f0       	breq	.+30     	; 0x67e <vfprintf+0x8a>
 660:	83 32       	cpi	r24, 0x23	; 35
 662:	a1 f4       	brne	.+40     	; 0x68c <vfprintf+0x98>
 664:	23 2d       	mov	r18, r3
 666:	20 61       	ori	r18, 0x10	; 16
 668:	1d c0       	rjmp	.+58     	; 0x6a4 <vfprintf+0xb0>
 66a:	8d 32       	cpi	r24, 0x2D	; 45
 66c:	61 f0       	breq	.+24     	; 0x686 <vfprintf+0x92>
 66e:	80 33       	cpi	r24, 0x30	; 48
 670:	69 f4       	brne	.+26     	; 0x68c <vfprintf+0x98>
 672:	23 2d       	mov	r18, r3
 674:	21 60       	ori	r18, 0x01	; 1
 676:	16 c0       	rjmp	.+44     	; 0x6a4 <vfprintf+0xb0>
 678:	83 2d       	mov	r24, r3
 67a:	82 60       	ori	r24, 0x02	; 2
 67c:	38 2e       	mov	r3, r24
 67e:	e3 2d       	mov	r30, r3
 680:	e4 60       	ori	r30, 0x04	; 4
 682:	3e 2e       	mov	r3, r30
 684:	2a c0       	rjmp	.+84     	; 0x6da <vfprintf+0xe6>
 686:	f3 2d       	mov	r31, r3
 688:	f8 60       	ori	r31, 0x08	; 8
 68a:	1d c0       	rjmp	.+58     	; 0x6c6 <vfprintf+0xd2>
 68c:	37 fc       	sbrc	r3, 7
 68e:	2d c0       	rjmp	.+90     	; 0x6ea <vfprintf+0xf6>
 690:	20 ed       	ldi	r18, 0xD0	; 208
 692:	28 0f       	add	r18, r24
 694:	2a 30       	cpi	r18, 0x0A	; 10
 696:	40 f0       	brcs	.+16     	; 0x6a8 <vfprintf+0xb4>
 698:	8e 32       	cpi	r24, 0x2E	; 46
 69a:	b9 f4       	brne	.+46     	; 0x6ca <vfprintf+0xd6>
 69c:	36 fc       	sbrc	r3, 6
 69e:	81 c1       	rjmp	.+770    	; 0x9a2 <__stack+0xa3>
 6a0:	23 2d       	mov	r18, r3
 6a2:	20 64       	ori	r18, 0x40	; 64
 6a4:	32 2e       	mov	r3, r18
 6a6:	19 c0       	rjmp	.+50     	; 0x6da <vfprintf+0xe6>
 6a8:	36 fe       	sbrs	r3, 6
 6aa:	06 c0       	rjmp	.+12     	; 0x6b8 <vfprintf+0xc4>
 6ac:	8a e0       	ldi	r24, 0x0A	; 10
 6ae:	98 9e       	mul	r9, r24
 6b0:	20 0d       	add	r18, r0
 6b2:	11 24       	eor	r1, r1
 6b4:	92 2e       	mov	r9, r18
 6b6:	11 c0       	rjmp	.+34     	; 0x6da <vfprintf+0xe6>
 6b8:	ea e0       	ldi	r30, 0x0A	; 10
 6ba:	2e 9e       	mul	r2, r30
 6bc:	20 0d       	add	r18, r0
 6be:	11 24       	eor	r1, r1
 6c0:	22 2e       	mov	r2, r18
 6c2:	f3 2d       	mov	r31, r3
 6c4:	f0 62       	ori	r31, 0x20	; 32
 6c6:	3f 2e       	mov	r3, r31
 6c8:	08 c0       	rjmp	.+16     	; 0x6da <vfprintf+0xe6>
 6ca:	8c 36       	cpi	r24, 0x6C	; 108
 6cc:	21 f4       	brne	.+8      	; 0x6d6 <vfprintf+0xe2>
 6ce:	83 2d       	mov	r24, r3
 6d0:	80 68       	ori	r24, 0x80	; 128
 6d2:	38 2e       	mov	r3, r24
 6d4:	02 c0       	rjmp	.+4      	; 0x6da <vfprintf+0xe6>
 6d6:	88 36       	cpi	r24, 0x68	; 104
 6d8:	41 f4       	brne	.+16     	; 0x6ea <vfprintf+0xf6>
 6da:	f7 01       	movw	r30, r14
 6dc:	93 fd       	sbrc	r25, 3
 6de:	85 91       	lpm	r24, Z+
 6e0:	93 ff       	sbrs	r25, 3
 6e2:	81 91       	ld	r24, Z+
 6e4:	7f 01       	movw	r14, r30
 6e6:	81 11       	cpse	r24, r1
 6e8:	b3 cf       	rjmp	.-154    	; 0x650 <vfprintf+0x5c>
 6ea:	98 2f       	mov	r25, r24
 6ec:	9f 7d       	andi	r25, 0xDF	; 223
 6ee:	95 54       	subi	r25, 0x45	; 69
 6f0:	93 30       	cpi	r25, 0x03	; 3
 6f2:	28 f4       	brcc	.+10     	; 0x6fe <vfprintf+0x10a>
 6f4:	0c 5f       	subi	r16, 0xFC	; 252
 6f6:	1f 4f       	sbci	r17, 0xFF	; 255
 6f8:	9f e3       	ldi	r25, 0x3F	; 63
 6fa:	99 83       	std	Y+1, r25	; 0x01
 6fc:	0d c0       	rjmp	.+26     	; 0x718 <vfprintf+0x124>
 6fe:	83 36       	cpi	r24, 0x63	; 99
 700:	31 f0       	breq	.+12     	; 0x70e <vfprintf+0x11a>
 702:	83 37       	cpi	r24, 0x73	; 115
 704:	71 f0       	breq	.+28     	; 0x722 <vfprintf+0x12e>
 706:	83 35       	cpi	r24, 0x53	; 83
 708:	09 f0       	breq	.+2      	; 0x70c <vfprintf+0x118>
 70a:	59 c0       	rjmp	.+178    	; 0x7be <vfprintf+0x1ca>
 70c:	21 c0       	rjmp	.+66     	; 0x750 <vfprintf+0x15c>
 70e:	f8 01       	movw	r30, r16
 710:	80 81       	ld	r24, Z
 712:	89 83       	std	Y+1, r24	; 0x01
 714:	0e 5f       	subi	r16, 0xFE	; 254
 716:	1f 4f       	sbci	r17, 0xFF	; 255
 718:	88 24       	eor	r8, r8
 71a:	83 94       	inc	r8
 71c:	91 2c       	mov	r9, r1
 71e:	53 01       	movw	r10, r6
 720:	13 c0       	rjmp	.+38     	; 0x748 <vfprintf+0x154>
 722:	28 01       	movw	r4, r16
 724:	f2 e0       	ldi	r31, 0x02	; 2
 726:	4f 0e       	add	r4, r31
 728:	51 1c       	adc	r5, r1
 72a:	f8 01       	movw	r30, r16
 72c:	a0 80       	ld	r10, Z
 72e:	b1 80       	ldd	r11, Z+1	; 0x01
 730:	36 fe       	sbrs	r3, 6
 732:	03 c0       	rjmp	.+6      	; 0x73a <vfprintf+0x146>
 734:	69 2d       	mov	r22, r9
 736:	70 e0       	ldi	r23, 0x00	; 0
 738:	02 c0       	rjmp	.+4      	; 0x73e <vfprintf+0x14a>
 73a:	6f ef       	ldi	r22, 0xFF	; 255
 73c:	7f ef       	ldi	r23, 0xFF	; 255
 73e:	c5 01       	movw	r24, r10
 740:	0e 94 e6 04 	call	0x9cc	; 0x9cc <strnlen>
 744:	4c 01       	movw	r8, r24
 746:	82 01       	movw	r16, r4
 748:	f3 2d       	mov	r31, r3
 74a:	ff 77       	andi	r31, 0x7F	; 127
 74c:	3f 2e       	mov	r3, r31
 74e:	16 c0       	rjmp	.+44     	; 0x77c <vfprintf+0x188>
 750:	28 01       	movw	r4, r16
 752:	22 e0       	ldi	r18, 0x02	; 2
 754:	42 0e       	add	r4, r18
 756:	51 1c       	adc	r5, r1
 758:	f8 01       	movw	r30, r16
 75a:	a0 80       	ld	r10, Z
 75c:	b1 80       	ldd	r11, Z+1	; 0x01
 75e:	36 fe       	sbrs	r3, 6
 760:	03 c0       	rjmp	.+6      	; 0x768 <vfprintf+0x174>
 762:	69 2d       	mov	r22, r9
 764:	70 e0       	ldi	r23, 0x00	; 0
 766:	02 c0       	rjmp	.+4      	; 0x76c <vfprintf+0x178>
 768:	6f ef       	ldi	r22, 0xFF	; 255
 76a:	7f ef       	ldi	r23, 0xFF	; 255
 76c:	c5 01       	movw	r24, r10
 76e:	0e 94 db 04 	call	0x9b6	; 0x9b6 <strnlen_P>
 772:	4c 01       	movw	r8, r24
 774:	f3 2d       	mov	r31, r3
 776:	f0 68       	ori	r31, 0x80	; 128
 778:	3f 2e       	mov	r3, r31
 77a:	82 01       	movw	r16, r4
 77c:	33 fc       	sbrc	r3, 3
 77e:	1b c0       	rjmp	.+54     	; 0x7b6 <vfprintf+0x1c2>
 780:	82 2d       	mov	r24, r2
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	88 16       	cp	r8, r24
 786:	99 06       	cpc	r9, r25
 788:	b0 f4       	brcc	.+44     	; 0x7b6 <vfprintf+0x1c2>
 78a:	b6 01       	movw	r22, r12
 78c:	80 e2       	ldi	r24, 0x20	; 32
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 794:	2a 94       	dec	r2
 796:	f4 cf       	rjmp	.-24     	; 0x780 <vfprintf+0x18c>
 798:	f5 01       	movw	r30, r10
 79a:	37 fc       	sbrc	r3, 7
 79c:	85 91       	lpm	r24, Z+
 79e:	37 fe       	sbrs	r3, 7
 7a0:	81 91       	ld	r24, Z+
 7a2:	5f 01       	movw	r10, r30
 7a4:	b6 01       	movw	r22, r12
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 7ac:	21 10       	cpse	r2, r1
 7ae:	2a 94       	dec	r2
 7b0:	21 e0       	ldi	r18, 0x01	; 1
 7b2:	82 1a       	sub	r8, r18
 7b4:	91 08       	sbc	r9, r1
 7b6:	81 14       	cp	r8, r1
 7b8:	91 04       	cpc	r9, r1
 7ba:	71 f7       	brne	.-36     	; 0x798 <vfprintf+0x1a4>
 7bc:	e8 c0       	rjmp	.+464    	; 0x98e <__stack+0x8f>
 7be:	84 36       	cpi	r24, 0x64	; 100
 7c0:	11 f0       	breq	.+4      	; 0x7c6 <vfprintf+0x1d2>
 7c2:	89 36       	cpi	r24, 0x69	; 105
 7c4:	41 f5       	brne	.+80     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7c6:	f8 01       	movw	r30, r16
 7c8:	37 fe       	sbrs	r3, 7
 7ca:	07 c0       	rjmp	.+14     	; 0x7da <vfprintf+0x1e6>
 7cc:	60 81       	ld	r22, Z
 7ce:	71 81       	ldd	r23, Z+1	; 0x01
 7d0:	82 81       	ldd	r24, Z+2	; 0x02
 7d2:	93 81       	ldd	r25, Z+3	; 0x03
 7d4:	0c 5f       	subi	r16, 0xFC	; 252
 7d6:	1f 4f       	sbci	r17, 0xFF	; 255
 7d8:	08 c0       	rjmp	.+16     	; 0x7ea <vfprintf+0x1f6>
 7da:	60 81       	ld	r22, Z
 7dc:	71 81       	ldd	r23, Z+1	; 0x01
 7de:	07 2e       	mov	r0, r23
 7e0:	00 0c       	add	r0, r0
 7e2:	88 0b       	sbc	r24, r24
 7e4:	99 0b       	sbc	r25, r25
 7e6:	0e 5f       	subi	r16, 0xFE	; 254
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	f3 2d       	mov	r31, r3
 7ec:	ff 76       	andi	r31, 0x6F	; 111
 7ee:	3f 2e       	mov	r3, r31
 7f0:	97 ff       	sbrs	r25, 7
 7f2:	09 c0       	rjmp	.+18     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7f4:	90 95       	com	r25
 7f6:	80 95       	com	r24
 7f8:	70 95       	com	r23
 7fa:	61 95       	neg	r22
 7fc:	7f 4f       	sbci	r23, 0xFF	; 255
 7fe:	8f 4f       	sbci	r24, 0xFF	; 255
 800:	9f 4f       	sbci	r25, 0xFF	; 255
 802:	f0 68       	ori	r31, 0x80	; 128
 804:	3f 2e       	mov	r3, r31
 806:	2a e0       	ldi	r18, 0x0A	; 10
 808:	30 e0       	ldi	r19, 0x00	; 0
 80a:	a3 01       	movw	r20, r6
 80c:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__ultoa_invert>
 810:	88 2e       	mov	r8, r24
 812:	86 18       	sub	r8, r6
 814:	45 c0       	rjmp	.+138    	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 816:	85 37       	cpi	r24, 0x75	; 117
 818:	31 f4       	brne	.+12     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 81a:	23 2d       	mov	r18, r3
 81c:	2f 7e       	andi	r18, 0xEF	; 239
 81e:	b2 2e       	mov	r11, r18
 820:	2a e0       	ldi	r18, 0x0A	; 10
 822:	30 e0       	ldi	r19, 0x00	; 0
 824:	25 c0       	rjmp	.+74     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 826:	93 2d       	mov	r25, r3
 828:	99 7f       	andi	r25, 0xF9	; 249
 82a:	b9 2e       	mov	r11, r25
 82c:	8f 36       	cpi	r24, 0x6F	; 111
 82e:	c1 f0       	breq	.+48     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 830:	18 f4       	brcc	.+6      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 832:	88 35       	cpi	r24, 0x58	; 88
 834:	79 f0       	breq	.+30     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 836:	b5 c0       	rjmp	.+362    	; 0x9a2 <__stack+0xa3>
 838:	80 37       	cpi	r24, 0x70	; 112
 83a:	19 f0       	breq	.+6      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 83c:	88 37       	cpi	r24, 0x78	; 120
 83e:	21 f0       	breq	.+8      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 840:	b0 c0       	rjmp	.+352    	; 0x9a2 <__stack+0xa3>
 842:	e9 2f       	mov	r30, r25
 844:	e0 61       	ori	r30, 0x10	; 16
 846:	be 2e       	mov	r11, r30
 848:	b4 fe       	sbrs	r11, 4
 84a:	0d c0       	rjmp	.+26     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 84c:	fb 2d       	mov	r31, r11
 84e:	f4 60       	ori	r31, 0x04	; 4
 850:	bf 2e       	mov	r11, r31
 852:	09 c0       	rjmp	.+18     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 854:	34 fe       	sbrs	r3, 4
 856:	0a c0       	rjmp	.+20     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 858:	29 2f       	mov	r18, r25
 85a:	26 60       	ori	r18, 0x06	; 6
 85c:	b2 2e       	mov	r11, r18
 85e:	06 c0       	rjmp	.+12     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 860:	28 e0       	ldi	r18, 0x08	; 8
 862:	30 e0       	ldi	r19, 0x00	; 0
 864:	05 c0       	rjmp	.+10     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 866:	20 e1       	ldi	r18, 0x10	; 16
 868:	30 e0       	ldi	r19, 0x00	; 0
 86a:	02 c0       	rjmp	.+4      	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 86c:	20 e1       	ldi	r18, 0x10	; 16
 86e:	32 e0       	ldi	r19, 0x02	; 2
 870:	f8 01       	movw	r30, r16
 872:	b7 fe       	sbrs	r11, 7
 874:	07 c0       	rjmp	.+14     	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 876:	60 81       	ld	r22, Z
 878:	71 81       	ldd	r23, Z+1	; 0x01
 87a:	82 81       	ldd	r24, Z+2	; 0x02
 87c:	93 81       	ldd	r25, Z+3	; 0x03
 87e:	0c 5f       	subi	r16, 0xFC	; 252
 880:	1f 4f       	sbci	r17, 0xFF	; 255
 882:	06 c0       	rjmp	.+12     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 884:	60 81       	ld	r22, Z
 886:	71 81       	ldd	r23, Z+1	; 0x01
 888:	80 e0       	ldi	r24, 0x00	; 0
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	0e 5f       	subi	r16, 0xFE	; 254
 88e:	1f 4f       	sbci	r17, 0xFF	; 255
 890:	a3 01       	movw	r20, r6
 892:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__ultoa_invert>
 896:	88 2e       	mov	r8, r24
 898:	86 18       	sub	r8, r6
 89a:	fb 2d       	mov	r31, r11
 89c:	ff 77       	andi	r31, 0x7F	; 127
 89e:	3f 2e       	mov	r3, r31
 8a0:	36 fe       	sbrs	r3, 6
 8a2:	0d c0       	rjmp	.+26     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8a4:	23 2d       	mov	r18, r3
 8a6:	2e 7f       	andi	r18, 0xFE	; 254
 8a8:	a2 2e       	mov	r10, r18
 8aa:	89 14       	cp	r8, r9
 8ac:	58 f4       	brcc	.+22     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8ae:	34 fe       	sbrs	r3, 4
 8b0:	0b c0       	rjmp	.+22     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 8b2:	32 fc       	sbrc	r3, 2
 8b4:	09 c0       	rjmp	.+18     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 8b6:	83 2d       	mov	r24, r3
 8b8:	8e 7e       	andi	r24, 0xEE	; 238
 8ba:	a8 2e       	mov	r10, r24
 8bc:	05 c0       	rjmp	.+10     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 8be:	b8 2c       	mov	r11, r8
 8c0:	a3 2c       	mov	r10, r3
 8c2:	03 c0       	rjmp	.+6      	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8c4:	b8 2c       	mov	r11, r8
 8c6:	01 c0       	rjmp	.+2      	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8c8:	b9 2c       	mov	r11, r9
 8ca:	a4 fe       	sbrs	r10, 4
 8cc:	0f c0       	rjmp	.+30     	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
 8ce:	fe 01       	movw	r30, r28
 8d0:	e8 0d       	add	r30, r8
 8d2:	f1 1d       	adc	r31, r1
 8d4:	80 81       	ld	r24, Z
 8d6:	80 33       	cpi	r24, 0x30	; 48
 8d8:	21 f4       	brne	.+8      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8da:	9a 2d       	mov	r25, r10
 8dc:	99 7e       	andi	r25, 0xE9	; 233
 8de:	a9 2e       	mov	r10, r25
 8e0:	09 c0       	rjmp	.+18     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 8e2:	a2 fe       	sbrs	r10, 2
 8e4:	06 c0       	rjmp	.+12     	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
 8e6:	b3 94       	inc	r11
 8e8:	b3 94       	inc	r11
 8ea:	04 c0       	rjmp	.+8      	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 8ec:	8a 2d       	mov	r24, r10
 8ee:	86 78       	andi	r24, 0x86	; 134
 8f0:	09 f0       	breq	.+2      	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 8f2:	b3 94       	inc	r11
 8f4:	a3 fc       	sbrc	r10, 3
 8f6:	11 c0       	rjmp	.+34     	; 0x91a <__stack+0x1b>
 8f8:	a0 fe       	sbrs	r10, 0
 8fa:	06 c0       	rjmp	.+12     	; 0x908 <__stack+0x9>
 8fc:	b2 14       	cp	r11, r2
 8fe:	88 f4       	brcc	.+34     	; 0x922 <__stack+0x23>
 900:	28 0c       	add	r2, r8
 902:	92 2c       	mov	r9, r2
 904:	9b 18       	sub	r9, r11
 906:	0e c0       	rjmp	.+28     	; 0x924 <__stack+0x25>
 908:	b2 14       	cp	r11, r2
 90a:	60 f4       	brcc	.+24     	; 0x924 <__stack+0x25>
 90c:	b6 01       	movw	r22, r12
 90e:	80 e2       	ldi	r24, 0x20	; 32
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 916:	b3 94       	inc	r11
 918:	f7 cf       	rjmp	.-18     	; 0x908 <__stack+0x9>
 91a:	b2 14       	cp	r11, r2
 91c:	18 f4       	brcc	.+6      	; 0x924 <__stack+0x25>
 91e:	2b 18       	sub	r2, r11
 920:	02 c0       	rjmp	.+4      	; 0x926 <__stack+0x27>
 922:	98 2c       	mov	r9, r8
 924:	21 2c       	mov	r2, r1
 926:	a4 fe       	sbrs	r10, 4
 928:	10 c0       	rjmp	.+32     	; 0x94a <__stack+0x4b>
 92a:	b6 01       	movw	r22, r12
 92c:	80 e3       	ldi	r24, 0x30	; 48
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 934:	a2 fe       	sbrs	r10, 2
 936:	17 c0       	rjmp	.+46     	; 0x966 <__stack+0x67>
 938:	a1 fc       	sbrc	r10, 1
 93a:	03 c0       	rjmp	.+6      	; 0x942 <__stack+0x43>
 93c:	88 e7       	ldi	r24, 0x78	; 120
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	02 c0       	rjmp	.+4      	; 0x946 <__stack+0x47>
 942:	88 e5       	ldi	r24, 0x58	; 88
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	b6 01       	movw	r22, r12
 948:	0c c0       	rjmp	.+24     	; 0x962 <__stack+0x63>
 94a:	8a 2d       	mov	r24, r10
 94c:	86 78       	andi	r24, 0x86	; 134
 94e:	59 f0       	breq	.+22     	; 0x966 <__stack+0x67>
 950:	a1 fe       	sbrs	r10, 1
 952:	02 c0       	rjmp	.+4      	; 0x958 <__stack+0x59>
 954:	8b e2       	ldi	r24, 0x2B	; 43
 956:	01 c0       	rjmp	.+2      	; 0x95a <__stack+0x5b>
 958:	80 e2       	ldi	r24, 0x20	; 32
 95a:	a7 fc       	sbrc	r10, 7
 95c:	8d e2       	ldi	r24, 0x2D	; 45
 95e:	b6 01       	movw	r22, r12
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 966:	89 14       	cp	r8, r9
 968:	38 f4       	brcc	.+14     	; 0x978 <__stack+0x79>
 96a:	b6 01       	movw	r22, r12
 96c:	80 e3       	ldi	r24, 0x30	; 48
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 974:	9a 94       	dec	r9
 976:	f7 cf       	rjmp	.-18     	; 0x966 <__stack+0x67>
 978:	8a 94       	dec	r8
 97a:	f3 01       	movw	r30, r6
 97c:	e8 0d       	add	r30, r8
 97e:	f1 1d       	adc	r31, r1
 980:	80 81       	ld	r24, Z
 982:	b6 01       	movw	r22, r12
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 98a:	81 10       	cpse	r8, r1
 98c:	f5 cf       	rjmp	.-22     	; 0x978 <__stack+0x79>
 98e:	22 20       	and	r2, r2
 990:	09 f4       	brne	.+2      	; 0x994 <__stack+0x95>
 992:	42 ce       	rjmp	.-892    	; 0x618 <vfprintf+0x24>
 994:	b6 01       	movw	r22, r12
 996:	80 e2       	ldi	r24, 0x20	; 32
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 99e:	2a 94       	dec	r2
 9a0:	f6 cf       	rjmp	.-20     	; 0x98e <__stack+0x8f>
 9a2:	f6 01       	movw	r30, r12
 9a4:	86 81       	ldd	r24, Z+6	; 0x06
 9a6:	97 81       	ldd	r25, Z+7	; 0x07
 9a8:	02 c0       	rjmp	.+4      	; 0x9ae <__stack+0xaf>
 9aa:	8f ef       	ldi	r24, 0xFF	; 255
 9ac:	9f ef       	ldi	r25, 0xFF	; 255
 9ae:	2b 96       	adiw	r28, 0x0b	; 11
 9b0:	e2 e1       	ldi	r30, 0x12	; 18
 9b2:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__epilogue_restores__>

000009b6 <strnlen_P>:
 9b6:	fc 01       	movw	r30, r24
 9b8:	05 90       	lpm	r0, Z+
 9ba:	61 50       	subi	r22, 0x01	; 1
 9bc:	70 40       	sbci	r23, 0x00	; 0
 9be:	01 10       	cpse	r0, r1
 9c0:	d8 f7       	brcc	.-10     	; 0x9b8 <strnlen_P+0x2>
 9c2:	80 95       	com	r24
 9c4:	90 95       	com	r25
 9c6:	8e 0f       	add	r24, r30
 9c8:	9f 1f       	adc	r25, r31
 9ca:	08 95       	ret

000009cc <strnlen>:
 9cc:	fc 01       	movw	r30, r24
 9ce:	61 50       	subi	r22, 0x01	; 1
 9d0:	70 40       	sbci	r23, 0x00	; 0
 9d2:	01 90       	ld	r0, Z+
 9d4:	01 10       	cpse	r0, r1
 9d6:	d8 f7       	brcc	.-10     	; 0x9ce <strnlen+0x2>
 9d8:	80 95       	com	r24
 9da:	90 95       	com	r25
 9dc:	8e 0f       	add	r24, r30
 9de:	9f 1f       	adc	r25, r31
 9e0:	08 95       	ret

000009e2 <fputc>:
 9e2:	0f 93       	push	r16
 9e4:	1f 93       	push	r17
 9e6:	cf 93       	push	r28
 9e8:	df 93       	push	r29
 9ea:	fb 01       	movw	r30, r22
 9ec:	23 81       	ldd	r18, Z+3	; 0x03
 9ee:	21 fd       	sbrc	r18, 1
 9f0:	03 c0       	rjmp	.+6      	; 0x9f8 <fputc+0x16>
 9f2:	8f ef       	ldi	r24, 0xFF	; 255
 9f4:	9f ef       	ldi	r25, 0xFF	; 255
 9f6:	2c c0       	rjmp	.+88     	; 0xa50 <fputc+0x6e>
 9f8:	22 ff       	sbrs	r18, 2
 9fa:	16 c0       	rjmp	.+44     	; 0xa28 <fputc+0x46>
 9fc:	46 81       	ldd	r20, Z+6	; 0x06
 9fe:	57 81       	ldd	r21, Z+7	; 0x07
 a00:	24 81       	ldd	r18, Z+4	; 0x04
 a02:	35 81       	ldd	r19, Z+5	; 0x05
 a04:	42 17       	cp	r20, r18
 a06:	53 07       	cpc	r21, r19
 a08:	44 f4       	brge	.+16     	; 0xa1a <fputc+0x38>
 a0a:	a0 81       	ld	r26, Z
 a0c:	b1 81       	ldd	r27, Z+1	; 0x01
 a0e:	9d 01       	movw	r18, r26
 a10:	2f 5f       	subi	r18, 0xFF	; 255
 a12:	3f 4f       	sbci	r19, 0xFF	; 255
 a14:	31 83       	std	Z+1, r19	; 0x01
 a16:	20 83       	st	Z, r18
 a18:	8c 93       	st	X, r24
 a1a:	26 81       	ldd	r18, Z+6	; 0x06
 a1c:	37 81       	ldd	r19, Z+7	; 0x07
 a1e:	2f 5f       	subi	r18, 0xFF	; 255
 a20:	3f 4f       	sbci	r19, 0xFF	; 255
 a22:	37 83       	std	Z+7, r19	; 0x07
 a24:	26 83       	std	Z+6, r18	; 0x06
 a26:	14 c0       	rjmp	.+40     	; 0xa50 <fputc+0x6e>
 a28:	8b 01       	movw	r16, r22
 a2a:	ec 01       	movw	r28, r24
 a2c:	fb 01       	movw	r30, r22
 a2e:	00 84       	ldd	r0, Z+8	; 0x08
 a30:	f1 85       	ldd	r31, Z+9	; 0x09
 a32:	e0 2d       	mov	r30, r0
 a34:	09 95       	icall
 a36:	89 2b       	or	r24, r25
 a38:	e1 f6       	brne	.-72     	; 0x9f2 <fputc+0x10>
 a3a:	d8 01       	movw	r26, r16
 a3c:	16 96       	adiw	r26, 0x06	; 6
 a3e:	8d 91       	ld	r24, X+
 a40:	9c 91       	ld	r25, X
 a42:	17 97       	sbiw	r26, 0x07	; 7
 a44:	01 96       	adiw	r24, 0x01	; 1
 a46:	17 96       	adiw	r26, 0x07	; 7
 a48:	9c 93       	st	X, r25
 a4a:	8e 93       	st	-X, r24
 a4c:	16 97       	sbiw	r26, 0x06	; 6
 a4e:	ce 01       	movw	r24, r28
 a50:	df 91       	pop	r29
 a52:	cf 91       	pop	r28
 a54:	1f 91       	pop	r17
 a56:	0f 91       	pop	r16
 a58:	08 95       	ret

00000a5a <__ultoa_invert>:
 a5a:	fa 01       	movw	r30, r20
 a5c:	aa 27       	eor	r26, r26
 a5e:	28 30       	cpi	r18, 0x08	; 8
 a60:	51 f1       	breq	.+84     	; 0xab6 <__ultoa_invert+0x5c>
 a62:	20 31       	cpi	r18, 0x10	; 16
 a64:	81 f1       	breq	.+96     	; 0xac6 <__ultoa_invert+0x6c>
 a66:	e8 94       	clt
 a68:	6f 93       	push	r22
 a6a:	6e 7f       	andi	r22, 0xFE	; 254
 a6c:	6e 5f       	subi	r22, 0xFE	; 254
 a6e:	7f 4f       	sbci	r23, 0xFF	; 255
 a70:	8f 4f       	sbci	r24, 0xFF	; 255
 a72:	9f 4f       	sbci	r25, 0xFF	; 255
 a74:	af 4f       	sbci	r26, 0xFF	; 255
 a76:	b1 e0       	ldi	r27, 0x01	; 1
 a78:	3e d0       	rcall	.+124    	; 0xaf6 <__ultoa_invert+0x9c>
 a7a:	b4 e0       	ldi	r27, 0x04	; 4
 a7c:	3c d0       	rcall	.+120    	; 0xaf6 <__ultoa_invert+0x9c>
 a7e:	67 0f       	add	r22, r23
 a80:	78 1f       	adc	r23, r24
 a82:	89 1f       	adc	r24, r25
 a84:	9a 1f       	adc	r25, r26
 a86:	a1 1d       	adc	r26, r1
 a88:	68 0f       	add	r22, r24
 a8a:	79 1f       	adc	r23, r25
 a8c:	8a 1f       	adc	r24, r26
 a8e:	91 1d       	adc	r25, r1
 a90:	a1 1d       	adc	r26, r1
 a92:	6a 0f       	add	r22, r26
 a94:	71 1d       	adc	r23, r1
 a96:	81 1d       	adc	r24, r1
 a98:	91 1d       	adc	r25, r1
 a9a:	a1 1d       	adc	r26, r1
 a9c:	20 d0       	rcall	.+64     	; 0xade <__ultoa_invert+0x84>
 a9e:	09 f4       	brne	.+2      	; 0xaa2 <__ultoa_invert+0x48>
 aa0:	68 94       	set
 aa2:	3f 91       	pop	r19
 aa4:	2a e0       	ldi	r18, 0x0A	; 10
 aa6:	26 9f       	mul	r18, r22
 aa8:	11 24       	eor	r1, r1
 aaa:	30 19       	sub	r19, r0
 aac:	30 5d       	subi	r19, 0xD0	; 208
 aae:	31 93       	st	Z+, r19
 ab0:	de f6       	brtc	.-74     	; 0xa68 <__ultoa_invert+0xe>
 ab2:	cf 01       	movw	r24, r30
 ab4:	08 95       	ret
 ab6:	46 2f       	mov	r20, r22
 ab8:	47 70       	andi	r20, 0x07	; 7
 aba:	40 5d       	subi	r20, 0xD0	; 208
 abc:	41 93       	st	Z+, r20
 abe:	b3 e0       	ldi	r27, 0x03	; 3
 ac0:	0f d0       	rcall	.+30     	; 0xae0 <__ultoa_invert+0x86>
 ac2:	c9 f7       	brne	.-14     	; 0xab6 <__ultoa_invert+0x5c>
 ac4:	f6 cf       	rjmp	.-20     	; 0xab2 <__ultoa_invert+0x58>
 ac6:	46 2f       	mov	r20, r22
 ac8:	4f 70       	andi	r20, 0x0F	; 15
 aca:	40 5d       	subi	r20, 0xD0	; 208
 acc:	4a 33       	cpi	r20, 0x3A	; 58
 ace:	18 f0       	brcs	.+6      	; 0xad6 <__ultoa_invert+0x7c>
 ad0:	49 5d       	subi	r20, 0xD9	; 217
 ad2:	31 fd       	sbrc	r19, 1
 ad4:	40 52       	subi	r20, 0x20	; 32
 ad6:	41 93       	st	Z+, r20
 ad8:	02 d0       	rcall	.+4      	; 0xade <__ultoa_invert+0x84>
 ada:	a9 f7       	brne	.-22     	; 0xac6 <__ultoa_invert+0x6c>
 adc:	ea cf       	rjmp	.-44     	; 0xab2 <__ultoa_invert+0x58>
 ade:	b4 e0       	ldi	r27, 0x04	; 4
 ae0:	a6 95       	lsr	r26
 ae2:	97 95       	ror	r25
 ae4:	87 95       	ror	r24
 ae6:	77 95       	ror	r23
 ae8:	67 95       	ror	r22
 aea:	ba 95       	dec	r27
 aec:	c9 f7       	brne	.-14     	; 0xae0 <__ultoa_invert+0x86>
 aee:	00 97       	sbiw	r24, 0x00	; 0
 af0:	61 05       	cpc	r22, r1
 af2:	71 05       	cpc	r23, r1
 af4:	08 95       	ret
 af6:	9b 01       	movw	r18, r22
 af8:	ac 01       	movw	r20, r24
 afa:	0a 2e       	mov	r0, r26
 afc:	06 94       	lsr	r0
 afe:	57 95       	ror	r21
 b00:	47 95       	ror	r20
 b02:	37 95       	ror	r19
 b04:	27 95       	ror	r18
 b06:	ba 95       	dec	r27
 b08:	c9 f7       	brne	.-14     	; 0xafc <__ultoa_invert+0xa2>
 b0a:	62 0f       	add	r22, r18
 b0c:	73 1f       	adc	r23, r19
 b0e:	84 1f       	adc	r24, r20
 b10:	95 1f       	adc	r25, r21
 b12:	a0 1d       	adc	r26, r0
 b14:	08 95       	ret

00000b16 <__prologue_saves__>:
 b16:	2f 92       	push	r2
 b18:	3f 92       	push	r3
 b1a:	4f 92       	push	r4
 b1c:	5f 92       	push	r5
 b1e:	6f 92       	push	r6
 b20:	7f 92       	push	r7
 b22:	8f 92       	push	r8
 b24:	9f 92       	push	r9
 b26:	af 92       	push	r10
 b28:	bf 92       	push	r11
 b2a:	cf 92       	push	r12
 b2c:	df 92       	push	r13
 b2e:	ef 92       	push	r14
 b30:	ff 92       	push	r15
 b32:	0f 93       	push	r16
 b34:	1f 93       	push	r17
 b36:	cf 93       	push	r28
 b38:	df 93       	push	r29
 b3a:	cd b7       	in	r28, 0x3d	; 61
 b3c:	de b7       	in	r29, 0x3e	; 62
 b3e:	ca 1b       	sub	r28, r26
 b40:	db 0b       	sbc	r29, r27
 b42:	0f b6       	in	r0, 0x3f	; 63
 b44:	f8 94       	cli
 b46:	de bf       	out	0x3e, r29	; 62
 b48:	0f be       	out	0x3f, r0	; 63
 b4a:	cd bf       	out	0x3d, r28	; 61
 b4c:	09 94       	ijmp

00000b4e <__epilogue_restores__>:
 b4e:	2a 88       	ldd	r2, Y+18	; 0x12
 b50:	39 88       	ldd	r3, Y+17	; 0x11
 b52:	48 88       	ldd	r4, Y+16	; 0x10
 b54:	5f 84       	ldd	r5, Y+15	; 0x0f
 b56:	6e 84       	ldd	r6, Y+14	; 0x0e
 b58:	7d 84       	ldd	r7, Y+13	; 0x0d
 b5a:	8c 84       	ldd	r8, Y+12	; 0x0c
 b5c:	9b 84       	ldd	r9, Y+11	; 0x0b
 b5e:	aa 84       	ldd	r10, Y+10	; 0x0a
 b60:	b9 84       	ldd	r11, Y+9	; 0x09
 b62:	c8 84       	ldd	r12, Y+8	; 0x08
 b64:	df 80       	ldd	r13, Y+7	; 0x07
 b66:	ee 80       	ldd	r14, Y+6	; 0x06
 b68:	fd 80       	ldd	r15, Y+5	; 0x05
 b6a:	0c 81       	ldd	r16, Y+4	; 0x04
 b6c:	1b 81       	ldd	r17, Y+3	; 0x03
 b6e:	aa 81       	ldd	r26, Y+2	; 0x02
 b70:	b9 81       	ldd	r27, Y+1	; 0x01
 b72:	ce 0f       	add	r28, r30
 b74:	d1 1d       	adc	r29, r1
 b76:	0f b6       	in	r0, 0x3f	; 63
 b78:	f8 94       	cli
 b7a:	de bf       	out	0x3e, r29	; 62
 b7c:	0f be       	out	0x3f, r0	; 63
 b7e:	cd bf       	out	0x3d, r28	; 61
 b80:	ed 01       	movw	r28, r26
 b82:	08 95       	ret

00000b84 <_exit>:
 b84:	f8 94       	cli

00000b86 <__stop_program>:
 b86:	ff cf       	rjmp	.-2      	; 0xb86 <__stop_program>
